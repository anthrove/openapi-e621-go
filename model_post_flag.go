/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws).

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PostFlag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostFlag{}

// PostFlag struct for PostFlag
type PostFlag struct {
	Id         int32         `json:"id"`
	CreatedAt  time.Time     `json:"created_at"`
	PostId     int32         `json:"post_id"`
	Reason     string        `json:"reason"`
	CreatorId  NullableInt32 `json:"creator_id"`
	IsResolved bool          `json:"is_resolved"`
	UpdatedAt  time.Time     `json:"updated_at"`
	IsDeletion bool          `json:"is_deletion"`
	Type       string        `json:"type"`
}

type _PostFlag PostFlag

// NewPostFlag instantiates a new PostFlag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostFlag(id int32, createdAt time.Time, postId int32, reason string, creatorId NullableInt32, isResolved bool, updatedAt time.Time, isDeletion bool, type_ string) *PostFlag {
	this := PostFlag{}
	this.Id = id
	this.CreatedAt = createdAt
	this.PostId = postId
	this.Reason = reason
	this.CreatorId = creatorId
	this.IsResolved = isResolved
	this.UpdatedAt = updatedAt
	this.IsDeletion = isDeletion
	this.Type = type_
	return &this
}

// NewPostFlagWithDefaults instantiates a new PostFlag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostFlagWithDefaults() *PostFlag {
	this := PostFlag{}
	return &this
}

// GetId returns the Id field value
func (o *PostFlag) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PostFlag) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PostFlag) SetId(v int32) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PostFlag) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PostFlag) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PostFlag) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetPostId returns the PostId field value
func (o *PostFlag) GetPostId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PostId
}

// GetPostIdOk returns a tuple with the PostId field value
// and a boolean to check if the value has been set.
func (o *PostFlag) GetPostIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostId, true
}

// SetPostId sets field value
func (o *PostFlag) SetPostId(v int32) {
	o.PostId = v
}

// GetReason returns the Reason field value
func (o *PostFlag) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *PostFlag) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *PostFlag) SetReason(v string) {
	o.Reason = v
}

// GetCreatorId returns the CreatorId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PostFlag) GetCreatorId() int32 {
	if o == nil || o.CreatorId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.CreatorId.Get()
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostFlag) GetCreatorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorId.Get(), o.CreatorId.IsSet()
}

// SetCreatorId sets field value
func (o *PostFlag) SetCreatorId(v int32) {
	o.CreatorId.Set(&v)
}

// GetIsResolved returns the IsResolved field value
func (o *PostFlag) GetIsResolved() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsResolved
}

// GetIsResolvedOk returns a tuple with the IsResolved field value
// and a boolean to check if the value has been set.
func (o *PostFlag) GetIsResolvedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsResolved, true
}

// SetIsResolved sets field value
func (o *PostFlag) SetIsResolved(v bool) {
	o.IsResolved = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PostFlag) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PostFlag) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PostFlag) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsDeletion returns the IsDeletion field value
func (o *PostFlag) GetIsDeletion() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeletion
}

// GetIsDeletionOk returns a tuple with the IsDeletion field value
// and a boolean to check if the value has been set.
func (o *PostFlag) GetIsDeletionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeletion, true
}

// SetIsDeletion sets field value
func (o *PostFlag) SetIsDeletion(v bool) {
	o.IsDeletion = v
}

// GetType returns the Type field value
func (o *PostFlag) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PostFlag) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PostFlag) SetType(v string) {
	o.Type = v
}

func (o PostFlag) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostFlag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["post_id"] = o.PostId
	toSerialize["reason"] = o.Reason
	toSerialize["creator_id"] = o.CreatorId.Get()
	toSerialize["is_resolved"] = o.IsResolved
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["is_deletion"] = o.IsDeletion
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *PostFlag) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"post_id",
		"reason",
		"creator_id",
		"is_resolved",
		"updated_at",
		"is_deletion",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostFlag := _PostFlag{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostFlag)

	if err != nil {
		return err
	}

	*o = PostFlag(varPostFlag)

	return err
}

type NullablePostFlag struct {
	value *PostFlag
	isSet bool
}

func (v NullablePostFlag) Get() *PostFlag {
	return v.value
}

func (v *NullablePostFlag) Set(val *PostFlag) {
	v.value = val
	v.isSet = true
}

func (v NullablePostFlag) IsSet() bool {
	return v.isSet
}

func (v *NullablePostFlag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostFlag(val *PostFlag) *NullablePostFlag {
	return &NullablePostFlag{value: val, isSet: true}
}

func (v NullablePostFlag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostFlag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
