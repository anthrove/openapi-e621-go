/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws). 

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi-e621-go

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the DeferredPost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeferredPost{}

// DeferredPost struct for DeferredPost
type DeferredPost struct {
	Id float32 `json:"id"`
	Flags string `json:"flags"`
	Tags string `json:"tags"`
	Rating Ratings `json:"rating"`
	FileExt string `json:"file_ext"`
	Width float32 `json:"width"`
	Height float32 `json:"height"`
	Size float32 `json:"size"`
	CreatedAt time.Time `json:"created_at"`
	Uploader string `json:"uploader"`
	UploaderId float32 `json:"uploader_id"`
	Score float32 `json:"score"`
	FavCount float32 `json:"fav_count"`
	IsFavorited bool `json:"is_favorited"`
	Pools []float32 `json:"pools"`
	Md5 string `json:"md5"`
	PreviewUrl NullableString `json:"preview_url"`
	LargeUrl NullableString `json:"large_url"`
	FileUrl NullableString `json:"file_url"`
	PreviewWidth float32 `json:"preview_width"`
	PreviewHeight float32 `json:"preview_height"`
}

type _DeferredPost DeferredPost

// NewDeferredPost instantiates a new DeferredPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeferredPost(id float32, flags string, tags string, rating Ratings, fileExt string, width float32, height float32, size float32, createdAt time.Time, uploader string, uploaderId float32, score float32, favCount float32, isFavorited bool, pools []float32, md5 string, previewUrl NullableString, largeUrl NullableString, fileUrl NullableString, previewWidth float32, previewHeight float32) *DeferredPost {
	this := DeferredPost{}
	this.Id = id
	this.Flags = flags
	this.Tags = tags
	this.Rating = rating
	this.FileExt = fileExt
	this.Width = width
	this.Height = height
	this.Size = size
	this.CreatedAt = createdAt
	this.Uploader = uploader
	this.UploaderId = uploaderId
	this.Score = score
	this.FavCount = favCount
	this.IsFavorited = isFavorited
	this.Pools = pools
	this.Md5 = md5
	this.PreviewUrl = previewUrl
	this.LargeUrl = largeUrl
	this.FileUrl = fileUrl
	this.PreviewWidth = previewWidth
	this.PreviewHeight = previewHeight
	return &this
}

// NewDeferredPostWithDefaults instantiates a new DeferredPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeferredPostWithDefaults() *DeferredPost {
	this := DeferredPost{}
	return &this
}

// GetId returns the Id field value
func (o *DeferredPost) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeferredPost) SetId(v float32) {
	o.Id = v
}

// GetFlags returns the Flags field value
func (o *DeferredPost) GetFlags() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetFlagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flags, true
}

// SetFlags sets field value
func (o *DeferredPost) SetFlags(v string) {
	o.Flags = v
}

// GetTags returns the Tags field value
func (o *DeferredPost) GetTags() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *DeferredPost) SetTags(v string) {
	o.Tags = v
}

// GetRating returns the Rating field value
func (o *DeferredPost) GetRating() Ratings {
	if o == nil {
		var ret Ratings
		return ret
	}

	return o.Rating
}

// GetRatingOk returns a tuple with the Rating field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetRatingOk() (*Ratings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rating, true
}

// SetRating sets field value
func (o *DeferredPost) SetRating(v Ratings) {
	o.Rating = v
}

// GetFileExt returns the FileExt field value
func (o *DeferredPost) GetFileExt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileExt
}

// GetFileExtOk returns a tuple with the FileExt field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetFileExtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileExt, true
}

// SetFileExt sets field value
func (o *DeferredPost) SetFileExt(v string) {
	o.FileExt = v
}

// GetWidth returns the Width field value
func (o *DeferredPost) GetWidth() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetWidthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *DeferredPost) SetWidth(v float32) {
	o.Width = v
}

// GetHeight returns the Height field value
func (o *DeferredPost) GetHeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetHeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *DeferredPost) SetHeight(v float32) {
	o.Height = v
}

// GetSize returns the Size field value
func (o *DeferredPost) GetSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *DeferredPost) SetSize(v float32) {
	o.Size = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DeferredPost) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DeferredPost) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUploader returns the Uploader field value
func (o *DeferredPost) GetUploader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uploader
}

// GetUploaderOk returns a tuple with the Uploader field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetUploaderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uploader, true
}

// SetUploader sets field value
func (o *DeferredPost) SetUploader(v string) {
	o.Uploader = v
}

// GetUploaderId returns the UploaderId field value
func (o *DeferredPost) GetUploaderId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UploaderId
}

// GetUploaderIdOk returns a tuple with the UploaderId field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetUploaderIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploaderId, true
}

// SetUploaderId sets field value
func (o *DeferredPost) SetUploaderId(v float32) {
	o.UploaderId = v
}

// GetScore returns the Score field value
func (o *DeferredPost) GetScore() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *DeferredPost) SetScore(v float32) {
	o.Score = v
}

// GetFavCount returns the FavCount field value
func (o *DeferredPost) GetFavCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FavCount
}

// GetFavCountOk returns a tuple with the FavCount field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetFavCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FavCount, true
}

// SetFavCount sets field value
func (o *DeferredPost) SetFavCount(v float32) {
	o.FavCount = v
}

// GetIsFavorited returns the IsFavorited field value
func (o *DeferredPost) GetIsFavorited() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFavorited
}

// GetIsFavoritedOk returns a tuple with the IsFavorited field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetIsFavoritedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFavorited, true
}

// SetIsFavorited sets field value
func (o *DeferredPost) SetIsFavorited(v bool) {
	o.IsFavorited = v
}

// GetPools returns the Pools field value
func (o *DeferredPost) GetPools() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.Pools
}

// GetPoolsOk returns a tuple with the Pools field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetPoolsOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pools, true
}

// SetPools sets field value
func (o *DeferredPost) SetPools(v []float32) {
	o.Pools = v
}

// GetMd5 returns the Md5 field value
func (o *DeferredPost) GetMd5() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetMd5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Md5, true
}

// SetMd5 sets field value
func (o *DeferredPost) SetMd5(v string) {
	o.Md5 = v
}

// GetPreviewUrl returns the PreviewUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeferredPost) GetPreviewUrl() string {
	if o == nil || o.PreviewUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.PreviewUrl.Get()
}

// GetPreviewUrlOk returns a tuple with the PreviewUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeferredPost) GetPreviewUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviewUrl.Get(), o.PreviewUrl.IsSet()
}

// SetPreviewUrl sets field value
func (o *DeferredPost) SetPreviewUrl(v string) {
	o.PreviewUrl.Set(&v)
}

// GetLargeUrl returns the LargeUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeferredPost) GetLargeUrl() string {
	if o == nil || o.LargeUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.LargeUrl.Get()
}

// GetLargeUrlOk returns a tuple with the LargeUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeferredPost) GetLargeUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LargeUrl.Get(), o.LargeUrl.IsSet()
}

// SetLargeUrl sets field value
func (o *DeferredPost) SetLargeUrl(v string) {
	o.LargeUrl.Set(&v)
}

// GetFileUrl returns the FileUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeferredPost) GetFileUrl() string {
	if o == nil || o.FileUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.FileUrl.Get()
}

// GetFileUrlOk returns a tuple with the FileUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeferredPost) GetFileUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileUrl.Get(), o.FileUrl.IsSet()
}

// SetFileUrl sets field value
func (o *DeferredPost) SetFileUrl(v string) {
	o.FileUrl.Set(&v)
}

// GetPreviewWidth returns the PreviewWidth field value
func (o *DeferredPost) GetPreviewWidth() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PreviewWidth
}

// GetPreviewWidthOk returns a tuple with the PreviewWidth field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetPreviewWidthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviewWidth, true
}

// SetPreviewWidth sets field value
func (o *DeferredPost) SetPreviewWidth(v float32) {
	o.PreviewWidth = v
}

// GetPreviewHeight returns the PreviewHeight field value
func (o *DeferredPost) GetPreviewHeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PreviewHeight
}

// GetPreviewHeightOk returns a tuple with the PreviewHeight field value
// and a boolean to check if the value has been set.
func (o *DeferredPost) GetPreviewHeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviewHeight, true
}

// SetPreviewHeight sets field value
func (o *DeferredPost) SetPreviewHeight(v float32) {
	o.PreviewHeight = v
}

func (o DeferredPost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeferredPost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["flags"] = o.Flags
	toSerialize["tags"] = o.Tags
	toSerialize["rating"] = o.Rating
	toSerialize["file_ext"] = o.FileExt
	toSerialize["width"] = o.Width
	toSerialize["height"] = o.Height
	toSerialize["size"] = o.Size
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["uploader"] = o.Uploader
	toSerialize["uploader_id"] = o.UploaderId
	toSerialize["score"] = o.Score
	toSerialize["fav_count"] = o.FavCount
	toSerialize["is_favorited"] = o.IsFavorited
	toSerialize["pools"] = o.Pools
	toSerialize["md5"] = o.Md5
	toSerialize["preview_url"] = o.PreviewUrl.Get()
	toSerialize["large_url"] = o.LargeUrl.Get()
	toSerialize["file_url"] = o.FileUrl.Get()
	toSerialize["preview_width"] = o.PreviewWidth
	toSerialize["preview_height"] = o.PreviewHeight
	return toSerialize, nil
}

func (o *DeferredPost) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"flags",
		"tags",
		"rating",
		"file_ext",
		"width",
		"height",
		"size",
		"created_at",
		"uploader",
		"uploader_id",
		"score",
		"fav_count",
		"is_favorited",
		"pools",
		"md5",
		"preview_url",
		"large_url",
		"file_url",
		"preview_width",
		"preview_height",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeferredPost := _DeferredPost{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeferredPost)

	if err != nil {
		return err
	}

	*o = DeferredPost(varDeferredPost)

	return err
}

type NullableDeferredPost struct {
	value *DeferredPost
	isSet bool
}

func (v NullableDeferredPost) Get() *DeferredPost {
	return v.value
}

func (v *NullableDeferredPost) Set(val *DeferredPost) {
	v.value = val
	v.isSet = true
}

func (v NullableDeferredPost) IsSet() bool {
	return v.isSet
}

func (v *NullableDeferredPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeferredPost(val *DeferredPost) *NullableDeferredPost {
	return &NullableDeferredPost{value: val, isSet: true}
}

func (v NullableDeferredPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeferredPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


