/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws). 

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi-e621-go

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AvoidPostingVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvoidPostingVersion{}

// AvoidPostingVersion struct for AvoidPostingVersion
type AvoidPostingVersion struct {
	Id float32 `json:"id"`
	UpdaterId float32 `json:"updater_id"`
	AvoidPostingId float32 `json:"avoid_posting_id"`
	Details string `json:"details"`
	// Only visible to Janitor+
	StaffNotes *string `json:"staff_notes,omitempty"`
	IsActive bool `json:"is_active"`
	UpdatedAt time.Time `json:"updated_at"`
}

type _AvoidPostingVersion AvoidPostingVersion

// NewAvoidPostingVersion instantiates a new AvoidPostingVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvoidPostingVersion(id float32, updaterId float32, avoidPostingId float32, details string, isActive bool, updatedAt time.Time) *AvoidPostingVersion {
	this := AvoidPostingVersion{}
	this.Id = id
	this.UpdaterId = updaterId
	this.AvoidPostingId = avoidPostingId
	this.Details = details
	this.IsActive = isActive
	this.UpdatedAt = updatedAt
	return &this
}

// NewAvoidPostingVersionWithDefaults instantiates a new AvoidPostingVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvoidPostingVersionWithDefaults() *AvoidPostingVersion {
	this := AvoidPostingVersion{}
	return &this
}

// GetId returns the Id field value
func (o *AvoidPostingVersion) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AvoidPostingVersion) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AvoidPostingVersion) SetId(v float32) {
	o.Id = v
}

// GetUpdaterId returns the UpdaterId field value
func (o *AvoidPostingVersion) GetUpdaterId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UpdaterId
}

// GetUpdaterIdOk returns a tuple with the UpdaterId field value
// and a boolean to check if the value has been set.
func (o *AvoidPostingVersion) GetUpdaterIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdaterId, true
}

// SetUpdaterId sets field value
func (o *AvoidPostingVersion) SetUpdaterId(v float32) {
	o.UpdaterId = v
}

// GetAvoidPostingId returns the AvoidPostingId field value
func (o *AvoidPostingVersion) GetAvoidPostingId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvoidPostingId
}

// GetAvoidPostingIdOk returns a tuple with the AvoidPostingId field value
// and a boolean to check if the value has been set.
func (o *AvoidPostingVersion) GetAvoidPostingIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvoidPostingId, true
}

// SetAvoidPostingId sets field value
func (o *AvoidPostingVersion) SetAvoidPostingId(v float32) {
	o.AvoidPostingId = v
}

// GetDetails returns the Details field value
func (o *AvoidPostingVersion) GetDetails() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *AvoidPostingVersion) GetDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *AvoidPostingVersion) SetDetails(v string) {
	o.Details = v
}

// GetStaffNotes returns the StaffNotes field value if set, zero value otherwise.
func (o *AvoidPostingVersion) GetStaffNotes() string {
	if o == nil || IsNil(o.StaffNotes) {
		var ret string
		return ret
	}
	return *o.StaffNotes
}

// GetStaffNotesOk returns a tuple with the StaffNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvoidPostingVersion) GetStaffNotesOk() (*string, bool) {
	if o == nil || IsNil(o.StaffNotes) {
		return nil, false
	}
	return o.StaffNotes, true
}

// HasStaffNotes returns a boolean if a field has been set.
func (o *AvoidPostingVersion) HasStaffNotes() bool {
	if o != nil && !IsNil(o.StaffNotes) {
		return true
	}

	return false
}

// SetStaffNotes gets a reference to the given string and assigns it to the StaffNotes field.
func (o *AvoidPostingVersion) SetStaffNotes(v string) {
	o.StaffNotes = &v
}

// GetIsActive returns the IsActive field value
func (o *AvoidPostingVersion) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *AvoidPostingVersion) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *AvoidPostingVersion) SetIsActive(v bool) {
	o.IsActive = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AvoidPostingVersion) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AvoidPostingVersion) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AvoidPostingVersion) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o AvoidPostingVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvoidPostingVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["updater_id"] = o.UpdaterId
	toSerialize["avoid_posting_id"] = o.AvoidPostingId
	toSerialize["details"] = o.Details
	if !IsNil(o.StaffNotes) {
		toSerialize["staff_notes"] = o.StaffNotes
	}
	toSerialize["is_active"] = o.IsActive
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *AvoidPostingVersion) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"updater_id",
		"avoid_posting_id",
		"details",
		"is_active",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAvoidPostingVersion := _AvoidPostingVersion{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAvoidPostingVersion)

	if err != nil {
		return err
	}

	*o = AvoidPostingVersion(varAvoidPostingVersion)

	return err
}

type NullableAvoidPostingVersion struct {
	value *AvoidPostingVersion
	isSet bool
}

func (v NullableAvoidPostingVersion) Get() *AvoidPostingVersion {
	return v.value
}

func (v *NullableAvoidPostingVersion) Set(val *AvoidPostingVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableAvoidPostingVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableAvoidPostingVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvoidPostingVersion(val *AvoidPostingVersion) *NullableAvoidPostingVersion {
	return &NullableAvoidPostingVersion{value: val, isSet: true}
}

func (v NullableAvoidPostingVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvoidPostingVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


