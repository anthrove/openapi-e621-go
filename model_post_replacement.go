/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws).

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PostReplacement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostReplacement{}

// PostReplacement struct for PostReplacement
type PostReplacement struct {
	Id          float32         `json:"id"`
	CreatedAt   time.Time       `json:"created_at"`
	UpdatedAt   time.Time       `json:"updated_at"`
	PostId      float32         `json:"post_id"`
	CreatorId   float32         `json:"creator_id"`
	ApproverId  NullableFloat32 `json:"approver_id"`
	FileExt     string          `json:"file_ext"`
	FileSize    float32         `json:"file_size"`
	ImageHeight float32         `json:"image_height"`
	ImageWidth  float32         `json:"image_width"`
	Md5         string          `json:"md5"`
	Source      string          `json:"source"`
	FileName    string          `json:"file_name"`
	Status      string          `json:"status"`
	Reason      string          `json:"reason"`
}

type _PostReplacement PostReplacement

// NewPostReplacement instantiates a new PostReplacement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostReplacement(id float32, createdAt time.Time, updatedAt time.Time, postId float32, creatorId float32, approverId NullableFloat32, fileExt string, fileSize float32, imageHeight float32, imageWidth float32, md5 string, source string, fileName string, status string, reason string) *PostReplacement {
	this := PostReplacement{}
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.PostId = postId
	this.CreatorId = creatorId
	this.ApproverId = approverId
	this.FileExt = fileExt
	this.FileSize = fileSize
	this.ImageHeight = imageHeight
	this.ImageWidth = imageWidth
	this.Md5 = md5
	this.Source = source
	this.FileName = fileName
	this.Status = status
	this.Reason = reason
	return &this
}

// NewPostReplacementWithDefaults instantiates a new PostReplacement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostReplacementWithDefaults() *PostReplacement {
	this := PostReplacement{}
	return &this
}

// GetId returns the Id field value
func (o *PostReplacement) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PostReplacement) SetId(v float32) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PostReplacement) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PostReplacement) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PostReplacement) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PostReplacement) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetPostId returns the PostId field value
func (o *PostReplacement) GetPostId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PostId
}

// GetPostIdOk returns a tuple with the PostId field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetPostIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostId, true
}

// SetPostId sets field value
func (o *PostReplacement) SetPostId(v float32) {
	o.PostId = v
}

// GetCreatorId returns the CreatorId field value
func (o *PostReplacement) GetCreatorId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetCreatorIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *PostReplacement) SetCreatorId(v float32) {
	o.CreatorId = v
}

// GetApproverId returns the ApproverId field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *PostReplacement) GetApproverId() float32 {
	if o == nil || o.ApproverId.Get() == nil {
		var ret float32
		return ret
	}

	return *o.ApproverId.Get()
}

// GetApproverIdOk returns a tuple with the ApproverId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostReplacement) GetApproverIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApproverId.Get(), o.ApproverId.IsSet()
}

// SetApproverId sets field value
func (o *PostReplacement) SetApproverId(v float32) {
	o.ApproverId.Set(&v)
}

// GetFileExt returns the FileExt field value
func (o *PostReplacement) GetFileExt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileExt
}

// GetFileExtOk returns a tuple with the FileExt field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetFileExtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileExt, true
}

// SetFileExt sets field value
func (o *PostReplacement) SetFileExt(v string) {
	o.FileExt = v
}

// GetFileSize returns the FileSize field value
func (o *PostReplacement) GetFileSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetFileSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileSize, true
}

// SetFileSize sets field value
func (o *PostReplacement) SetFileSize(v float32) {
	o.FileSize = v
}

// GetImageHeight returns the ImageHeight field value
func (o *PostReplacement) GetImageHeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ImageHeight
}

// GetImageHeightOk returns a tuple with the ImageHeight field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetImageHeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageHeight, true
}

// SetImageHeight sets field value
func (o *PostReplacement) SetImageHeight(v float32) {
	o.ImageHeight = v
}

// GetImageWidth returns the ImageWidth field value
func (o *PostReplacement) GetImageWidth() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ImageWidth
}

// GetImageWidthOk returns a tuple with the ImageWidth field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetImageWidthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageWidth, true
}

// SetImageWidth sets field value
func (o *PostReplacement) SetImageWidth(v float32) {
	o.ImageWidth = v
}

// GetMd5 returns the Md5 field value
func (o *PostReplacement) GetMd5() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetMd5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Md5, true
}

// SetMd5 sets field value
func (o *PostReplacement) SetMd5(v string) {
	o.Md5 = v
}

// GetSource returns the Source field value
func (o *PostReplacement) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *PostReplacement) SetSource(v string) {
	o.Source = v
}

// GetFileName returns the FileName field value
func (o *PostReplacement) GetFileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileName, true
}

// SetFileName sets field value
func (o *PostReplacement) SetFileName(v string) {
	o.FileName = v
}

// GetStatus returns the Status field value
func (o *PostReplacement) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PostReplacement) SetStatus(v string) {
	o.Status = v
}

// GetReason returns the Reason field value
func (o *PostReplacement) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *PostReplacement) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *PostReplacement) SetReason(v string) {
	o.Reason = v
}

func (o PostReplacement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostReplacement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["post_id"] = o.PostId
	toSerialize["creator_id"] = o.CreatorId
	toSerialize["approver_id"] = o.ApproverId.Get()
	toSerialize["file_ext"] = o.FileExt
	toSerialize["file_size"] = o.FileSize
	toSerialize["image_height"] = o.ImageHeight
	toSerialize["image_width"] = o.ImageWidth
	toSerialize["md5"] = o.Md5
	toSerialize["source"] = o.Source
	toSerialize["file_name"] = o.FileName
	toSerialize["status"] = o.Status
	toSerialize["reason"] = o.Reason
	return toSerialize, nil
}

func (o *PostReplacement) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"post_id",
		"creator_id",
		"approver_id",
		"file_ext",
		"file_size",
		"image_height",
		"image_width",
		"md5",
		"source",
		"file_name",
		"status",
		"reason",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostReplacement := _PostReplacement{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostReplacement)

	if err != nil {
		return err
	}

	*o = PostReplacement(varPostReplacement)

	return err
}

type NullablePostReplacement struct {
	value *PostReplacement
	isSet bool
}

func (v NullablePostReplacement) Get() *PostReplacement {
	return v.value
}

func (v *NullablePostReplacement) Set(val *PostReplacement) {
	v.value = val
	v.isSet = true
}

func (v NullablePostReplacement) IsSet() bool {
	return v.isSet
}

func (v *NullablePostReplacement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostReplacement(val *PostReplacement) *NullablePostReplacement {
	return &NullablePostReplacement{value: val, isSet: true}
}

func (v NullablePostReplacement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostReplacement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
