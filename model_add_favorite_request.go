/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws). 

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi-e621-go

import (
	"encoding/json"
)

// checks if the AddFavoriteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddFavoriteRequest{}

// AddFavoriteRequest struct for AddFavoriteRequest
type AddFavoriteRequest struct {
	PostUd *float32 `json:"post_ud,omitempty"`
}

// NewAddFavoriteRequest instantiates a new AddFavoriteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddFavoriteRequest() *AddFavoriteRequest {
	this := AddFavoriteRequest{}
	return &this
}

// NewAddFavoriteRequestWithDefaults instantiates a new AddFavoriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddFavoriteRequestWithDefaults() *AddFavoriteRequest {
	this := AddFavoriteRequest{}
	return &this
}

// GetPostUd returns the PostUd field value if set, zero value otherwise.
func (o *AddFavoriteRequest) GetPostUd() float32 {
	if o == nil || IsNil(o.PostUd) {
		var ret float32
		return ret
	}
	return *o.PostUd
}

// GetPostUdOk returns a tuple with the PostUd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddFavoriteRequest) GetPostUdOk() (*float32, bool) {
	if o == nil || IsNil(o.PostUd) {
		return nil, false
	}
	return o.PostUd, true
}

// HasPostUd returns a boolean if a field has been set.
func (o *AddFavoriteRequest) HasPostUd() bool {
	if o != nil && !IsNil(o.PostUd) {
		return true
	}

	return false
}

// SetPostUd gets a reference to the given float32 and assigns it to the PostUd field.
func (o *AddFavoriteRequest) SetPostUd(v float32) {
	o.PostUd = &v
}

func (o AddFavoriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddFavoriteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PostUd) {
		toSerialize["post_ud"] = o.PostUd
	}
	return toSerialize, nil
}

type NullableAddFavoriteRequest struct {
	value *AddFavoriteRequest
	isSet bool
}

func (v NullableAddFavoriteRequest) Get() *AddFavoriteRequest {
	return v.value
}

func (v *NullableAddFavoriteRequest) Set(val *AddFavoriteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddFavoriteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddFavoriteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddFavoriteRequest(val *AddFavoriteRequest) *NullableAddFavoriteRequest {
	return &NullableAddFavoriteRequest{value: val, isSet: true}
}

func (v NullableAddFavoriteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddFavoriteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


