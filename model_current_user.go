/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws).

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CurrentUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CurrentUser{}

// CurrentUser struct for CurrentUser
type CurrentUser struct {
	Id                               int32     `json:"id"`
	CreatedAt                        time.Time `json:"created_at"`
	Name                             string    `json:"name"`
	Level                            int32     `json:"level"`
	BaseUploadLimit                  int32     `json:"base_upload_limit"`
	PostUploadCount                  int32     `json:"post_upload_count"`
	PostUpdateCount                  int32     `json:"post_update_count"`
	NoteUpdateCount                  int32     `json:"note_update_count"`
	IsBanned                         bool      `json:"is_banned"`
	CanApprovePosts                  bool      `json:"can_approve_posts"`
	CanUploadFree                    bool      `json:"can_upload_free"`
	LevelString                      string    `json:"level_string"`
	AvatarId                         int32     `json:"avatar_id"`
	BlacklistUsers                   bool      `json:"blacklist_users"`
	DescriptionCollapsedInitially    bool      `json:"description_collapsed_initially"`
	HideComments                     bool      `json:"hide_comments"`
	ShowHiddenComments               bool      `json:"show_hidden_comments"`
	ShowPostStatistics               bool      `json:"show_post_statistics"`
	ReceiveEmailNotifications        bool      `json:"receive_email_notifications"`
	EnableKeyboardNavigation         bool      `json:"enable_keyboard_navigation"`
	EnablePrivacyMode                bool      `json:"enable_privacy_mode"`
	StyleUsernames                   bool      `json:"style_usernames"`
	EnableAutoComplete               bool      `json:"enable_auto_complete"`
	DisableCroppedThumbnails         bool      `json:"disable_cropped_thumbnails"`
	EnableSafeMode                   bool      `json:"enable_safe_mode"`
	DisableResponsiveMode            bool      `json:"disable_responsive_mode"`
	NoFlagging                       bool      `json:"no_flagging"`
	DisableUserDmails                bool      `json:"disable_user_dmails"`
	EnableCompactUploader            bool      `json:"enable_compact_uploader"`
	ReplacementsBeta                 bool      `json:"replacements_beta"`
	UpdatedAt                        time.Time `json:"updated_at"`
	Email                            string    `json:"email"`
	LastLoggedInAt                   time.Time `json:"last_logged_in_at"`
	LastForumReadAt                  time.Time `json:"last_forum_read_at"`
	RecentTags                       string    `json:"recent_tags"`
	CommentThreshold                 float32   `json:"comment_threshold"`
	DefaultImageSizedefaultImageSize *string   `json:"default_image_sizedefault_image_size,omitempty"`
	FavoriteTags                     string    `json:"favorite_tags"`
	BlacklistedTags                  string    `json:"blacklisted_tags"`
	TimeZone                         string    `json:"time_zone"`
	PerPage                          int32     `json:"per_page"`
	CustomStyle                      string    `json:"custom_style"`
	FavoriteCount                    int32     `json:"favorite_count"`
	ApiRegenMultiplier               float32   `json:"api_regen_multiplier"`
	ApiBurstLimit                    int32     `json:"api_burst_limit"`
	RemainingApiLimit                int32     `json:"remaining_api_limit"`
	StatementTimeout                 int32     `json:"statement_timeout"`
	FavoriteLimit                    int32     `json:"favorite_limit"`
	TagQueryLimit                    int32     `json:"tag_query_limit"`
	HasMail                          bool      `json:"has_mail"`
}

type _CurrentUser CurrentUser

// NewCurrentUser instantiates a new CurrentUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurrentUser(id int32, createdAt time.Time, name string, level int32, baseUploadLimit int32, postUploadCount int32, postUpdateCount int32, noteUpdateCount int32, isBanned bool, canApprovePosts bool, canUploadFree bool, levelString string, avatarId int32, blacklistUsers bool, descriptionCollapsedInitially bool, hideComments bool, showHiddenComments bool, showPostStatistics bool, receiveEmailNotifications bool, enableKeyboardNavigation bool, enablePrivacyMode bool, styleUsernames bool, enableAutoComplete bool, disableCroppedThumbnails bool, enableSafeMode bool, disableResponsiveMode bool, noFlagging bool, disableUserDmails bool, enableCompactUploader bool, replacementsBeta bool, updatedAt time.Time, email string, lastLoggedInAt time.Time, lastForumReadAt time.Time, recentTags string, commentThreshold float32, favoriteTags string, blacklistedTags string, timeZone string, perPage int32, customStyle string, favoriteCount int32, apiRegenMultiplier float32, apiBurstLimit int32, remainingApiLimit int32, statementTimeout int32, favoriteLimit int32, tagQueryLimit int32, hasMail bool) *CurrentUser {
	this := CurrentUser{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Name = name
	this.Level = level
	this.BaseUploadLimit = baseUploadLimit
	this.PostUploadCount = postUploadCount
	this.PostUpdateCount = postUpdateCount
	this.NoteUpdateCount = noteUpdateCount
	this.IsBanned = isBanned
	this.CanApprovePosts = canApprovePosts
	this.CanUploadFree = canUploadFree
	this.LevelString = levelString
	this.AvatarId = avatarId
	this.BlacklistUsers = blacklistUsers
	this.DescriptionCollapsedInitially = descriptionCollapsedInitially
	this.HideComments = hideComments
	this.ShowHiddenComments = showHiddenComments
	this.ShowPostStatistics = showPostStatistics
	this.ReceiveEmailNotifications = receiveEmailNotifications
	this.EnableKeyboardNavigation = enableKeyboardNavigation
	this.EnablePrivacyMode = enablePrivacyMode
	this.StyleUsernames = styleUsernames
	this.EnableAutoComplete = enableAutoComplete
	this.DisableCroppedThumbnails = disableCroppedThumbnails
	this.EnableSafeMode = enableSafeMode
	this.DisableResponsiveMode = disableResponsiveMode
	this.NoFlagging = noFlagging
	this.DisableUserDmails = disableUserDmails
	this.EnableCompactUploader = enableCompactUploader
	this.ReplacementsBeta = replacementsBeta
	this.UpdatedAt = updatedAt
	this.Email = email
	this.LastLoggedInAt = lastLoggedInAt
	this.LastForumReadAt = lastForumReadAt
	this.RecentTags = recentTags
	this.CommentThreshold = commentThreshold
	this.FavoriteTags = favoriteTags
	this.BlacklistedTags = blacklistedTags
	this.TimeZone = timeZone
	this.PerPage = perPage
	this.CustomStyle = customStyle
	this.FavoriteCount = favoriteCount
	this.ApiRegenMultiplier = apiRegenMultiplier
	this.ApiBurstLimit = apiBurstLimit
	this.RemainingApiLimit = remainingApiLimit
	this.StatementTimeout = statementTimeout
	this.FavoriteLimit = favoriteLimit
	this.TagQueryLimit = tagQueryLimit
	this.HasMail = hasMail
	return &this
}

// NewCurrentUserWithDefaults instantiates a new CurrentUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurrentUserWithDefaults() *CurrentUser {
	this := CurrentUser{}
	return &this
}

// GetId returns the Id field value
func (o *CurrentUser) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CurrentUser) SetId(v int32) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CurrentUser) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CurrentUser) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetName returns the Name field value
func (o *CurrentUser) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CurrentUser) SetName(v string) {
	o.Name = v
}

// GetLevel returns the Level field value
func (o *CurrentUser) GetLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *CurrentUser) SetLevel(v int32) {
	o.Level = v
}

// GetBaseUploadLimit returns the BaseUploadLimit field value
func (o *CurrentUser) GetBaseUploadLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BaseUploadLimit
}

// GetBaseUploadLimitOk returns a tuple with the BaseUploadLimit field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetBaseUploadLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseUploadLimit, true
}

// SetBaseUploadLimit sets field value
func (o *CurrentUser) SetBaseUploadLimit(v int32) {
	o.BaseUploadLimit = v
}

// GetPostUploadCount returns the PostUploadCount field value
func (o *CurrentUser) GetPostUploadCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PostUploadCount
}

// GetPostUploadCountOk returns a tuple with the PostUploadCount field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetPostUploadCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostUploadCount, true
}

// SetPostUploadCount sets field value
func (o *CurrentUser) SetPostUploadCount(v int32) {
	o.PostUploadCount = v
}

// GetPostUpdateCount returns the PostUpdateCount field value
func (o *CurrentUser) GetPostUpdateCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PostUpdateCount
}

// GetPostUpdateCountOk returns a tuple with the PostUpdateCount field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetPostUpdateCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostUpdateCount, true
}

// SetPostUpdateCount sets field value
func (o *CurrentUser) SetPostUpdateCount(v int32) {
	o.PostUpdateCount = v
}

// GetNoteUpdateCount returns the NoteUpdateCount field value
func (o *CurrentUser) GetNoteUpdateCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NoteUpdateCount
}

// GetNoteUpdateCountOk returns a tuple with the NoteUpdateCount field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetNoteUpdateCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NoteUpdateCount, true
}

// SetNoteUpdateCount sets field value
func (o *CurrentUser) SetNoteUpdateCount(v int32) {
	o.NoteUpdateCount = v
}

// GetIsBanned returns the IsBanned field value
func (o *CurrentUser) GetIsBanned() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBanned
}

// GetIsBannedOk returns a tuple with the IsBanned field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetIsBannedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBanned, true
}

// SetIsBanned sets field value
func (o *CurrentUser) SetIsBanned(v bool) {
	o.IsBanned = v
}

// GetCanApprovePosts returns the CanApprovePosts field value
func (o *CurrentUser) GetCanApprovePosts() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanApprovePosts
}

// GetCanApprovePostsOk returns a tuple with the CanApprovePosts field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetCanApprovePostsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanApprovePosts, true
}

// SetCanApprovePosts sets field value
func (o *CurrentUser) SetCanApprovePosts(v bool) {
	o.CanApprovePosts = v
}

// GetCanUploadFree returns the CanUploadFree field value
func (o *CurrentUser) GetCanUploadFree() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanUploadFree
}

// GetCanUploadFreeOk returns a tuple with the CanUploadFree field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetCanUploadFreeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanUploadFree, true
}

// SetCanUploadFree sets field value
func (o *CurrentUser) SetCanUploadFree(v bool) {
	o.CanUploadFree = v
}

// GetLevelString returns the LevelString field value
func (o *CurrentUser) GetLevelString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LevelString
}

// GetLevelStringOk returns a tuple with the LevelString field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetLevelStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LevelString, true
}

// SetLevelString sets field value
func (o *CurrentUser) SetLevelString(v string) {
	o.LevelString = v
}

// GetAvatarId returns the AvatarId field value
func (o *CurrentUser) GetAvatarId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AvatarId
}

// GetAvatarIdOk returns a tuple with the AvatarId field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetAvatarIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvatarId, true
}

// SetAvatarId sets field value
func (o *CurrentUser) SetAvatarId(v int32) {
	o.AvatarId = v
}

// GetBlacklistUsers returns the BlacklistUsers field value
func (o *CurrentUser) GetBlacklistUsers() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BlacklistUsers
}

// GetBlacklistUsersOk returns a tuple with the BlacklistUsers field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetBlacklistUsersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlacklistUsers, true
}

// SetBlacklistUsers sets field value
func (o *CurrentUser) SetBlacklistUsers(v bool) {
	o.BlacklistUsers = v
}

// GetDescriptionCollapsedInitially returns the DescriptionCollapsedInitially field value
func (o *CurrentUser) GetDescriptionCollapsedInitially() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DescriptionCollapsedInitially
}

// GetDescriptionCollapsedInitiallyOk returns a tuple with the DescriptionCollapsedInitially field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetDescriptionCollapsedInitiallyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DescriptionCollapsedInitially, true
}

// SetDescriptionCollapsedInitially sets field value
func (o *CurrentUser) SetDescriptionCollapsedInitially(v bool) {
	o.DescriptionCollapsedInitially = v
}

// GetHideComments returns the HideComments field value
func (o *CurrentUser) GetHideComments() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HideComments
}

// GetHideCommentsOk returns a tuple with the HideComments field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetHideCommentsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HideComments, true
}

// SetHideComments sets field value
func (o *CurrentUser) SetHideComments(v bool) {
	o.HideComments = v
}

// GetShowHiddenComments returns the ShowHiddenComments field value
func (o *CurrentUser) GetShowHiddenComments() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShowHiddenComments
}

// GetShowHiddenCommentsOk returns a tuple with the ShowHiddenComments field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetShowHiddenCommentsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShowHiddenComments, true
}

// SetShowHiddenComments sets field value
func (o *CurrentUser) SetShowHiddenComments(v bool) {
	o.ShowHiddenComments = v
}

// GetShowPostStatistics returns the ShowPostStatistics field value
func (o *CurrentUser) GetShowPostStatistics() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShowPostStatistics
}

// GetShowPostStatisticsOk returns a tuple with the ShowPostStatistics field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetShowPostStatisticsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShowPostStatistics, true
}

// SetShowPostStatistics sets field value
func (o *CurrentUser) SetShowPostStatistics(v bool) {
	o.ShowPostStatistics = v
}

// GetReceiveEmailNotifications returns the ReceiveEmailNotifications field value
func (o *CurrentUser) GetReceiveEmailNotifications() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReceiveEmailNotifications
}

// GetReceiveEmailNotificationsOk returns a tuple with the ReceiveEmailNotifications field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetReceiveEmailNotificationsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiveEmailNotifications, true
}

// SetReceiveEmailNotifications sets field value
func (o *CurrentUser) SetReceiveEmailNotifications(v bool) {
	o.ReceiveEmailNotifications = v
}

// GetEnableKeyboardNavigation returns the EnableKeyboardNavigation field value
func (o *CurrentUser) GetEnableKeyboardNavigation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableKeyboardNavigation
}

// GetEnableKeyboardNavigationOk returns a tuple with the EnableKeyboardNavigation field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetEnableKeyboardNavigationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableKeyboardNavigation, true
}

// SetEnableKeyboardNavigation sets field value
func (o *CurrentUser) SetEnableKeyboardNavigation(v bool) {
	o.EnableKeyboardNavigation = v
}

// GetEnablePrivacyMode returns the EnablePrivacyMode field value
func (o *CurrentUser) GetEnablePrivacyMode() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnablePrivacyMode
}

// GetEnablePrivacyModeOk returns a tuple with the EnablePrivacyMode field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetEnablePrivacyModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnablePrivacyMode, true
}

// SetEnablePrivacyMode sets field value
func (o *CurrentUser) SetEnablePrivacyMode(v bool) {
	o.EnablePrivacyMode = v
}

// GetStyleUsernames returns the StyleUsernames field value
func (o *CurrentUser) GetStyleUsernames() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.StyleUsernames
}

// GetStyleUsernamesOk returns a tuple with the StyleUsernames field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetStyleUsernamesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StyleUsernames, true
}

// SetStyleUsernames sets field value
func (o *CurrentUser) SetStyleUsernames(v bool) {
	o.StyleUsernames = v
}

// GetEnableAutoComplete returns the EnableAutoComplete field value
func (o *CurrentUser) GetEnableAutoComplete() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableAutoComplete
}

// GetEnableAutoCompleteOk returns a tuple with the EnableAutoComplete field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetEnableAutoCompleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableAutoComplete, true
}

// SetEnableAutoComplete sets field value
func (o *CurrentUser) SetEnableAutoComplete(v bool) {
	o.EnableAutoComplete = v
}

// GetDisableCroppedThumbnails returns the DisableCroppedThumbnails field value
func (o *CurrentUser) GetDisableCroppedThumbnails() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DisableCroppedThumbnails
}

// GetDisableCroppedThumbnailsOk returns a tuple with the DisableCroppedThumbnails field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetDisableCroppedThumbnailsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisableCroppedThumbnails, true
}

// SetDisableCroppedThumbnails sets field value
func (o *CurrentUser) SetDisableCroppedThumbnails(v bool) {
	o.DisableCroppedThumbnails = v
}

// GetEnableSafeMode returns the EnableSafeMode field value
func (o *CurrentUser) GetEnableSafeMode() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableSafeMode
}

// GetEnableSafeModeOk returns a tuple with the EnableSafeMode field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetEnableSafeModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableSafeMode, true
}

// SetEnableSafeMode sets field value
func (o *CurrentUser) SetEnableSafeMode(v bool) {
	o.EnableSafeMode = v
}

// GetDisableResponsiveMode returns the DisableResponsiveMode field value
func (o *CurrentUser) GetDisableResponsiveMode() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DisableResponsiveMode
}

// GetDisableResponsiveModeOk returns a tuple with the DisableResponsiveMode field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetDisableResponsiveModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisableResponsiveMode, true
}

// SetDisableResponsiveMode sets field value
func (o *CurrentUser) SetDisableResponsiveMode(v bool) {
	o.DisableResponsiveMode = v
}

// GetNoFlagging returns the NoFlagging field value
func (o *CurrentUser) GetNoFlagging() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.NoFlagging
}

// GetNoFlaggingOk returns a tuple with the NoFlagging field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetNoFlaggingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NoFlagging, true
}

// SetNoFlagging sets field value
func (o *CurrentUser) SetNoFlagging(v bool) {
	o.NoFlagging = v
}

// GetDisableUserDmails returns the DisableUserDmails field value
func (o *CurrentUser) GetDisableUserDmails() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DisableUserDmails
}

// GetDisableUserDmailsOk returns a tuple with the DisableUserDmails field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetDisableUserDmailsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisableUserDmails, true
}

// SetDisableUserDmails sets field value
func (o *CurrentUser) SetDisableUserDmails(v bool) {
	o.DisableUserDmails = v
}

// GetEnableCompactUploader returns the EnableCompactUploader field value
func (o *CurrentUser) GetEnableCompactUploader() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableCompactUploader
}

// GetEnableCompactUploaderOk returns a tuple with the EnableCompactUploader field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetEnableCompactUploaderOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableCompactUploader, true
}

// SetEnableCompactUploader sets field value
func (o *CurrentUser) SetEnableCompactUploader(v bool) {
	o.EnableCompactUploader = v
}

// GetReplacementsBeta returns the ReplacementsBeta field value
func (o *CurrentUser) GetReplacementsBeta() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReplacementsBeta
}

// GetReplacementsBetaOk returns a tuple with the ReplacementsBeta field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetReplacementsBetaOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplacementsBeta, true
}

// SetReplacementsBeta sets field value
func (o *CurrentUser) SetReplacementsBeta(v bool) {
	o.ReplacementsBeta = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CurrentUser) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CurrentUser) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetEmail returns the Email field value
func (o *CurrentUser) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CurrentUser) SetEmail(v string) {
	o.Email = v
}

// GetLastLoggedInAt returns the LastLoggedInAt field value
func (o *CurrentUser) GetLastLoggedInAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastLoggedInAt
}

// GetLastLoggedInAtOk returns a tuple with the LastLoggedInAt field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetLastLoggedInAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastLoggedInAt, true
}

// SetLastLoggedInAt sets field value
func (o *CurrentUser) SetLastLoggedInAt(v time.Time) {
	o.LastLoggedInAt = v
}

// GetLastForumReadAt returns the LastForumReadAt field value
func (o *CurrentUser) GetLastForumReadAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastForumReadAt
}

// GetLastForumReadAtOk returns a tuple with the LastForumReadAt field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetLastForumReadAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastForumReadAt, true
}

// SetLastForumReadAt sets field value
func (o *CurrentUser) SetLastForumReadAt(v time.Time) {
	o.LastForumReadAt = v
}

// GetRecentTags returns the RecentTags field value
func (o *CurrentUser) GetRecentTags() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecentTags
}

// GetRecentTagsOk returns a tuple with the RecentTags field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetRecentTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecentTags, true
}

// SetRecentTags sets field value
func (o *CurrentUser) SetRecentTags(v string) {
	o.RecentTags = v
}

// GetCommentThreshold returns the CommentThreshold field value
func (o *CurrentUser) GetCommentThreshold() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CommentThreshold
}

// GetCommentThresholdOk returns a tuple with the CommentThreshold field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetCommentThresholdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommentThreshold, true
}

// SetCommentThreshold sets field value
func (o *CurrentUser) SetCommentThreshold(v float32) {
	o.CommentThreshold = v
}

// GetDefaultImageSizedefaultImageSize returns the DefaultImageSizedefaultImageSize field value if set, zero value otherwise.
func (o *CurrentUser) GetDefaultImageSizedefaultImageSize() string {
	if o == nil || IsNil(o.DefaultImageSizedefaultImageSize) {
		var ret string
		return ret
	}
	return *o.DefaultImageSizedefaultImageSize
}

// GetDefaultImageSizedefaultImageSizeOk returns a tuple with the DefaultImageSizedefaultImageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetDefaultImageSizedefaultImageSizeOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultImageSizedefaultImageSize) {
		return nil, false
	}
	return o.DefaultImageSizedefaultImageSize, true
}

// HasDefaultImageSizedefaultImageSize returns a boolean if a field has been set.
func (o *CurrentUser) HasDefaultImageSizedefaultImageSize() bool {
	if o != nil && !IsNil(o.DefaultImageSizedefaultImageSize) {
		return true
	}

	return false
}

// SetDefaultImageSizedefaultImageSize gets a reference to the given string and assigns it to the DefaultImageSizedefaultImageSize field.
func (o *CurrentUser) SetDefaultImageSizedefaultImageSize(v string) {
	o.DefaultImageSizedefaultImageSize = &v
}

// GetFavoriteTags returns the FavoriteTags field value
func (o *CurrentUser) GetFavoriteTags() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FavoriteTags
}

// GetFavoriteTagsOk returns a tuple with the FavoriteTags field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetFavoriteTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FavoriteTags, true
}

// SetFavoriteTags sets field value
func (o *CurrentUser) SetFavoriteTags(v string) {
	o.FavoriteTags = v
}

// GetBlacklistedTags returns the BlacklistedTags field value
func (o *CurrentUser) GetBlacklistedTags() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlacklistedTags
}

// GetBlacklistedTagsOk returns a tuple with the BlacklistedTags field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetBlacklistedTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlacklistedTags, true
}

// SetBlacklistedTags sets field value
func (o *CurrentUser) SetBlacklistedTags(v string) {
	o.BlacklistedTags = v
}

// GetTimeZone returns the TimeZone field value
func (o *CurrentUser) GetTimeZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetTimeZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeZone, true
}

// SetTimeZone sets field value
func (o *CurrentUser) SetTimeZone(v string) {
	o.TimeZone = v
}

// GetPerPage returns the PerPage field value
func (o *CurrentUser) GetPerPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetPerPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PerPage, true
}

// SetPerPage sets field value
func (o *CurrentUser) SetPerPage(v int32) {
	o.PerPage = v
}

// GetCustomStyle returns the CustomStyle field value
func (o *CurrentUser) GetCustomStyle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomStyle
}

// GetCustomStyleOk returns a tuple with the CustomStyle field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetCustomStyleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomStyle, true
}

// SetCustomStyle sets field value
func (o *CurrentUser) SetCustomStyle(v string) {
	o.CustomStyle = v
}

// GetFavoriteCount returns the FavoriteCount field value
func (o *CurrentUser) GetFavoriteCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FavoriteCount
}

// GetFavoriteCountOk returns a tuple with the FavoriteCount field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetFavoriteCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FavoriteCount, true
}

// SetFavoriteCount sets field value
func (o *CurrentUser) SetFavoriteCount(v int32) {
	o.FavoriteCount = v
}

// GetApiRegenMultiplier returns the ApiRegenMultiplier field value
func (o *CurrentUser) GetApiRegenMultiplier() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ApiRegenMultiplier
}

// GetApiRegenMultiplierOk returns a tuple with the ApiRegenMultiplier field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetApiRegenMultiplierOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiRegenMultiplier, true
}

// SetApiRegenMultiplier sets field value
func (o *CurrentUser) SetApiRegenMultiplier(v float32) {
	o.ApiRegenMultiplier = v
}

// GetApiBurstLimit returns the ApiBurstLimit field value
func (o *CurrentUser) GetApiBurstLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApiBurstLimit
}

// GetApiBurstLimitOk returns a tuple with the ApiBurstLimit field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetApiBurstLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiBurstLimit, true
}

// SetApiBurstLimit sets field value
func (o *CurrentUser) SetApiBurstLimit(v int32) {
	o.ApiBurstLimit = v
}

// GetRemainingApiLimit returns the RemainingApiLimit field value
func (o *CurrentUser) GetRemainingApiLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RemainingApiLimit
}

// GetRemainingApiLimitOk returns a tuple with the RemainingApiLimit field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetRemainingApiLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemainingApiLimit, true
}

// SetRemainingApiLimit sets field value
func (o *CurrentUser) SetRemainingApiLimit(v int32) {
	o.RemainingApiLimit = v
}

// GetStatementTimeout returns the StatementTimeout field value
func (o *CurrentUser) GetStatementTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatementTimeout
}

// GetStatementTimeoutOk returns a tuple with the StatementTimeout field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetStatementTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatementTimeout, true
}

// SetStatementTimeout sets field value
func (o *CurrentUser) SetStatementTimeout(v int32) {
	o.StatementTimeout = v
}

// GetFavoriteLimit returns the FavoriteLimit field value
func (o *CurrentUser) GetFavoriteLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FavoriteLimit
}

// GetFavoriteLimitOk returns a tuple with the FavoriteLimit field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetFavoriteLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FavoriteLimit, true
}

// SetFavoriteLimit sets field value
func (o *CurrentUser) SetFavoriteLimit(v int32) {
	o.FavoriteLimit = v
}

// GetTagQueryLimit returns the TagQueryLimit field value
func (o *CurrentUser) GetTagQueryLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TagQueryLimit
}

// GetTagQueryLimitOk returns a tuple with the TagQueryLimit field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetTagQueryLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagQueryLimit, true
}

// SetTagQueryLimit sets field value
func (o *CurrentUser) SetTagQueryLimit(v int32) {
	o.TagQueryLimit = v
}

// GetHasMail returns the HasMail field value
func (o *CurrentUser) GetHasMail() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMail
}

// GetHasMailOk returns a tuple with the HasMail field value
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetHasMailOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMail, true
}

// SetHasMail sets field value
func (o *CurrentUser) SetHasMail(v bool) {
	o.HasMail = v
}

func (o CurrentUser) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CurrentUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["name"] = o.Name
	toSerialize["level"] = o.Level
	toSerialize["base_upload_limit"] = o.BaseUploadLimit
	toSerialize["post_upload_count"] = o.PostUploadCount
	toSerialize["post_update_count"] = o.PostUpdateCount
	toSerialize["note_update_count"] = o.NoteUpdateCount
	toSerialize["is_banned"] = o.IsBanned
	toSerialize["can_approve_posts"] = o.CanApprovePosts
	toSerialize["can_upload_free"] = o.CanUploadFree
	toSerialize["level_string"] = o.LevelString
	toSerialize["avatar_id"] = o.AvatarId
	toSerialize["blacklist_users"] = o.BlacklistUsers
	toSerialize["description_collapsed_initially"] = o.DescriptionCollapsedInitially
	toSerialize["hide_comments"] = o.HideComments
	toSerialize["show_hidden_comments"] = o.ShowHiddenComments
	toSerialize["show_post_statistics"] = o.ShowPostStatistics
	toSerialize["receive_email_notifications"] = o.ReceiveEmailNotifications
	toSerialize["enable_keyboard_navigation"] = o.EnableKeyboardNavigation
	toSerialize["enable_privacy_mode"] = o.EnablePrivacyMode
	toSerialize["style_usernames"] = o.StyleUsernames
	toSerialize["enable_auto_complete"] = o.EnableAutoComplete
	toSerialize["disable_cropped_thumbnails"] = o.DisableCroppedThumbnails
	toSerialize["enable_safe_mode"] = o.EnableSafeMode
	toSerialize["disable_responsive_mode"] = o.DisableResponsiveMode
	toSerialize["no_flagging"] = o.NoFlagging
	toSerialize["disable_user_dmails"] = o.DisableUserDmails
	toSerialize["enable_compact_uploader"] = o.EnableCompactUploader
	toSerialize["replacements_beta"] = o.ReplacementsBeta
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["email"] = o.Email
	toSerialize["last_logged_in_at"] = o.LastLoggedInAt
	toSerialize["last_forum_read_at"] = o.LastForumReadAt
	toSerialize["recent_tags"] = o.RecentTags
	toSerialize["comment_threshold"] = o.CommentThreshold
	if !IsNil(o.DefaultImageSizedefaultImageSize) {
		toSerialize["default_image_sizedefault_image_size"] = o.DefaultImageSizedefaultImageSize
	}
	toSerialize["favorite_tags"] = o.FavoriteTags
	toSerialize["blacklisted_tags"] = o.BlacklistedTags
	toSerialize["time_zone"] = o.TimeZone
	toSerialize["per_page"] = o.PerPage
	toSerialize["custom_style"] = o.CustomStyle
	toSerialize["favorite_count"] = o.FavoriteCount
	toSerialize["api_regen_multiplier"] = o.ApiRegenMultiplier
	toSerialize["api_burst_limit"] = o.ApiBurstLimit
	toSerialize["remaining_api_limit"] = o.RemainingApiLimit
	toSerialize["statement_timeout"] = o.StatementTimeout
	toSerialize["favorite_limit"] = o.FavoriteLimit
	toSerialize["tag_query_limit"] = o.TagQueryLimit
	toSerialize["has_mail"] = o.HasMail
	return toSerialize, nil
}

func (o *CurrentUser) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"name",
		"level",
		"base_upload_limit",
		"post_upload_count",
		"post_update_count",
		"note_update_count",
		"is_banned",
		"can_approve_posts",
		"can_upload_free",
		"level_string",
		"avatar_id",
		"blacklist_users",
		"description_collapsed_initially",
		"hide_comments",
		"show_hidden_comments",
		"show_post_statistics",
		"receive_email_notifications",
		"enable_keyboard_navigation",
		"enable_privacy_mode",
		"style_usernames",
		"enable_auto_complete",
		"disable_cropped_thumbnails",
		"enable_safe_mode",
		"disable_responsive_mode",
		"no_flagging",
		"disable_user_dmails",
		"enable_compact_uploader",
		"replacements_beta",
		"updated_at",
		"email",
		"last_logged_in_at",
		"last_forum_read_at",
		"recent_tags",
		"comment_threshold",
		"favorite_tags",
		"blacklisted_tags",
		"time_zone",
		"per_page",
		"custom_style",
		"favorite_count",
		"api_regen_multiplier",
		"api_burst_limit",
		"remaining_api_limit",
		"statement_timeout",
		"favorite_limit",
		"tag_query_limit",
		"has_mail",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCurrentUser := _CurrentUser{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCurrentUser)

	if err != nil {
		return err
	}

	*o = CurrentUser(varCurrentUser)

	return err
}

type NullableCurrentUser struct {
	value *CurrentUser
	isSet bool
}

func (v NullableCurrentUser) Get() *CurrentUser {
	return v.value
}

func (v *NullableCurrentUser) Set(val *CurrentUser) {
	v.value = val
	v.isSet = true
}

func (v NullableCurrentUser) IsSet() bool {
	return v.isSet
}

func (v *NullableCurrentUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurrentUser(val *CurrentUser) *NullableCurrentUser {
	return &NullableCurrentUser{value: val, isSet: true}
}

func (v NullableCurrentUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurrentUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
