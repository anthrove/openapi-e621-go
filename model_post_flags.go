/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws).

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PostFlags type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostFlags{}

// PostFlags struct for PostFlags
type PostFlags struct {
	Pending      bool `json:"pending"`
	Flagged      bool `json:"flagged"`
	NoteLocked   bool `json:"note_locked"`
	StatusLocked bool `json:"status_locked"`
	RatingLocked bool `json:"rating_locked"`
	Deleted      bool `json:"deleted"`
}

type _PostFlags PostFlags

// NewPostFlags instantiates a new PostFlags object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostFlags(pending bool, flagged bool, noteLocked bool, statusLocked bool, ratingLocked bool, deleted bool) *PostFlags {
	this := PostFlags{}
	this.Pending = pending
	this.Flagged = flagged
	this.NoteLocked = noteLocked
	this.StatusLocked = statusLocked
	this.RatingLocked = ratingLocked
	this.Deleted = deleted
	return &this
}

// NewPostFlagsWithDefaults instantiates a new PostFlags object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostFlagsWithDefaults() *PostFlags {
	this := PostFlags{}
	return &this
}

// GetPending returns the Pending field value
func (o *PostFlags) GetPending() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Pending
}

// GetPendingOk returns a tuple with the Pending field value
// and a boolean to check if the value has been set.
func (o *PostFlags) GetPendingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pending, true
}

// SetPending sets field value
func (o *PostFlags) SetPending(v bool) {
	o.Pending = v
}

// GetFlagged returns the Flagged field value
func (o *PostFlags) GetFlagged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Flagged
}

// GetFlaggedOk returns a tuple with the Flagged field value
// and a boolean to check if the value has been set.
func (o *PostFlags) GetFlaggedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flagged, true
}

// SetFlagged sets field value
func (o *PostFlags) SetFlagged(v bool) {
	o.Flagged = v
}

// GetNoteLocked returns the NoteLocked field value
func (o *PostFlags) GetNoteLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.NoteLocked
}

// GetNoteLockedOk returns a tuple with the NoteLocked field value
// and a boolean to check if the value has been set.
func (o *PostFlags) GetNoteLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NoteLocked, true
}

// SetNoteLocked sets field value
func (o *PostFlags) SetNoteLocked(v bool) {
	o.NoteLocked = v
}

// GetStatusLocked returns the StatusLocked field value
func (o *PostFlags) GetStatusLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.StatusLocked
}

// GetStatusLockedOk returns a tuple with the StatusLocked field value
// and a boolean to check if the value has been set.
func (o *PostFlags) GetStatusLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusLocked, true
}

// SetStatusLocked sets field value
func (o *PostFlags) SetStatusLocked(v bool) {
	o.StatusLocked = v
}

// GetRatingLocked returns the RatingLocked field value
func (o *PostFlags) GetRatingLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RatingLocked
}

// GetRatingLockedOk returns a tuple with the RatingLocked field value
// and a boolean to check if the value has been set.
func (o *PostFlags) GetRatingLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RatingLocked, true
}

// SetRatingLocked sets field value
func (o *PostFlags) SetRatingLocked(v bool) {
	o.RatingLocked = v
}

// GetDeleted returns the Deleted field value
func (o *PostFlags) GetDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *PostFlags) GetDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *PostFlags) SetDeleted(v bool) {
	o.Deleted = v
}

func (o PostFlags) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostFlags) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pending"] = o.Pending
	toSerialize["flagged"] = o.Flagged
	toSerialize["note_locked"] = o.NoteLocked
	toSerialize["status_locked"] = o.StatusLocked
	toSerialize["rating_locked"] = o.RatingLocked
	toSerialize["deleted"] = o.Deleted
	return toSerialize, nil
}

func (o *PostFlags) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pending",
		"flagged",
		"note_locked",
		"status_locked",
		"rating_locked",
		"deleted",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostFlags := _PostFlags{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostFlags)

	if err != nil {
		return err
	}

	*o = PostFlags(varPostFlags)

	return err
}

type NullablePostFlags struct {
	value *PostFlags
	isSet bool
}

func (v NullablePostFlags) Get() *PostFlags {
	return v.value
}

func (v *NullablePostFlags) Set(val *PostFlags) {
	v.value = val
	v.isSet = true
}

func (v NullablePostFlags) IsSet() bool {
	return v.isSet
}

func (v *NullablePostFlags) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostFlags(val *PostFlags) *NullablePostFlags {
	return &NullablePostFlags{value: val, isSet: true}
}

func (v NullablePostFlags) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostFlags) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
