/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws).

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DMail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DMail{}

// DMail struct for DMail
type DMail struct {
	Id        int32     `json:"id"`
	OwnerId   int32     `json:"owner_id"`
	FromId    int32     `json:"from_id"`
	ToId      int32     `json:"to_id"`
	Title     string    `json:"title"`
	Body      string    `json:"body"`
	IsRead    bool      `json:"is_read"`
	IsDeleted bool      `json:"is_deleted"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type _DMail DMail

// NewDMail instantiates a new DMail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDMail(id int32, ownerId int32, fromId int32, toId int32, title string, body string, isRead bool, isDeleted bool, createdAt time.Time, updatedAt time.Time) *DMail {
	this := DMail{}
	this.Id = id
	this.OwnerId = ownerId
	this.FromId = fromId
	this.ToId = toId
	this.Title = title
	this.Body = body
	this.IsRead = isRead
	this.IsDeleted = isDeleted
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewDMailWithDefaults instantiates a new DMail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDMailWithDefaults() *DMail {
	this := DMail{}
	return &this
}

// GetId returns the Id field value
func (o *DMail) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DMail) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DMail) SetId(v int32) {
	o.Id = v
}

// GetOwnerId returns the OwnerId field value
func (o *DMail) GetOwnerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *DMail) GetOwnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *DMail) SetOwnerId(v int32) {
	o.OwnerId = v
}

// GetFromId returns the FromId field value
func (o *DMail) GetFromId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FromId
}

// GetFromIdOk returns a tuple with the FromId field value
// and a boolean to check if the value has been set.
func (o *DMail) GetFromIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromId, true
}

// SetFromId sets field value
func (o *DMail) SetFromId(v int32) {
	o.FromId = v
}

// GetToId returns the ToId field value
func (o *DMail) GetToId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ToId
}

// GetToIdOk returns a tuple with the ToId field value
// and a boolean to check if the value has been set.
func (o *DMail) GetToIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToId, true
}

// SetToId sets field value
func (o *DMail) SetToId(v int32) {
	o.ToId = v
}

// GetTitle returns the Title field value
func (o *DMail) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *DMail) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *DMail) SetTitle(v string) {
	o.Title = v
}

// GetBody returns the Body field value
func (o *DMail) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *DMail) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *DMail) SetBody(v string) {
	o.Body = v
}

// GetIsRead returns the IsRead field value
func (o *DMail) GetIsRead() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRead
}

// GetIsReadOk returns a tuple with the IsRead field value
// and a boolean to check if the value has been set.
func (o *DMail) GetIsReadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRead, true
}

// SetIsRead sets field value
func (o *DMail) SetIsRead(v bool) {
	o.IsRead = v
}

// GetIsDeleted returns the IsDeleted field value
func (o *DMail) GetIsDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value
// and a boolean to check if the value has been set.
func (o *DMail) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeleted, true
}

// SetIsDeleted sets field value
func (o *DMail) SetIsDeleted(v bool) {
	o.IsDeleted = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DMail) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DMail) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DMail) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DMail) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DMail) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DMail) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o DMail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DMail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["owner_id"] = o.OwnerId
	toSerialize["from_id"] = o.FromId
	toSerialize["to_id"] = o.ToId
	toSerialize["title"] = o.Title
	toSerialize["body"] = o.Body
	toSerialize["is_read"] = o.IsRead
	toSerialize["is_deleted"] = o.IsDeleted
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *DMail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"owner_id",
		"from_id",
		"to_id",
		"title",
		"body",
		"is_read",
		"is_deleted",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDMail := _DMail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDMail)

	if err != nil {
		return err
	}

	*o = DMail(varDMail)

	return err
}

type NullableDMail struct {
	value *DMail
	isSet bool
}

func (v NullableDMail) Get() *DMail {
	return v.value
}

func (v *NullableDMail) Set(val *DMail) {
	v.value = val
	v.isSet = true
}

func (v NullableDMail) IsSet() bool {
	return v.isSet
}

func (v *NullableDMail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDMail(val *DMail) *NullableDMail {
	return &NullableDMail{value: val, isSet: true}
}

func (v NullableDMail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDMail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
