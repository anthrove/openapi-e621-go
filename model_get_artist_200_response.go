/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws).

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the GetArtist200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetArtist200Response{}

// GetArtist200Response struct for GetArtist200Response
type GetArtist200Response struct {
	Id           int32                                                   `json:"id"`
	Name         string                                                  `json:"name"`
	UpdatedAt    time.Time                                               `json:"updated_at"`
	IsActive     bool                                                    `json:"is_active"`
	OtherNames   []string                                                `json:"other_names"`
	GroupName    string                                                  `json:"group_name"`
	LinkedUserId float32                                                 `json:"linked_user_id"`
	CreatedAt    time.Time                                               `json:"created_at"`
	CreatorId    int32                                                   `json:"creator_id"`
	IsLocked     bool                                                    `json:"is_locked"`
	Notes        string                                                  `json:"notes"`
	Domains      [][]SearchArtists200ResponseInnerAllOfDomainsInnerInner `json:"domains"`
	Urls         []ArtistURL                                             `json:"urls"`
}

type _GetArtist200Response GetArtist200Response

// NewGetArtist200Response instantiates a new GetArtist200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetArtist200Response(id int32, name string, updatedAt time.Time, isActive bool, otherNames []string, groupName string, linkedUserId float32, createdAt time.Time, creatorId int32, isLocked bool, notes string, domains [][]SearchArtists200ResponseInnerAllOfDomainsInnerInner, urls []ArtistURL) *GetArtist200Response {
	this := GetArtist200Response{}
	this.Id = id
	this.Name = name
	this.UpdatedAt = updatedAt
	this.IsActive = isActive
	this.OtherNames = otherNames
	this.GroupName = groupName
	this.LinkedUserId = linkedUserId
	this.CreatedAt = createdAt
	this.CreatorId = creatorId
	this.IsLocked = isLocked
	this.Notes = notes
	this.Domains = domains
	this.Urls = urls
	return &this
}

// NewGetArtist200ResponseWithDefaults instantiates a new GetArtist200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetArtist200ResponseWithDefaults() *GetArtist200Response {
	this := GetArtist200Response{}
	return &this
}

// GetId returns the Id field value
func (o *GetArtist200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetArtist200Response) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GetArtist200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetArtist200Response) SetName(v string) {
	o.Name = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *GetArtist200Response) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *GetArtist200Response) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsActive returns the IsActive field value
func (o *GetArtist200Response) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *GetArtist200Response) SetIsActive(v bool) {
	o.IsActive = v
}

// GetOtherNames returns the OtherNames field value
func (o *GetArtist200Response) GetOtherNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OtherNames
}

// GetOtherNamesOk returns a tuple with the OtherNames field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetOtherNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OtherNames, true
}

// SetOtherNames sets field value
func (o *GetArtist200Response) SetOtherNames(v []string) {
	o.OtherNames = v
}

// GetGroupName returns the GroupName field value
func (o *GetArtist200Response) GetGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupName, true
}

// SetGroupName sets field value
func (o *GetArtist200Response) SetGroupName(v string) {
	o.GroupName = v
}

// GetLinkedUserId returns the LinkedUserId field value
func (o *GetArtist200Response) GetLinkedUserId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LinkedUserId
}

// GetLinkedUserIdOk returns a tuple with the LinkedUserId field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetLinkedUserIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkedUserId, true
}

// SetLinkedUserId sets field value
func (o *GetArtist200Response) SetLinkedUserId(v float32) {
	o.LinkedUserId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetArtist200Response) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetArtist200Response) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatorId returns the CreatorId field value
func (o *GetArtist200Response) GetCreatorId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetCreatorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *GetArtist200Response) SetCreatorId(v int32) {
	o.CreatorId = v
}

// GetIsLocked returns the IsLocked field value
func (o *GetArtist200Response) GetIsLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetIsLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLocked, true
}

// SetIsLocked sets field value
func (o *GetArtist200Response) SetIsLocked(v bool) {
	o.IsLocked = v
}

// GetNotes returns the Notes field value
func (o *GetArtist200Response) GetNotes() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Notes, true
}

// SetNotes sets field value
func (o *GetArtist200Response) SetNotes(v string) {
	o.Notes = v
}

// GetDomains returns the Domains field value
func (o *GetArtist200Response) GetDomains() [][]SearchArtists200ResponseInnerAllOfDomainsInnerInner {
	if o == nil {
		var ret [][]SearchArtists200ResponseInnerAllOfDomainsInnerInner
		return ret
	}

	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetDomainsOk() ([][]SearchArtists200ResponseInnerAllOfDomainsInnerInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domains, true
}

// SetDomains sets field value
func (o *GetArtist200Response) SetDomains(v [][]SearchArtists200ResponseInnerAllOfDomainsInnerInner) {
	o.Domains = v
}

// GetUrls returns the Urls field value
func (o *GetArtist200Response) GetUrls() []ArtistURL {
	if o == nil {
		var ret []ArtistURL
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *GetArtist200Response) GetUrlsOk() ([]ArtistURL, bool) {
	if o == nil {
		return nil, false
	}
	return o.Urls, true
}

// SetUrls sets field value
func (o *GetArtist200Response) SetUrls(v []ArtistURL) {
	o.Urls = v
}

func (o GetArtist200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetArtist200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["is_active"] = o.IsActive
	toSerialize["other_names"] = o.OtherNames
	toSerialize["group_name"] = o.GroupName
	toSerialize["linked_user_id"] = o.LinkedUserId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["creator_id"] = o.CreatorId
	toSerialize["is_locked"] = o.IsLocked
	toSerialize["notes"] = o.Notes
	toSerialize["domains"] = o.Domains
	toSerialize["urls"] = o.Urls
	return toSerialize, nil
}

func (o *GetArtist200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"updated_at",
		"is_active",
		"other_names",
		"group_name",
		"linked_user_id",
		"created_at",
		"creator_id",
		"is_locked",
		"notes",
		"domains",
		"urls",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetArtist200Response := _GetArtist200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetArtist200Response)

	if err != nil {
		return err
	}

	*o = GetArtist200Response(varGetArtist200Response)

	return err
}

type NullableGetArtist200Response struct {
	value *GetArtist200Response
	isSet bool
}

func (v NullableGetArtist200Response) Get() *GetArtist200Response {
	return v.value
}

func (v *NullableGetArtist200Response) Set(val *GetArtist200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetArtist200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetArtist200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetArtist200Response(val *GetArtist200Response) *NullableGetArtist200Response {
	return &NullableGetArtist200Response{value: val, isSet: true}
}

func (v NullableGetArtist200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetArtist200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
