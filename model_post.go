/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws).

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Post type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Post{}

// Post struct for Post
type Post struct {
	Id            int32             `json:"id"`
	CreatedAt     time.Time         `json:"created_at"`
	UpdatedAt     time.Time         `json:"updated_at"`
	File          PostFile          `json:"file"`
	Preview       PostPreview       `json:"preview"`
	Sample        PostSample        `json:"sample"`
	Score         PostScore         `json:"score"`
	Tags          PostTags          `json:"tags"`
	LockedTags    []string          `json:"locked_tags"`
	ChangeSeq     float32           `json:"change_seq"`
	Flags         PostFlags         `json:"flags"`
	Rating        Ratings           `json:"rating"`
	FavCount      float32           `json:"fav_count"`
	Sources       []string          `json:"sources"`
	Pools         []float32         `json:"pools"`
	Relationships PostRelationships `json:"relationships"`
	ApproverId    NullableFloat32   `json:"approver_id"`
	UploaderId    float32           `json:"uploader_id"`
	Description   string            `json:"description"`
	CommentCount  float32           `json:"comment_count"`
	IsFavorited   bool              `json:"is_favorited"`
	HasNotes      bool              `json:"has_notes"`
	Duration      NullableFloat32   `json:"duration"`
}

type _Post Post

// NewPost instantiates a new Post object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPost(id int32, createdAt time.Time, updatedAt time.Time, file PostFile, preview PostPreview, sample PostSample, score PostScore, tags PostTags, lockedTags []string, changeSeq float32, flags PostFlags, rating Ratings, favCount float32, sources []string, pools []float32, relationships PostRelationships, approverId NullableFloat32, uploaderId float32, description string, commentCount float32, isFavorited bool, hasNotes bool, duration NullableFloat32) *Post {
	this := Post{}
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.File = file
	this.Preview = preview
	this.Sample = sample
	this.Score = score
	this.Tags = tags
	this.LockedTags = lockedTags
	this.ChangeSeq = changeSeq
	this.Flags = flags
	this.Rating = rating
	this.FavCount = favCount
	this.Sources = sources
	this.Pools = pools
	this.Relationships = relationships
	this.ApproverId = approverId
	this.UploaderId = uploaderId
	this.Description = description
	this.CommentCount = commentCount
	this.IsFavorited = isFavorited
	this.HasNotes = hasNotes
	this.Duration = duration
	return &this
}

// NewPostWithDefaults instantiates a new Post object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostWithDefaults() *Post {
	this := Post{}
	return &this
}

// GetId returns the Id field value
func (o *Post) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Post) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Post) SetId(v int32) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Post) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Post) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Post) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Post) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Post) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Post) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetFile returns the File field value
func (o *Post) GetFile() PostFile {
	if o == nil {
		var ret PostFile
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *Post) GetFileOk() (*PostFile, bool) {
	if o == nil {
		return nil, false
	}
	return &o.File, true
}

// SetFile sets field value
func (o *Post) SetFile(v PostFile) {
	o.File = v
}

// GetPreview returns the Preview field value
func (o *Post) GetPreview() PostPreview {
	if o == nil {
		var ret PostPreview
		return ret
	}

	return o.Preview
}

// GetPreviewOk returns a tuple with the Preview field value
// and a boolean to check if the value has been set.
func (o *Post) GetPreviewOk() (*PostPreview, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Preview, true
}

// SetPreview sets field value
func (o *Post) SetPreview(v PostPreview) {
	o.Preview = v
}

// GetSample returns the Sample field value
func (o *Post) GetSample() PostSample {
	if o == nil {
		var ret PostSample
		return ret
	}

	return o.Sample
}

// GetSampleOk returns a tuple with the Sample field value
// and a boolean to check if the value has been set.
func (o *Post) GetSampleOk() (*PostSample, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sample, true
}

// SetSample sets field value
func (o *Post) SetSample(v PostSample) {
	o.Sample = v
}

// GetScore returns the Score field value
func (o *Post) GetScore() PostScore {
	if o == nil {
		var ret PostScore
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *Post) GetScoreOk() (*PostScore, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *Post) SetScore(v PostScore) {
	o.Score = v
}

// GetTags returns the Tags field value
func (o *Post) GetTags() PostTags {
	if o == nil {
		var ret PostTags
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *Post) GetTagsOk() (*PostTags, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *Post) SetTags(v PostTags) {
	o.Tags = v
}

// GetLockedTags returns the LockedTags field value
func (o *Post) GetLockedTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.LockedTags
}

// GetLockedTagsOk returns a tuple with the LockedTags field value
// and a boolean to check if the value has been set.
func (o *Post) GetLockedTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LockedTags, true
}

// SetLockedTags sets field value
func (o *Post) SetLockedTags(v []string) {
	o.LockedTags = v
}

// GetChangeSeq returns the ChangeSeq field value
func (o *Post) GetChangeSeq() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ChangeSeq
}

// GetChangeSeqOk returns a tuple with the ChangeSeq field value
// and a boolean to check if the value has been set.
func (o *Post) GetChangeSeqOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangeSeq, true
}

// SetChangeSeq sets field value
func (o *Post) SetChangeSeq(v float32) {
	o.ChangeSeq = v
}

// GetFlags returns the Flags field value
func (o *Post) GetFlags() PostFlags {
	if o == nil {
		var ret PostFlags
		return ret
	}

	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value
// and a boolean to check if the value has been set.
func (o *Post) GetFlagsOk() (*PostFlags, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flags, true
}

// SetFlags sets field value
func (o *Post) SetFlags(v PostFlags) {
	o.Flags = v
}

// GetRating returns the Rating field value
func (o *Post) GetRating() Ratings {
	if o == nil {
		var ret Ratings
		return ret
	}

	return o.Rating
}

// GetRatingOk returns a tuple with the Rating field value
// and a boolean to check if the value has been set.
func (o *Post) GetRatingOk() (*Ratings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rating, true
}

// SetRating sets field value
func (o *Post) SetRating(v Ratings) {
	o.Rating = v
}

// GetFavCount returns the FavCount field value
func (o *Post) GetFavCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FavCount
}

// GetFavCountOk returns a tuple with the FavCount field value
// and a boolean to check if the value has been set.
func (o *Post) GetFavCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FavCount, true
}

// SetFavCount sets field value
func (o *Post) SetFavCount(v float32) {
	o.FavCount = v
}

// GetSources returns the Sources field value
func (o *Post) GetSources() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value
// and a boolean to check if the value has been set.
func (o *Post) GetSourcesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sources, true
}

// SetSources sets field value
func (o *Post) SetSources(v []string) {
	o.Sources = v
}

// GetPools returns the Pools field value
func (o *Post) GetPools() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.Pools
}

// GetPoolsOk returns a tuple with the Pools field value
// and a boolean to check if the value has been set.
func (o *Post) GetPoolsOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pools, true
}

// SetPools sets field value
func (o *Post) SetPools(v []float32) {
	o.Pools = v
}

// GetRelationships returns the Relationships field value
func (o *Post) GetRelationships() PostRelationships {
	if o == nil {
		var ret PostRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *Post) GetRelationshipsOk() (*PostRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *Post) SetRelationships(v PostRelationships) {
	o.Relationships = v
}

// GetApproverId returns the ApproverId field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *Post) GetApproverId() float32 {
	if o == nil || o.ApproverId.Get() == nil {
		var ret float32
		return ret
	}

	return *o.ApproverId.Get()
}

// GetApproverIdOk returns a tuple with the ApproverId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Post) GetApproverIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApproverId.Get(), o.ApproverId.IsSet()
}

// SetApproverId sets field value
func (o *Post) SetApproverId(v float32) {
	o.ApproverId.Set(&v)
}

// GetUploaderId returns the UploaderId field value
func (o *Post) GetUploaderId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UploaderId
}

// GetUploaderIdOk returns a tuple with the UploaderId field value
// and a boolean to check if the value has been set.
func (o *Post) GetUploaderIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploaderId, true
}

// SetUploaderId sets field value
func (o *Post) SetUploaderId(v float32) {
	o.UploaderId = v
}

// GetDescription returns the Description field value
func (o *Post) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Post) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Post) SetDescription(v string) {
	o.Description = v
}

// GetCommentCount returns the CommentCount field value
func (o *Post) GetCommentCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CommentCount
}

// GetCommentCountOk returns a tuple with the CommentCount field value
// and a boolean to check if the value has been set.
func (o *Post) GetCommentCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommentCount, true
}

// SetCommentCount sets field value
func (o *Post) SetCommentCount(v float32) {
	o.CommentCount = v
}

// GetIsFavorited returns the IsFavorited field value
func (o *Post) GetIsFavorited() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFavorited
}

// GetIsFavoritedOk returns a tuple with the IsFavorited field value
// and a boolean to check if the value has been set.
func (o *Post) GetIsFavoritedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFavorited, true
}

// SetIsFavorited sets field value
func (o *Post) SetIsFavorited(v bool) {
	o.IsFavorited = v
}

// GetHasNotes returns the HasNotes field value
func (o *Post) GetHasNotes() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasNotes
}

// GetHasNotesOk returns a tuple with the HasNotes field value
// and a boolean to check if the value has been set.
func (o *Post) GetHasNotesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasNotes, true
}

// SetHasNotes sets field value
func (o *Post) SetHasNotes(v bool) {
	o.HasNotes = v
}

// GetDuration returns the Duration field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *Post) GetDuration() float32 {
	if o == nil || o.Duration.Get() == nil {
		var ret float32
		return ret
	}

	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Post) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// SetDuration sets field value
func (o *Post) SetDuration(v float32) {
	o.Duration.Set(&v)
}

func (o Post) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Post) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["file"] = o.File
	toSerialize["preview"] = o.Preview
	toSerialize["sample"] = o.Sample
	toSerialize["score"] = o.Score
	toSerialize["tags"] = o.Tags
	toSerialize["locked_tags"] = o.LockedTags
	toSerialize["change_seq"] = o.ChangeSeq
	toSerialize["flags"] = o.Flags
	toSerialize["rating"] = o.Rating
	toSerialize["fav_count"] = o.FavCount
	toSerialize["sources"] = o.Sources
	toSerialize["pools"] = o.Pools
	toSerialize["relationships"] = o.Relationships
	toSerialize["approver_id"] = o.ApproverId.Get()
	toSerialize["uploader_id"] = o.UploaderId
	toSerialize["description"] = o.Description
	toSerialize["comment_count"] = o.CommentCount
	toSerialize["is_favorited"] = o.IsFavorited
	toSerialize["has_notes"] = o.HasNotes
	toSerialize["duration"] = o.Duration.Get()
	return toSerialize, nil
}

func (o *Post) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"file",
		"preview",
		"sample",
		"score",
		"tags",
		"locked_tags",
		"change_seq",
		"flags",
		"rating",
		"fav_count",
		"sources",
		"pools",
		"relationships",
		"approver_id",
		"uploader_id",
		"description",
		"comment_count",
		"is_favorited",
		"has_notes",
		"duration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPost := _Post{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPost)

	if err != nil {
		return err
	}

	*o = Post(varPost)

	return err
}

type NullablePost struct {
	value *Post
	isSet bool
}

func (v NullablePost) Get() *Post {
	return v.value
}

func (v *NullablePost) Set(val *Post) {
	v.value = val
	v.isSet = true
}

func (v NullablePost) IsSet() bool {
	return v.isSet
}

func (v *NullablePost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePost(val *Post) *NullablePost {
	return &NullablePost{value: val, isSet: true}
}

func (v NullablePost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
