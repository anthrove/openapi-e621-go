/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws). 

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi-e621-go

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddFavorite201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddFavorite201Response{}

// AddFavorite201Response struct for AddFavorite201Response
type AddFavorite201Response struct {
	Post Post `json:"post"`
}

type _AddFavorite201Response AddFavorite201Response

// NewAddFavorite201Response instantiates a new AddFavorite201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddFavorite201Response(post Post) *AddFavorite201Response {
	this := AddFavorite201Response{}
	this.Post = post
	return &this
}

// NewAddFavorite201ResponseWithDefaults instantiates a new AddFavorite201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddFavorite201ResponseWithDefaults() *AddFavorite201Response {
	this := AddFavorite201Response{}
	return &this
}

// GetPost returns the Post field value
func (o *AddFavorite201Response) GetPost() Post {
	if o == nil {
		var ret Post
		return ret
	}

	return o.Post
}

// GetPostOk returns a tuple with the Post field value
// and a boolean to check if the value has been set.
func (o *AddFavorite201Response) GetPostOk() (*Post, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Post, true
}

// SetPost sets field value
func (o *AddFavorite201Response) SetPost(v Post) {
	o.Post = v
}

func (o AddFavorite201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddFavorite201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["post"] = o.Post
	return toSerialize, nil
}

func (o *AddFavorite201Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"post",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddFavorite201Response := _AddFavorite201Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddFavorite201Response)

	if err != nil {
		return err
	}

	*o = AddFavorite201Response(varAddFavorite201Response)

	return err
}

type NullableAddFavorite201Response struct {
	value *AddFavorite201Response
	isSet bool
}

func (v NullableAddFavorite201Response) Get() *AddFavorite201Response {
	return v.value
}

func (v *NullableAddFavorite201Response) Set(val *AddFavorite201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddFavorite201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddFavorite201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddFavorite201Response(val *AddFavorite201Response) *NullableAddFavorite201Response {
	return &NullableAddFavorite201Response{value: val, isSet: true}
}

func (v NullableAddFavorite201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddFavorite201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


