/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws). 

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi-e621-go

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QueryIQDBGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryIQDBGet200Response{}

// QueryIQDBGet200Response struct for QueryIQDBGet200Response
type QueryIQDBGet200Response struct {
	Posts []IQDBResponse `json:"posts"`
}

type _QueryIQDBGet200Response QueryIQDBGet200Response

// NewQueryIQDBGet200Response instantiates a new QueryIQDBGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryIQDBGet200Response(posts []IQDBResponse) *QueryIQDBGet200Response {
	this := QueryIQDBGet200Response{}
	this.Posts = posts
	return &this
}

// NewQueryIQDBGet200ResponseWithDefaults instantiates a new QueryIQDBGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryIQDBGet200ResponseWithDefaults() *QueryIQDBGet200Response {
	this := QueryIQDBGet200Response{}
	return &this
}

// GetPosts returns the Posts field value
func (o *QueryIQDBGet200Response) GetPosts() []IQDBResponse {
	if o == nil {
		var ret []IQDBResponse
		return ret
	}

	return o.Posts
}

// GetPostsOk returns a tuple with the Posts field value
// and a boolean to check if the value has been set.
func (o *QueryIQDBGet200Response) GetPostsOk() ([]IQDBResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Posts, true
}

// SetPosts sets field value
func (o *QueryIQDBGet200Response) SetPosts(v []IQDBResponse) {
	o.Posts = v
}

func (o QueryIQDBGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryIQDBGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["posts"] = o.Posts
	return toSerialize, nil
}

func (o *QueryIQDBGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"posts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryIQDBGet200Response := _QueryIQDBGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueryIQDBGet200Response)

	if err != nil {
		return err
	}

	*o = QueryIQDBGet200Response(varQueryIQDBGet200Response)

	return err
}

type NullableQueryIQDBGet200Response struct {
	value *QueryIQDBGet200Response
	isSet bool
}

func (v NullableQueryIQDBGet200Response) Get() *QueryIQDBGet200Response {
	return v.value
}

func (v *NullableQueryIQDBGet200Response) Set(val *QueryIQDBGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryIQDBGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryIQDBGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryIQDBGet200Response(val *QueryIQDBGet200Response) *NullableQueryIQDBGet200Response {
	return &NullableQueryIQDBGet200Response{value: val, isSet: true}
}

func (v NullableQueryIQDBGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryIQDBGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


