openapi: 3.1.0
info:
  contact:
    name: Donovan_DMC
    url: https://e621.net/forum_topics/46279
  description: |
    OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br>
    This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br>
    Note if E621's api is under attack and/or cloudflare protections are enabled, the "Try it out" buttons here will not work.<br>
    If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws).
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: E621
  version: d69c34e
servers:
- description: E621 (production)
  url: https://e621.net
- description: E621 (Development)
  url: http://localhost:3000
paths:
  /artists.json:
    get:
      operationId: searchArtists
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - updated_at
          - name
          - post_count
          type: string
        style: form
      - explode: true
        in: query
        name: "search[name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[group_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[any_other_name_like]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[any_name_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[any_name_or_url_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[url_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[has_tag]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[is_linked]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/searchArtists_200_response_inner'
                type: array
          description: Success
      summary: Search Artists
      tags:
      - Artists
    post:
      description: |
        `other_names` & `urls` are silently truncated to 25 entries.
        `notes` is silently truncated to the wiki page limit (250,000).
        Individual `other_names` are silently truncated to 100 characters.
      operationId: createArtist
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createArtist_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Artist
      tags:
      - Artists
  /artists/{idOrName}.json:
    delete:
      description: |
        You must be an Admin+ to delete an artist.
      operationId: deleteArtist
      parameters:
      - description: The ID or name of the artist to edit.
        explode: false
        in: path
        name: idOrName
        required: true
        schema:
          $ref: '#/components/schemas/getArtist_idOrName_parameter'
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Artist
      tags:
      - Artists
    get:
      operationId: getArtist
      parameters:
      - description: The ID or name of the artist to get.
        explode: false
        in: path
        name: idOrName
        required: true
        schema:
          $ref: '#/components/schemas/getArtist_idOrName_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getArtist_200_response'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Artist
      tags:
      - Artists
    patch:
      description: |
        If an artist is locked, you must be Janitor+ to edit them.
        `other_names` & `urls` are silently truncated to 25 entries.
        `notes` is silently truncated to the wiki page limit (250,000).
        Individual `other_names` are silently truncated to 100 characters.
        If an artist is on the avoid posting list, you must have the bd staff user flag to edit name, other_names, or group_name.
      operationId: editArtist
      parameters:
      - description: The ID or name of the artist to edit.
        explode: false
        in: path
        name: idOrName
        required: true
        schema:
          $ref: '#/components/schemas/getArtist_idOrName_parameter'
        style: simple
      requestBody:
        content:
          application/c-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editArtist_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Artist
      tags:
      - Artists
  /artists/{idOrName}/revert.json:
    put:
      description: |
        If an artist is locked, you must be Janitor+ to revert them.
      operationId: revertArtist
      parameters:
      - description: The ID or name of the artist to revert.
        explode: false
        in: path
        name: idOrName
        required: true
        schema:
          $ref: '#/components/schemas/getArtist_idOrName_parameter'
        style: simple
      - description: The version ID to revert to.
        explode: true
        in: query
        name: version_id
        required: true
        schema:
          type: number
        style: form
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Revert Artist
      tags:
      - Artists
  /artist_versions.json:
    get:
      description: "When no results are found, an object with an `artist_versions`\
        \ key is returned."
      operationId: searchArtistVersions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - description: The order of the results.
        explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - name
          type: string
        style: form
      - description: The name of the artist.
        explode: true
        in: query
        name: "search[name]"
        required: false
        schema:
          type: string
        style: form
      - description: The id of the artist.
        explode: true
        in: query
        name: "search[artist_id]"
        required: false
        schema:
          type: string
        style: form
      - description: The name of the user that updated the artist.
        explode: true
        in: query
        name: "search[updater_name]"
        required: false
        schema:
          type: string
        style: form
      - description: The id of the user that updated the artist.
        explode: true
        in: query
        name: "search[updater_id]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchArtistVersions_200_response'
          description: Success
      summary: Search Artist Versions
      tags:
      - Artist Versions
  /artist_urls.json:
    get:
      operationId: searchArtistUrls
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - description: The order of the results.
        explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id
          - id_asc
          - id_desc
          - artist_id
          - artist_id_asc
          - artist_id_desc
          - url
          - url_asc
          - url_desc
          - normalized_url
          - normalized_url_asc
          - normalized_url_desc
          - created_at
          - created_at_asc
          - created_at_desc
          - updated_at
          - updated_at_asc
          - updated_at_desc
          type: string
        style: form
      - description: The name of the artist.
        explode: true
        in: query
        name: "search[artist_name]"
        required: false
        schema:
          type: string
        style: form
      - description: The id of the artist.
        explode: true
        in: query
        name: "search[artist_id]"
        required: false
        schema:
          type: string
        style: form
      - description: If the artist url is active.
        explode: true
        in: query
        name: "search[is_active]"
        required: false
        schema:
          type: boolean
        style: form
      - description: The url.
        explode: true
        in: query
        name: "search[url]"
        required: false
        schema:
          type: string
        style: form
      - description: "The normalized url. (http:, trailing `/`)"
        explode: true
        in: query
        name: "search[normalized_url]"
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Legacy nested search for artist. Supports the same parameters
          as /artists.json.
        explode: true
        in: query
        name: "search[artist]"
        required: false
        schema:
          type: object
        style: form
      - deprecated: true
        description: "Legacy name for `search[url]`."
        explode: true
        in: query
        name: "search[url_matches]"
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Legacy name for `search[normalized_url]`."
        explode: true
        in: query
        name: "search[normalized_url_matches]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/searchArtistUrls_200_response_inner'
                type: array
          description: Success
      summary: Search Artist URLs
      tags:
      - Artist URLs
  /avoid_postings.json:
    get:
      description: "When no results are found, an object with an `avoid_postings`\
        \ key is returned."
      operationId: searchAvoidPostings
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: string
        style: form
      - description: Any name matching.
        explode: true
        in: query
        name: "search[any_name_matches]"
        required: false
        schema:
          type: string
        style: form
      - description: The artist name of the avoid posting entry.
        explode: true
        in: query
        name: "search[artist_name]"
        required: false
        schema:
          type: string
        style: form
      - description: The artist id for the avoid posting entry.
        explode: true
        in: query
        name: "search[artist_id]"
        required: false
        schema:
          type: string
        style: form
      - description: Any other name matching.
        explode: true
        in: query
        name: "search[any_other_name_matches]"
        required: false
        schema:
          type: string
        style: form
      - description: The details of the avoid posting entry.
        explode: true
        in: query
        name: "search[details]"
        required: false
        schema:
          type: string
        style: form
      - description: The staff notes on the avoid posting entry. Must be Janitor+
          to use.
        explode: true
        in: query
        name: "search[staff_notes]"
        required: false
        schema:
          type: string
        style: form
      - description: If the avoid posting entry is active.
        explode: true
        in: query
        name: "search[is_active]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAvoidPostings_200_response'
          description: Success
      summary: Search Avoid Posting Entries
      tags:
      - Avoid Posting Entries
    post:
      description: "Must have the bd staff user flag. When no results are found, an\
        \ object with an `avoid_posting_versions` key is returned."
      operationId: createAvoidPosting
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createAvoidPosting_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvoidPosting'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Avoid Posting Entry
      tags:
      - Avoid Posting Entries
  /avoid_postings/{idOrArtistName}.json:
    delete:
      description: Must have the bd staff user flag.
      operationId: destroyAvoidPosting
      parameters:
      - description: "The ID of the avoid posting entry, or the name of the artist."
        explode: false
        in: path
        name: idOrArtistName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Destroy Avoid Posting Entry
      tags:
      - Avoid Posting Entries
    get:
      operationId: getAvoidPosting
      parameters:
      - description: "The ID of the avoid posting entry, or the name of the artist."
        explode: false
        in: path
        name: idOrArtistName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvoidPosting'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Avoid Posting Entry
      tags:
      - Avoid Posting Entries
    patch:
      description: Must have the bd staff user flag.
      operationId: editAvoidPosting
      parameters:
      - description: "The ID of the avoid posting entry, or the name of the artist."
        explode: false
        in: path
        name: idOrArtistName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editAvoidPosting_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvoidPosting'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Avoid Posting Entry
      tags:
      - Avoid Posting Entries
  /avoid_postings/{idOrArtistName}/delete.json:
    put:
      description: Must have the bd staff user flag.
      operationId: deleteAvoidPosting
      parameters:
      - description: "The ID of the avoid posting entry, or the name of the artist."
        explode: false
        in: path
        name: idOrArtistName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Avoid Posting Entry
      tags:
      - Avoid Posting Entries
  /avoid_postings/{idOrArtistName}/undelete.json:
    put:
      description: Must have the bd staff user flag.
      operationId: undeleteAvoidPosting
      parameters:
      - description: "The ID of the avoid posting entry, or the name of the artist."
        explode: false
        in: path
        name: idOrArtistName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Undelete Avoid Posting Entry
      tags:
      - Avoid Posting Entries
  /avoid_posting_versions.json:
    get:
      operationId: searchAvoidPostingVersions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - description: The order of the results.
        explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - description: The name of the updater of the avoid posting entry.
        explode: true
        in: query
        name: "search[updater_name]"
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the updater of the avoid posting entry.
        explode: true
        in: query
        name: "search[updater_id]"
        required: false
        schema:
          type: string
        style: form
      - description: Any name matching.
        explode: true
        in: query
        name: "search[any_name_matches]"
        required: false
        schema:
          type: string
        style: form
      - description: The artist name of the avoid posting entry.
        explode: true
        in: query
        name: "search[artist_name]"
        required: false
        schema:
          type: string
        style: form
      - description: The artist id for the avoid posting entry.
        explode: true
        in: query
        name: "search[artist_id]"
        required: false
        schema:
          type: string
        style: form
      - description: Any other name matching.
        explode: true
        in: query
        name: "search[any_other_name_matches]"
        required: false
        schema:
          type: string
        style: form
      - description: Any other name matching.
        explode: true
        in: query
        name: "search[group_name]"
        required: false
        schema:
          type: string
        style: form
      - description: If the avoid posting entry is active.
        explode: true
        in: query
        name: "search[is_active]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAvoidPostingVersions_200_response'
          description: Success
      summary: Search Avoid Posting Versions
      tags:
      - Avoid Posting Versions
  /bans.json:
    get:
      description: "When no results are found, an object with an `bans` key is returned."
      operationId: searchBans
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - description: The order of the results.
        explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - expires_at_desc
          type: string
        style: form
      - description: The ID of the banner.
        explode: true
        in: query
        name: "search[banner_id]"
        required: false
        schema:
          type: string
        style: form
      - description: The name of banner.
        explode: true
        in: query
        name: "search[banner_name]"
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the banned user.
        explode: true
        in: query
        name: "search[user_id]"
        required: false
        schema:
          type: string
        style: form
      - description: The name of the banned user.
        explode: true
        in: query
        name: "search[user_name]"
        required: false
        schema:
          type: string
        style: form
      - description: The reason of the ban.
        explode: true
        in: query
        name: "search[reason_matches]"
        required: false
        schema:
          type: string
        style: form
      - description: If the ban is expired.
        explode: true
        in: query
        name: "search[expired]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchBans_200_response'
          description: Success
      summary: Search Bans
      tags:
      - Bans
  /bans/{id}.json:
    get:
      operationId: getBan
      parameters:
      - description: The ID of the ban to get.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ban'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Ban
      tags:
      - Bans
  /blips.json:
    get:
      description: "When no results are found, an object with an `blips` key is returned."
      operationId: searchBlips
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - updated_at
          - updated_at_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[body_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[response_to]"
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchBlips_200_response'
          description: Success
      summary: Search Blips
      tags:
      - Blips
    post:
      operationId: createBlip
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createBlip_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blip'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Blip
      tags:
      - Blips
  /blips/{id}.json:
    delete:
      description: |
        You must be Admin+.
      operationId: deleteBlip
      parameters:
      - description: The ID of the blip.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Blip
      tags:
      - Blips
    get:
      operationId: getBlip
      parameters:
      - description: The ID of the blip to get.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Blip'
                type: array
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Blip
      tags:
      - Blips
    patch:
      description: "Unless Admin+, blips cannot be edited after 5 minutes. Marked\
        \ blips cannot be edited."
      operationId: editBlip
      parameters:
      - description: The ID of the blip.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editBlip_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blip'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Blip
      tags:
      - Blips
  /blips/{id}/hide.json:
    post:
      description: |
        You must be the creator or Moderator+.
      operationId: hideBlip
      parameters:
      - description: The ID of the blip.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blip'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Hide Blip
      tags:
      - Blips
  /blips/{id}/unhide.json:
    post:
      description: |
        You must be Moderator+.
      operationId: unhideBlip
      parameters:
      - description: The ID of the blip.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blip'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Unhide Blip
      tags:
      - Blips
  /blips/{id}/warning.json:
    post:
      description: You must be Moderator+.
      operationId: markBlip
      parameters:
      - description: The ID of the blip.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/warning'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DTextResponse'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Mark Blip
      tags:
      - Blips
  /bulk_update_requests.json:
    get:
      description: "When no results are found, an object with an `bulk_update_requests`\
        \ key is returned."
      operationId: searchBulkUpdateRequests
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - status_desc
          - updated_at_desc
          - updated_at_asc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[user_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[user_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[approver_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[approver_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[forum_topic_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[forum_post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[status]"
        required: false
        schema:
          description: Multiple can be specified via comma separating.
          enum:
          - approved
          - rejected
          - pending
          type: string
        style: form
      - explode: true
        in: query
        name: "search[title_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[script_matches]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchBulkUpdateRequests_200_response'
          description: Success
      summary: Search Bulk Update Requests
      tags:
      - Bulk Update Requests
    post:
      operationId: createBulkUpdateRequest
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createBulkUpdateRequest_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateRequest'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Bulk Update Request
      tags:
      - Bulk Update Requests
  /bulk_update_request/{id}.json:
    delete:
      description: "You must be the creator of the BUR, or Admin+."
      operationId: rejectBulkUpdateRequest
      parameters:
      - description: The ID of the bulk update request.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Reject Bulk Update Request
      tags:
      - Bulk Update Requests
    get:
      operationId: getBulkUpdateRequest
      parameters:
      - description: The ID of the bulk update request.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateRequest'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Bulk Update Request
      tags:
      - Bulk Update Requests
    patch:
      description: "You must be the creator of the BUR, or Admin+."
      operationId: editBulkUpdateRequest
      parameters:
      - description: The ID of the bulk update request.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editBulkUpdateRequest_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Bulk Update Request
      tags:
      - Bulk Update Requests
  /bulk_update_request/{id}/approve.json:
    post:
      description: Must be Admin+.
      operationId: approveBulkUpdateRequest
      parameters:
      - description: The ID of the bulk update request.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Approve Bulk Update Request
      tags:
      - Bulk Update Requests
  /comments.json:
    get:
      description: "For searching comments, group_by=comment must be set. When no\
        \ results are found, an object with an `comments` key is returned."
      operationId: searchComments
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - status
          - status_desc
          - updated_at_desc
          type: string
        style: form
      - explode: true
        in: query
        name: group_by
        required: false
        schema:
          enum:
          - comment
          - post
          type: string
        style: form
      - explode: true
        in: query
        name: "search[body_matches]"
        required: false
        schema:
          type: string
        style: form
      - description: Accepts a comma separated list.
        explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[post_tags_match]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_note_updater_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_note_updater_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[is_sticky]"
        required: false
        schema:
          type: boolean
        style: form
      - description: Only usable by Moderator+
        explode: true
        in: query
        name: "search[is_hidden]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[do_not_bump_post]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchComments_200_response'
          description: Success
      summary: Search Comments
      tags:
      - Comments
    post:
      operationId: createComment
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createComment_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Comment
      tags:
      - Comments
  /comments/{id}.json:
    delete:
      description: |
        You must be Admin+.
      operationId: deleteComment
      parameters:
      - description: The ID of the comment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Comment
      tags:
      - Comments
    get:
      description: "If the comment is hidden, you must be the creator or Moderator+\
        \ to see it."
      operationId: getComment
      parameters:
      - description: The ID of the comment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Comment
      tags:
      - Comments
    patch:
      description: |
        You must be the creator of the comment, or Admin+ to edit. Marked comments cannot be edited.
      operationId: editComment
      parameters:
      - description: The ID of the comment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editComment_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Comment
      tags:
      - Comments
  /comments/{id}/hide.json:
    post:
      description: |
        You must be the creator or Moderator+.
      operationId: hideComment
      parameters:
      - description: The ID of the comment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Hide Comment
      tags:
      - Comments
  /comments/{id}/unhide.json:
    post:
      description: |
        You must be Moderator+.
      operationId: unhideComment
      parameters:
      - description: The ID of the comment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Unhide Comment
      tags:
      - Comments
  /comments/{id}/warning.json:
    post:
      description: You must be Moderator+.
      operationId: markComment
      parameters:
      - description: The ID of the comment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/warning'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DTextResponse'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Mark Comment
      tags:
      - Comments
  /comments/{id}/votes.json:
    delete:
      operationId: deleteCommentVote
      parameters:
      - description: The ID of the comment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Delete Comment Vote
      tags:
      - Comment Votes
    post:
      operationId: createCommentVote
      parameters:
      - description: The ID of the comment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: score
        required: true
        schema:
          enum:
          - -1
          - 1
          type: number
        style: form
      - explode: true
        in: query
        name: no_unvote
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createCommentVote_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Comment Vote
      tags:
      - Comment Votes
  /comment_votes/lock.json:
    post:
      description: |
        You must be Moderator+. Errors if ids is not provided.
      operationId: lockCommentVotes
      parameters:
      - description: "The IDs of the comment votes, comma separated."
        explode: true
        in: query
        name: ids
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Lock Comment Votes
      tags:
      - Comment Votes
  /comment_votes/delete.json:
    post:
      description: |
        You must be Admin+. Errors if ids is not provided.
      operationId: deleteCommentVotes
      parameters:
      - description: "The IDs of the comment votes, comma separated."
        explode: true
        in: query
        name: ids
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      security:
      - basicAuth: []
      summary: Delete Comment Vote
      tags:
      - Comment Votes
  /dmails.json:
    get:
      description: "When no results are found, an object with a `dmails` key is returned."
      operationId: searchDMails
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[title_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[message_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[to_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[to_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[from_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[from_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[is_read]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[is_deleted]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[read]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchDMails_200_response'
          description: Success
      summary: Search DMails
      tags:
      - DMails
  /dmails/{id}.json:
    delete:
      description: Deleting simply hides your copy of the dmail.
      operationId: deleteDMail
      parameters:
      - description: The ID of the dmail.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete DMail
      tags:
      - DMails
    get:
      description: Fetching a dmail will not mark it as read.
      operationId: getDMail
      parameters:
      - description: The ID of the dmail.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DMail'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get DMail
      tags:
      - DMails
  /dmails/{id}/mark_as_read.json:
    put:
      operationId: markDMailAsRead
      parameters:
      - description: The ID of the dmail.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Mark DMail As Read
      tags:
      - DMails
  /dmails/{id}/mark_as_unread.json:
    put:
      operationId: markDMailAsUnread
      parameters:
      - description: The ID of the dmail.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Mark DMail As Unread
      tags:
      - DMails
  /dmails/mark_all_as_unread.json:
    put:
      operationId: markAllDMailsAsUnread
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Mark All DMails As Unread
      tags:
      - DMails
  /dtext_preview.json:
    post:
      description: "Note while this route does not require auth, without auth it requires\
        \ a CSRF token. For that reason it has been marked as requiring auth."
      operationId: previewDText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/previewDText_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DTextResponse'
          description: Success
      security:
      - basicAuth: []
      summary: Preview DText
      tags:
      - DText
  /email_blacklists.json:
    get:
      description: "You must be Admin+. When no results are found, an object with\
        \ an `email_blacklists` key is returned."
      operationId: searchEmailBlacklists
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - reason
          - domain
          type: string
        style: form
      - explode: true
        in: query
        name: "search[domain]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[reason]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchEmailBlacklists_200_response'
          description: Success
      summary: Search Email Blacklists
      tags:
      - Email Blacklists
    post:
      description: You must be Admin+.
      operationId: createEmailBlacklist
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createEmailBlacklist_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailBlacklist'
          description: Success
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Email Blacklist
      tags:
      - Email Blacklists
  /email_blacklists/{id}.json:
    delete:
      description: You must be Admin+.
      operationId: deleteEmailBlacklist
      parameters:
      - description: The ID of the email blacklist.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Email Blacklist
      tags:
      - Email Blacklists
  /favorites.json:
    get:
      operationId: listFavorites
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - description: You must be the user or Moderator+ if the user has their favorites
          hidden.
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFavorites_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: List Favorites
      tags:
      - Favorites
    post:
      operationId: addFavorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addFavorite_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Add Favorite
      tags:
      - Favorites
  /favorites/{id}.json:
    delete:
      operationId: removeFavorite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Remove Favorite
      tags:
      - Favorites
  /forum_posts.json:
    get:
      description: "When no results are found, an object with an `forum_posts` key\
        \ is returned."
      operationId: searchForumPosts
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[topic_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[topic_title_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[body_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[topic_category_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[is_hidden]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchForumPosts_200_response'
          description: Success
      summary: Search Forum Posts
      tags:
      - Forum Posts
    post:
      operationId: createForumPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createForumPost_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumPost'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Forum Post
      tags:
      - Forum Posts
  /forum_posts/{id}.json:
    delete:
      description: You must be Admin+.
      operationId: deleteForumPost
      parameters:
      - description: The ID of the forum post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Forum Post
      tags:
      - Forum Posts
    get:
      description: "If the forum post is hidden, you must be the creator or Moderator+\
        \ to see it."
      operationId: getForumPost
      parameters:
      - description: The ID of the forum post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumPost'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Forum Post
      tags:
      - Forum Posts
    patch:
      description: "You must be the creator of the forum post, or Admin+ to edit.\
        \ Marked forum posts cannot be edited."
      operationId: editForumPost
      parameters:
      - description: The ID of the forum post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editForumPost_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Forum Post
      tags:
      - Forum Posts
  /forum_posts/{id}/hide.json:
    post:
      description: You must be the creator or Moderator+.
      operationId: hideForumPost
      parameters:
      - description: The ID of the forum post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumPost'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Hide Forum Post
      tags:
      - Forum Posts
  /forum_posts/{id}/unhide.json:
    post:
      description: You must be Moderator+.
      operationId: unhideForumPost
      parameters:
      - description: The ID of the forum post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumPost'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Unhide Forum Post
      tags:
      - Forum Posts
  /forum_posts/{id}/warning.json:
    post:
      description: |
        You must be Moderator+.
      operationId: markForumPost
      parameters:
      - description: The ID of the forum post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/warning'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DTextResponse'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Mark Forum Post
      tags:
      - Forum Posts
  /forum_posts/{id}/votes.json:
    delete:
      operationId: deleteForumPostVote
      parameters:
      - description: The ID of the forum post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Delete Forum Post Vote
      tags:
      - Forum Post Votes
    post:
      operationId: createForumPostVote
      parameters:
      - description: The ID of the forum post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createForumPostVote_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumPostVote'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Forum Post Vote
      tags:
      - Forum Post Votes
  /forum_topics.json:
    get:
      operationId: searchForumTopics
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - sticky
          type: string
        style: form
      - explode: true
        in: query
        name: "search[title]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[title_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[category_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[is_sticky]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[is_locked]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[is_hidden]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ForumTopic'
                type: array
          description: Success
      summary: Search Forum Topics
      tags:
      - Forum Topics
    post:
      operationId: createForumTopic
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createForumTopic_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumTopic'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Forum Topic
      tags:
      - Forum Topics
  /forum_topics/{id}.json:
    delete:
      description: You must be Admin+.
      operationId: deleteForumTopic
      parameters:
      - description: The ID of the forum topic.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Forum Topic
      tags:
      - Forum Topics
    get:
      description: "If the forum topic is hidden, you must be the creator or Moderator+\
        \ to see it."
      operationId: getForumTopic
      parameters:
      - description: The ID of the forum topic.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumTopic'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Forum Forum Topic
      tags:
      - Forum Topics
    patch:
      operationId: editForumTopic
      parameters:
      - description: The ID of the forum topic.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editForumTopic_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Forum Topic
      tags:
      - Forum Topics
  /forum_topics/{id}/hide.json:
    post:
      description: You must be the creator or Moderator+.
      operationId: hideForumTopic
      parameters:
      - description: The ID of the forum topic.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumTopic'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Hide Forum Topic
      tags:
      - Forum Topics
  /forum_topics/{id}/unhide.json:
    post:
      description: You must be Moderator+.
      operationId: unhideForumTopic
      parameters:
      - description: The ID of the forum topic.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumTopic'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Unhide Forum Topic
      tags:
      - Forum Topics
  /forum_topics/{id}/subscribe.json:
    post:
      operationId: subscribeForumTopic
      parameters:
      - description: The ID of the forum topic.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumTopic'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Subscribe To Forum Topic
      tags:
      - Forum Topics
  /forum_topics/{id}/unsubscribe.json:
    post:
      operationId: unsubscribeForumTopic
      parameters:
      - description: The ID of the forum topic.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForumTopic'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Unsubscribe From Forum Topic
      tags:
      - Forum Topics
  /forum_topics/mark_all_as_read.json:
    post:
      operationId: markAllForumTopicsAsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/markAllForumTopicsAsRead_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      security:
      - basicAuth: []
      summary: Mark All Forum Topics As Read
      tags:
      - Forum Topics
  /help.json:
    get:
      description: Will error if no help pages exist.
      operationId: listHelpPages
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Help'
                type: array
          description: Success
      summary: List Help Pages
      tags:
      - Help Pages
    post:
      description: You must be Admin+.
      operationId: createHelpPage
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createHelpPage_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Help'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Help Page
      tags:
      - Help Pages
  /help/{id}.json:
    delete:
      description: You must be Admin+.
      operationId: deleteHelpPage
      parameters:
      - description: The ID of the help page.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Help Page
      tags:
      - Help Pages
    get:
      operationId: getHelpPage
      parameters:
      - description: The ID or name of the help page.
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/getArtist_idOrName_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Help'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Help Page
      tags:
      - Help Pages
    patch:
      description: You must be Admin+
      operationId: editHelpPage
      parameters:
      - description: The ID of the help page.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editHelpPage_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Help Page
      tags:
      - Help Pages
  /ip_bans.json:
    get:
      description: "You must be Admin+. When no results are found, an object with\
        \ an `ip_bans` key is returned."
      operationId: listIPBans
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[banner_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[banner_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[reason]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIPBans_200_response'
          description: Success
      security:
      - basicAuth: []
      summary: List IP Bans
      tags:
      - IP Bans
    post:
      description: You must be Admin+.
      operationId: createIPBan
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createIPBan_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPBan'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create IP Ban
      tags:
      - IP Bans
  /ip_bans/{id}.json:
    delete:
      description: You must be Admin+.
      operationId: deleteIPBan
      parameters:
      - description: The ID of the ip ban.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete IP Ban
      tags:
      - IP Bans
  /iqdb_queries.json:
    get:
      operationId: queryIQDBGet
      parameters:
      - explode: true
        in: query
        name: "search[score_cutoff]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[url]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[hash]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryIQDBGet_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      summary: Query IQDB
      tags:
      - IQDB
    post:
      operationId: queryIQDPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/queryIQDPost_request'
          application/json:
            schema:
              $ref: '#/components/schemas/queryIQDPost_request_1'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryIQDBGet_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      summary: Query IQDB
      tags:
      - IQDB
  /mascots.json:
    get:
      description: "When no results are found, an object with an `mascots` key is\
        \ returned."
      operationId: searchMascots
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchMascots_200_response'
          description: Success
      summary: Search Mascots
      tags:
      - Mascots
    post:
      description: You must be Admin+.
      operationId: createMascot
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createMascot_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mascot'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Mascot
      tags:
      - Mascots
  /mascots/{id}.json:
    delete:
      description: You must be Admin+.
      operationId: deleteMascot
      parameters:
      - description: The ID of the mascot.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Mascot
      tags:
      - Mascots
    patch:
      description: You must be Admin+.
      operationId: editMascot
      parameters:
      - description: The ID of the mascot.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/editMascot_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Mascot
      tags:
      - Mascots
  /mod_actions.json:
    get:
      description: |
        Note that some mod actions are not in use anymore. Their entries exist for historical purposes only.<br>
        The current legacy actions are as follows:<br>
        * `created_positive_record`, `created_neutral_record`, `created_negative_record`
        * `created_flag_reason`, `edited_flag_reason`, `deleted_flag_reason`
        * `post_move_favorites`, `post_delete`, `post_undelete`, `post_destroy`, `post_rating_lock`, `post_unapprove`
        * `post_replacement_accept`, `post_replacement_reject`, `post_replacement_delete`
      operationId: searchModActions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[action]"
        required: false
        schema:
          $ref: '#/components/schemas/ModactionActions'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModAction'
                type: array
          description: Success
      summary: Search Mod Actions
      tags:
      - Mod Actions
  /news_updates.json:
    get:
      description: "When no results are found, an object with an `news_updates` key\
        \ is returned."
      operationId: listNewsUpdates
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listNewsUpdates_200_response'
          description: Success
      summary: List News Updates
      tags:
      - News Updates
    post:
      description: You must be Admin+.
      operationId: createNewsUpdate
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createNewsUpdate_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsUpdate'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create News Update
      tags:
      - News Updates
  /news_updates/{id}.json:
    delete:
      description: You must be Admin+.
      operationId: deleteNewsUpdate
      parameters:
      - description: The ID of the news update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete News Update
      tags:
      - News Updates
    patch:
      description: You must be Admin+
      operationId: editNewsUpdate
      parameters:
      - description: The ID of the news update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createNewsUpdate_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit News Update
      tags:
      - News Updates
  /notes.json:
    get:
      description: "When no results are found, an object with an `notes` key is returned."
      operationId: searchNotes
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[body_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[is_active]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[post_tags_match]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_note_updater_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[post_note_updater_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchNotes_200_response'
          description: Success
      summary: Search Notes
      tags:
      - Notes
    post:
      operationId: createNote
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createNote_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createNote_201_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Note
      tags:
      - Notes
  /notes/{id}.json:
    delete:
      operationId: deleteNote
      parameters:
      - description: The ID of the note.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Note
      tags:
      - Notes
    get:
      operationId: getNote
      parameters:
      - description: The ID of the note.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Note
      tags:
      - Notes
    patch:
      operationId: editNote
      parameters:
      - description: The ID of the note.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editNote_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Note
      tags:
      - Notes
  /notes/{id}/revert.json:
    post:
      operationId: revertNote
      parameters:
      - description: The ID of the note.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      - description: The version ID to revert to.
        explode: true
        in: query
        name: version_id
        required: true
        schema:
          type: number
        style: form
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Revert Note
      tags:
      - Notes
  /note_versions.json:
    get:
      description: "When no results are found, an object with an `note_versions` key\
        \ is returned."
      operationId: searchNoteVersions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - description: The order of the results.
        explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[updater_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[updater_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[note_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[is_active]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[body_matches]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchNoteVersions_200_response'
          description: Success
      summary: Search Note Versions
      tags:
      - Note Versions
  /pools.json:
    get:
      operationId: searchPools
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - name
          - created_at
          - post_count
          type: string
        style: form
      - explode: true
        in: query
        name: "search[name_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[description_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[category]"
        required: false
        schema:
          $ref: '#/components/schemas/PoolCategories'
        style: form
      - explode: true
        in: query
        name: "search[is_active]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pool'
                type: array
          description: Success
      summary: Search Pools
      tags:
      - Pools
    post:
      operationId: createPool
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createPool_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Pool
      tags:
      - Pools
  /pools/{id}.json:
    delete:
      description: You must be Janitor+.
      operationId: deletePool
      parameters:
      - description: The ID of the pool.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Pool
      tags:
      - Pools
    get:
      operationId: getPool
      parameters:
      - description: The ID of the pool.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Pool
      tags:
      - Pools
    patch:
      operationId: editPool
      parameters:
      - description: The ID of the pool.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editPool_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Pool
      tags:
      - Pools
  /pools/{id}/revert.json:
    put:
      operationId: revertPool
      parameters:
      - description: The ID of the pool.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      - description: The version ID to revert to.
        explode: true
        in: query
        name: version_id
        required: true
        schema:
          type: number
        style: form
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Revert Pool
      tags:
      - Pools
  /pool_element.js:
    post:
      description: "Note that the extension is JS, this route will not return JSON."
      operationId: addPostToPool
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/addPostToPool_request'
      responses:
        "200":
          description: Success
      security:
      - basicAuth: []
      summary: Add Post To Pool
      tags:
      - Pools
  /pool_element.json:
    delete:
      operationId: removePostFromPool
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/removePostFromPool_request'
      responses:
        "204":
          description: Success
      security:
      - basicAuth: []
      summary: Remove Post From Pool
      tags:
      - Pools
  /pool_versions.json:
    get:
      description: "When no results are found, an object with an `pool_versions` key\
        \ is returned."
      operationId: searchPoolVersions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - description: The order of the results.
        explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[updater_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[updater_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[pool_id]"
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchPoolVersions_200_response'
          description: Success
      summary: Search Pool Versions
      tags:
      - Pool Versions
  /popular.json:
    get:
      operationId: listPopular
      parameters:
      - $ref: '#/components/parameters/limit'
      - description: "The date to list popular uploads for. Only The day, month, and\
          \ year are considered."
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "The scale of the results, in relation to `date`."
        explode: true
        in: query
        name: scale
        required: false
        schema:
          enum:
          - month
          - week
          - day
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFavorites_200_response'
          description: Success
      summary: List Most Upvoted Posts
      tags:
      - Popular
  /posts.json:
    get:
      operationId: searchPosts
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: md5
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: random
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFavorites_200_response'
          description: Success
      summary: Search Posts
      tags:
      - Posts
  /posts/{id}.json:
    get:
      operationId: getPost
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Post
      tags:
      - Posts
    patch:
      description: Most errors are silently swallowed.
      operationId: editPost
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editPost_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Post
      tags:
      - Posts
  /posts/{id}/update_iqdb.json:
    get:
      description: You must be Admin+.
      operationId: updatePostIqdb
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Update Post IQDB
      tags:
      - Posts
  /posts/{id}/mark_as_translated.json:
    post:
      description: Will error if no body is provided.
      operationId: markPostAsTranslated
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/markPostAsTranslated_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Mark Post As Translated
      tags:
      - Posts
  /posts/{id}/copy_notes.json:
    put:
      operationId: copyNotesToPost
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/copyNotesToPost_request'
      responses:
        "204":
          description: Success
        "400":
          $ref: '#/components/responses/MessageError'
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Copy Notes To Post
      tags:
      - Posts
  /posts/{id}/revert.json:
    post:
      operationId: revertPost
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      - description: The version ID to revert to.
        explode: true
        in: query
        name: version_id
        required: true
        schema:
          type: number
        style: form
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Revert Post
      tags:
      - Posts
  /posts/{id}/show_seq.json:
    get:
      operationId: getPostInSequence
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      - description: The direction to move in the sequence.
        explode: true
        in: query
        name: seq
        required: false
        schema:
          enum:
          - next
          - prev
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      summary: Get Post In Sequence
      tags:
      - Posts
  /posts/{id}/flag.json:
    delete:
      description: You must have the "Approve Posts" permission.
      operationId: unflagPost
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/unflagPost_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Unflag Post
      tags:
      - Posts
  /posts/random.json:
    get:
      operationId: getRandomPost
      parameters:
      - explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Random Post
      tags:
      - Posts
  /post_sets.json:
    get:
      description: "When no results are found, an object with a `post_sets` key is\
        \ returned."
      operationId: searchPostSets
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - name
          - shortname
          - post_count
          - postcount
          - created_at
          - updated_at
          - update
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[shortname]"
        required: false
        schema:
          type: string
        style: form
      - description: You must be Moderator+.
        explode: true
        in: query
        name: "search[is_public]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[maintainer_id]"
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchPostSets_200_response'
          description: Success
      summary: Search Post Sets
      tags:
      - Post Sets
    post:
      operationId: createPostSet
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createPostSet_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSet'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Post Set
      tags:
      - Post Sets
  /post_sets/{id}.json:
    delete:
      description: "You must be the owner of the set, or Admin+."
      operationId: deletePostSet
      parameters:
      - description: The ID of the post set.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Post Set
      tags:
      - Post Sets
    get:
      description: You must be Moderator+ if the set is not public.
      operationId: getPostSet
      parameters:
      - description: The ID of the post set.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSet'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Post Set
      tags:
      - Post Sets
    patch:
      description: "You must be the owner of the set, or Admin+."
      operationId: editPostSet
      parameters:
      - description: The ID of the post sets.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editPostSet_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Post Set
      tags:
      - Post Sets
  /post_sets/{id}/update_posts.json:
    post:
      description: "You must be the owner of the set, a maintainer (if public), or\
        \ Admin+."
      operationId: updatePostSetPosts
      parameters:
      - description: The ID of the post set.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/updatePostSetPosts_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSet'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Update Post Set Posts
      tags:
      - Post Sets
  /post_sets/{id}/add_posts.json:
    post:
      description: "You must be the owner of the set, a maintainer (if public), or\
        \ Admin+."
      operationId: addPostsToPostSet
      parameters:
      - description: The ID of the post set.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/addPostsToPostSet_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSet'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Add Posts To Post Set
      tags:
      - Post Sets
  /post_sets/{id}/remove_posts.json:
    post:
      description: "You must be the owner of the set, a maintainer (if public), or\
        \ Admin+."
      operationId: removePostsFromPostSet
      parameters:
      - description: The ID of the post set.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/addPostsToPostSet_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSet'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Remove Posts From Post Set
      tags:
      - Post Sets
  /post_sets/for_select.json:
    get:
      description: "You must be the owner of the set, a maintainer (if public), or\
        \ Admin+."
      operationId: listPostSetsForSelect
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPostSetsForSelect_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: List Post Sets For Select
      tags:
      - Post Sets
  /post_approvals.json:
    get:
      description: "When no results are found, an object with an `post_approvals`\
        \ key is returned."
      operationId: searchPostApprovals
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_tags_match]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[user_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[user_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchPostApprovals_200_response'
          description: Success
      summary: Search Post Approvals
      tags:
      - Post Approvals
  /post_events.json:
    get:
      operationId: searchPostEvents
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[action]"
        required: false
        schema:
          $ref: '#/components/schemas/PostEventActions'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchPostEvents_200_response'
          description: Success
      security:
      - basicAuth: []
      summary: Search Post Events
      tags:
      - Post Events
  /post_flags.json:
    get:
      description: "When no results are found, an object with an `post_flags` key\
        \ is returned."
      operationId: searchPostFlags
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[reason_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[post_tags_match]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[type]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[is_resolved]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchPostFlags_200_response'
          description: Success
      summary: Search Post Flags
      tags:
      - Post Flags
    post:
      description: Will error if post_id is not provided.
      operationId: createPostFlag
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createPostFlag_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFlag'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Post Flag
      tags:
      - Post Flags
  /post_flags/{id}.json:
    get:
      operationId: getPostFlag
      parameters:
      - description: The ID of the post flag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFlag'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Post Flag
      tags:
      - Post Flags
  /post_replacements.json:
    get:
      description: "When no results are found, an object with an `post_replacements`\
        \ key is returned."
      operationId: searchPostReplacements
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[file_ext]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[md5]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[status]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[approver_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[approver_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[rejector_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[rejector_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[uploader_name_on_approve]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[uploader_id_on_approve]"
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchPostReplacements_200_response'
          description: Success
      summary: Search Post Replacements
      tags:
      - Post Replacements
    post:
      operationId: createPostReplacement
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createPostReplacement_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createPostReplacement_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "412":
          $ref: '#/components/responses/MessageError'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Post Replacement
      tags:
      - Post Replacements
  /post_replacements/{id}.json:
    delete:
      description: You must be Admin+.
      operationId: deletePostReplacement
      parameters:
      - description: The ID of the post replacement.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Post Replacement
      tags:
      - Post Replacements
  /post_replacements/{id}/approve.json:
    put:
      description: You must have the "Approve Posts" permission.
      operationId: approvePostReplacement
      parameters:
      - description: The ID of the post replacement.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Approve Post Replacement
      tags:
      - Post Replacements
  /post_replacements/{id}/reject.json:
    put:
      description: You must have the "Approve Posts" permission.
      operationId: rejectPostReplacement
      parameters:
      - description: The ID of the post replacement.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rejectPostReplacement_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Reject Post Replacement
      tags:
      - Post Replacements
  /post_replacements/{id}/promote.json:
    post:
      description: You must have the "Approve Posts" permission.
      operationId: promotePostReplacement
      parameters:
      - description: The ID of the post replacement.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Promote Post Replacement
      tags:
      - Post Replacements
  /post_replacements/{id}/toggle_penalize.json:
    put:
      description: You must have the "Approve Posts" permission.
      operationId: togglePostReplacementPenalty
      parameters:
      - description: The ID of the post replacement.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Toggle Post Replacement Penalty
      tags:
      - Post Replacements
  /post_versions.json:
    get:
      description: Errors if no results are found.
      operationId: searchPostVersions
      parameters:
      - $ref: '#/components/parameters/limit'
      - description: "The page number of results to get. Between 1 and 750. Note that\
          \ for post versions specifically, you can only go through the 10,000 most\
          \ recent results with page numbers."
        explode: true
        in: query
        name: page
        required: false
        schema:
          maximum: 750
          minimum: 1
          type: number
        style: form
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[updater_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[updater_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[start_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[rating]"
        required: false
        schema:
          $ref: '#/components/schemas/Ratings'
        style: form
      - explode: true
        in: query
        name: "search[rating_changed]"
        required: false
        schema:
          enum:
          - e
          - q
          - s
          - any
          type: string
        style: form
      - explode: true
        in: query
        name: "search[parent_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[parent_id_changed]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[tags]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[tags_removed]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[tags_added]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[locked_tags]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[locked_tags_removed]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[locked_tags_added]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[reason]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[description]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[description_changed]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[source_changed]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[uploads]"
        required: false
        schema:
          enum:
          - included
          - excluded
          - only
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PostVersion'
                type: array
          description: Success
      summary: Search Post Versions
      tags:
      - Post Versions
  /posts/{id}/votes.json:
    delete:
      operationId: deletePostVote
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Delete Post Vote
      tags:
      - Post Votes
    post:
      operationId: createPostVote
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: score
        required: true
        schema:
          enum:
          - -1
          - 1
          type: number
        style: form
      - explode: true
        in: query
        name: no_unvote
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createPostVote_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Post Vote
      tags:
      - Post Votes
  /post_votes/lock.json:
    post:
      description: You must be Moderator+. Errors if ids is not provided.
      operationId: lockPostVote
      parameters:
      - description: "The IDs of the post votes, comma separated."
        explode: true
        in: query
        name: ids
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Lock Post Vote
      tags:
      - Post Votes
  /post_votes/delete.json:
    post:
      description: You must be Admin+. Errors if ids is not provided.
      operationId: deletePostVotes
      parameters:
      - description: "The IDs of the post votes, comma separated."
        explode: true
        in: query
        name: ids
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      security:
      - basicAuth: []
      summary: Delete Post Vote
      tags:
      - Post Votes
  /tags.json:
    get:
      description: "When no results are found, an object with an `tags` key is returned."
      operationId: searchTags
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - name
          - date
          - count
          - similarity
          type: string
        style: form
      - explode: true
        in: query
        name: "search[fuzzy_name_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[name_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[category]"
        required: false
        schema:
          $ref: '#/components/schemas/TagCategories'
        style: form
      - explode: true
        in: query
        name: "search[hide_empty]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[has_wiki]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[has_artist]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchTags_200_response'
          description: Success
      summary: Search Tags
      tags:
      - Tags
  /tags/{id}.json:
    get:
      operationId: getTag
      parameters:
      - description: The ID or name of the tag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/getArtist_idOrName_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Tag
      tags:
      - Tags
    patch:
      description: Must be Admin+ if the tag is locked or post count is >100.
      operationId: editTag
      parameters:
      - description: The ID of the tag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editTag_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Tag
      tags:
      - Tags
  /tags/{id}/correction.json:
    post:
      description: You must be Janitor+. `commit=Fix` must be set.
      operationId: correctTag
      parameters:
      - description: The ID of the tag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/correctTag_request'
      responses:
        "302":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Correct Tag
      tags:
      - Tags
  /tags/preview.json:
    get:
      description: "Note while this route does not require auth, without auth it requires\
        \ a CSRF token. For that reason it has been marked as requiring auth."
      operationId: previewTags
      parameters:
      - description: "The tags to preview, space separated."
        explode: true
        in: query
        name: tags
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagPreview'
                type: array
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Preview Tags
      tags:
      - Tags
  /tag_type_versions.json:
    get:
      description: "When no results are found, an object with an `tag_type_versions`\
        \ key is returned."
      operationId: searchTagVersions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[tag]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[user_id]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[user_name]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchTagVersions_200_response'
          description: Success
      summary: Search Tag Versions
      tags:
      - Tag Versions
  /tag_aliases.json:
    get:
      description: "When no results are found, an object with an `tag_aliases` key\
        \ is returned."
      operationId: searchTagAliases
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - created_at
          - updated_at
          - name
          - tag_count
          type: string
        style: form
      - explode: true
        in: query
        name: "search[name_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[antecedent_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[consequent_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[status]"
        required: false
        schema:
          $ref: '#/components/schemas/TagRequestStatuses'
        style: form
      - explode: true
        in: query
        name: "search[antecedent_tag_category]"
        required: false
        schema:
          $ref: '#/components/schemas/TagCategories'
        style: form
      - explode: true
        in: query
        name: "search[consequent_tag_category]"
        required: false
        schema:
          $ref: '#/components/schemas/TagCategories'
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[approver_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[approver_name]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchTagAliases_200_response'
          description: Success
      summary: Search Tag Aliases
      tags:
      - Tag Aliases
  /tag_aliases/{id}.json:
    delete:
      description: "You must be the creator of the request (if pending), or Admin+."
      operationId: rejectTagAlias
      parameters:
      - description: The ID of the tag alias.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Reject Tag Alias
      tags:
      - Tag Aliases
    get:
      operationId: getTagAlias
      parameters:
      - description: The ID of the tag alias.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAlias'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Tag Alias
      tags:
      - Tag Aliases
    patch:
      description: You must be Admin+.
      operationId: editTagAlias
      parameters:
      - description: The ID of the tag alias.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editTagAlias_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Tag Alias
      tags:
      - Tag Aliases
  /tag_aliases/{id}/approve.json:
    post:
      description: You must be Admin+.
      operationId: approveTagAlias
      parameters:
      - description: The ID of the tag alias.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Approve Tag Alias
      tags:
      - Tag Aliases
  /tag_alias_requests.json:
    post:
      description: Errors will result in a 406 with no information.
      operationId: createTagAlias
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createTagAlias_request'
      responses:
        "302":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "406":
          description: Failure
      security:
      - basicAuth: []
      summary: Create Tag Alias
      tags:
      - Tag Aliases
  /tag_implications.json:
    get:
      description: "When no results are found, an object with an `tag_implications`\
        \ key is returned."
      operationId: searchTagImplications
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - created_at
          - updated_at
          - name
          - tag_count
          type: string
        style: form
      - explode: true
        in: query
        name: "search[name_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[antecedent_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[consequent_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[status]"
        required: false
        schema:
          $ref: '#/components/schemas/TagRequestStatuses'
        style: form
      - explode: true
        in: query
        name: "search[antecedent_tag_category]"
        required: false
        schema:
          $ref: '#/components/schemas/TagCategories'
        style: form
      - explode: true
        in: query
        name: "search[consequent_tag_category]"
        required: false
        schema:
          $ref: '#/components/schemas/TagCategories'
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[approver_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[approver_name]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchTagImplications_200_response'
          description: Success
      summary: Search Tag Implications
      tags:
      - Tag Implications
  /tag_implications/{id}.json:
    delete:
      description: "You must be the creator of the request (if pending), or Admin+."
      operationId: rejectTagImplication
      parameters:
      - description: The ID of the tag implication.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Reject Tag Implication
      tags:
      - Tag Implications
    get:
      operationId: getTagImplication
      parameters:
      - description: The ID of the tag implication.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagImplication'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Tag Implication
      tags:
      - Tag Implications
    patch:
      description: You must be Admin+.
      operationId: editTagImplication
      parameters:
      - description: The ID of the tag implication.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editTagImplication_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Tag Implication
      tags:
      - Tag Implications
  /tag_implications/{id}/approve.json:
    post:
      description: You must be Admin+.
      operationId: approveTagImplication
      parameters:
      - description: The ID of the tag implication.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Approve Tag Implication
      tags:
      - Tag Implications
  /tag_implication_requests.json:
    post:
      description: Errors will result in a 406 with no information.
      operationId: createTagImplication
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createTagImplication_request'
      responses:
        "302":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "406":
          description: Failure
      security:
      - basicAuth: []
      summary: Create Tag Implication
      tags:
      - Tag Implications
  /related_tag/bulk.json:
    post:
      operationId: listBulkRelatedTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listBulkRelatedTags_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      security:
      - basicAuth: []
      summary: List Bulk Related Tags
      tags:
      - Related Tags
  /takedowns.json:
    get:
      description: "When no results are found, an object with an `takedowns` key is\
        \ returned."
      operationId: searchTakedowns
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          description: Must Admin+ to use.
          enum:
          - id_asc
          - id_desc
          - status
          - post_count
          type: string
        style: form
      - explode: true
        in: query
        name: "search[status]"
        required: false
        schema:
          type: string
        style: form
      - description: Must be Moderator+ to use.
        explode: true
        in: query
        name: "search[source]"
        required: false
        schema:
          type: string
        style: form
      - description: Must be Moderator+ to use.
        explode: true
        in: query
        name: "search[reason]"
        required: false
        schema:
          type: string
        style: form
      - description: Must be Moderator+ to use.
        explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - description: Must be Moderator+ to use.
        explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - description: Must be Moderator+ to use.
        explode: true
        in: query
        name: "search[reason_hidden]"
        required: false
        schema:
          type: boolean
        style: form
      - description: Must be Moderator+ to use.
        explode: true
        in: query
        name: "search[instructions]"
        required: false
        schema:
          type: string
        style: form
      - description: Must be Moderator+ to use.
        explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - description: Must be Moderator+ to use.
        explode: true
        in: query
        name: "search[notes]"
        required: false
        schema:
          type: string
        style: form
      - description: Must be Admin+ to use.
        explode: true
        in: query
        name: "search[email]"
        required: false
        schema:
          type: string
        style: form
      - description: Must be Admin+ to use.
        explode: true
        in: query
        name: "search[vericode]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchTakedowns_200_response'
          description: Success
      summary: Search Takedowns
      tags:
      - Takedowns
    post:
      operationId: createTakedown
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createTakedown_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Takedown'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Takedown
      tags:
      - Takedowns
  /takedowns/{id}.json:
    delete:
      description: You must have the bd staff user flag.
      operationId: deleteTakedown
      parameters:
      - description: The ID of the takedown.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Takedown
      tags:
      - Takedowns
    get:
      operationId: getTakedown
      parameters:
      - description: The ID of the takedown.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Takedown'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Takedown
      tags:
      - Takedowns
    patch:
      description: You must have the bd staff user flag.
      operationId: editTakedown
      parameters:
      - description: The ID of the takedown.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editTakedown_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Takedown
      tags:
      - Takedowns
  /takedowns/{id}/add_by_ids.json:
    post:
      description: You must have the bd staff user flag.
      operationId: addPostsToTakedownByIds
      parameters:
      - description: The ID of the takedown.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/addPostsToTakedownByIds_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addPostsToTakedownByIds_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Add Posts To Takedown By IDs
      tags:
      - Takedowns
  /takedowns/{id}/add_by_tags.json:
    post:
      description: You must have the bd staff user flag.
      operationId: addPostsToTakedownByTags
      parameters:
      - description: The ID of the takedown.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/addPostsToTakedownByTags_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addPostsToTakedownByIds_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Add Posts To Takedown By Tags
      tags:
      - Takedowns
  /takedowns/{id}/count_matching_posts.json:
    post:
      description: You must have the bd staff user flag.
      operationId: countMatchingPosts
      parameters:
      - description: The ID of the takedown.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/addPostsToTakedownByTags_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/countMatchingPosts_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Count Matching Posts
      tags:
      - Takedowns
  /takedowns/{id}/remove_by_ids.json:
    post:
      description: You must have the bd staff user flag.
      operationId: removePostsFromTakedownByIds
      parameters:
      - description: The ID of the takedown.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/addPostsToTakedownByIds_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Remove Posts From Takedown By IDs
      tags:
      - Takedowns
  /tickets.json:
    get:
      description: "You must be Janitor+ to see tickets you did not create. When no\
        \ results are found, an object with an `tickets` key is returned."
      operationId: searchTickets
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - description: You must be Moderator+.
        explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - description: You must be Moderator+ unless providing your own id.
        explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - description: You must be Moderator+.
        explode: true
        in: query
        name: "search[claimant_name]"
        required: false
        schema:
          type: string
        style: form
      - description: You must be Moderator+.
        explode: true
        in: query
        name: "search[claimant_id]"
        required: false
        schema:
          type: number
        style: form
      - description: You must be Moderator+.
        explode: true
        in: query
        name: "search[accused_name]"
        required: false
        schema:
          type: string
        style: form
      - description: You must be Moderator+.
        explode: true
        in: query
        name: "search[accused_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[qtype]"
        required: false
        schema:
          $ref: '#/components/schemas/TicketTypes'
        style: form
      - description: You must be Moderator+.
        explode: true
        in: query
        name: "search[reason]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[status]"
        required: false
        schema:
          enum:
          - pending
          - partial
          - approved
          - pending_claimed
          - pending_unclaimed
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchTickets_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      summary: Search Tickets
      tags:
      - Tickets
  /tickets/{id}.json:
    get:
      description: You must be Janitor+ to see tickets you did not create.
      operationId: getTicket
      parameters:
      - description: The ID of the ticket.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Get Ticket
      tags:
      - Tickets
    patch:
      description: You must be Moderator+.
      operationId: editTicket
      parameters:
      - description: The ID of the ticket.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editTicket_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Edit Ticket
      tags:
      - Tickets
  /tickets/{id}/claim.json:
    post:
      description: You must be Moderator+. Errors are quietly swallowed and shown
        as notices in html.
      operationId: claimTicket
      parameters:
      - description: The ID of the ticket.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Claim Ticket
      tags:
      - Tickets
  /tickets/{id}/unclaim.json:
    post:
      description: You must be Moderator+. Errors are quietly swallowed and shown
        as notices in html.
      operationId: unclaimTicket
      parameters:
      - description: The ID of the ticket.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Unclaim Ticket
      tags:
      - Tickets
  /uploads.json:
    get:
      description: "You must be Janitor+. When no results are found, an object with\
        \ an `uploads` key is returned."
      operationId: searchUploads
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[uploader_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[uploader_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[source]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[source_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[rating]"
        required: false
        schema:
          $ref: '#/components/schemas/Ratings'
        style: form
      - explode: true
        in: query
        name: "search[parent_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[has_post]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[post_tags_match]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[status]"
        required: false
        schema:
          description: |
            Note: The "error" status will be proceeded by an error, ex: "error: RuntimeError - No file or source URL provided"
          enum:
          - completed
          - processing
          - pending
          - error
          type: string
        style: form
      - explode: true
        in: query
        name: "search[backtrace]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[tag_string]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUploads_200_response'
          description: Success
      summary: Search Uploads
      tags:
      - Uploads
    post:
      operationId: uploadPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadPost_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadPost_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "412":
          $ref: '#/components/responses/MessageError'
      security:
      - basicAuth: []
      summary: Upload Post
      tags:
      - Uploads
      - Posts
  /upload_whitelists.json:
    get:
      description: "When no results are found, an object with an `upload_whitelists`\
        \ key is returned."
      operationId: searchUploadWhitelists
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - pattern
          - updated_at
          - created_at
          type: string
        style: form
      - explode: true
        in: query
        name: "search[pattern]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[note]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUploadWhitelists_200_response'
          description: Success
      summary: Search Upload Whitelists
      tags:
      - Upload Whitelists
    post:
      description: You must be Admin+.
      operationId: createUploadWhitelist
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createUploadWhitelist_request'
      responses:
        "200":
          description: Success
      security:
      - basicAuth: []
      summary: Create Upload Whitelist
      tags:
      - Upload Whitelists
  /upload_whitelists/{id}.json:
    delete:
      description: You must be Admin+.
      operationId: deleteUploadWhitelist
      parameters:
      - description: The ID of the upload whitelist.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Upload Whitelist
      tags:
      - Upload Whitelists
    patch:
      operationId: editUploadWhitelist
      parameters:
      - description: The ID of the upload whitelist entry.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editUploadWhitelist_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Upload Whitelist
      tags:
      - Upload Whitelists
  /upload_whitelists/{id}/is_allowed.json:
    get:
      operationId: checkIfUrlIsAllowed
      parameters:
      - description: The ID of the upload whitelist.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      - explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkIfUrlIsAllowed_200_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Check If URL Is Allowed
      tags:
      - Upload Whitelists
  /users.json:
    get:
      operationId: searchUsers
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - name
          - post_upload_count
          - note_count
          - post_update_count
          type: string
        style: form
      - explode: true
        in: query
        name: "search[name_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[about_me]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[avatar_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[level]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[min_level]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[max_level]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[can_upload_free]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[can_approve_posts]"
        required: false
        schema:
          type: boolean
        style: form
      - description: You must be Admin+.
        explode: true
        in: query
        name: "search[email_matches]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/searchUsers_200_response_inner'
                type: array
          description: Success
      summary: Search Users
      tags:
      - Users
  /users/{id}.json:
    get:
      operationId: getUser
      parameters:
      - description: The ID of the user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser_200_response'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get User
      tags:
      - Users
    patch:
      operationId: editCurrentUser
      parameters:
      - description: "The ID of the user. The actual value is ignored, but something\
          \ must be supplied."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editCurrentUser_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Current User
      tags:
      - Users
  /users/upload_limit.json:
    get:
      description: |
        This is a crude but effective way to get the currently authenticated user without scraping HTML.
        Note that this route does not include some properties included in the show action.
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      security:
      - basicAuth: []
      summary: Get Current User
      tags:
      - Users
  /maintenance/user/count_fixes.json:
    post:
      operationId: fixUserCounts
      responses:
        "302":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      security:
      - basicAuth: []
      summary: Fix User Counts
      tags:
      - Users
  /maintenance/user/dmail_filter.json:
    patch:
      operationId: updateUserDmailFilter
      parameters:
      - description: "Due to the odd way this route works, a dmail is REQUIRED to\
          \ edit your dmail filter. You must be the owner of the dmail."
        explode: true
        in: query
        name: dmail_id
        required: true
        schema:
          type: number
        style: form
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/updateUserDmailFilter_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
      security:
      - basicAuth: []
      summary: Update User Dmail Filter
      tags:
      - DMails
  /user_feedbacks.json:
    get:
      description: "When no results are found, an object with an `user_feedbacks`\
        \ key is returned."
      operationId: searchUserFeedbacks
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - description: You must be Moderator+.
        explode: true
        in: query
        name: "search[deleted]"
        required: false
        schema:
          enum:
          - included
          - excluded
          - only
          type: string
        style: form
      - explode: true
        in: query
        name: "search[body_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[user_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[user_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[category]"
        required: false
        schema:
          $ref: '#/components/schemas/FeedbackCategories'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUserFeedbacks_200_response'
          description: Success
      summary: Search User Feedbacks
      tags:
      - User Feedbacks
    post:
      description: You must be Moderator+.
      operationId: createUserFeedback
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createUserFeedback_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeedback'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create User Feedback
      tags:
      - User Feedbacks
  /user_feedbacks/{id}.json:
    delete:
      description: "You must be Admin+, or the creator and Moderator+."
      operationId: destroyUserFeedback
      parameters:
      - description: The ID of the feedback.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Destroy User Feedback
      tags:
      - User Feedbacks
    get:
      description: You must be Moderator+ if the feedback is deleted.
      operationId: getUserFeedback
      parameters:
      - description: The ID of the feedback.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeedback'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get User Feedback
      tags:
      - User Feedbacks
    patch:
      description: You must be Moderator+.
      operationId: editUserFeedback
      parameters:
      - description: The ID of the feedback.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editUserFeedback_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit User Feedback
      tags:
      - User Feedbacks
  /user_feedbacks/{id}/delete.json:
    put:
      description: You must be Moderator+.
      operationId: deleteUserFeedback
      parameters:
      - description: The ID of the feedback.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete User Feedback
      tags:
      - User Feedbacks
  /user_feedbacks/{id}/undelete.json:
    put:
      description: You must be Moderator+.
      operationId: undeleteUserFeedback
      parameters:
      - description: The ID of the feedback.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Undelete User Feedback
      tags:
      - User Feedbacks
  /user_name_change_requests.json:
    get:
      description: "You must be Moderator+. When no results are found, an object with\
        \ an `user_name_change_requests` key is returned."
      operationId: searchUserNameChangeRequests
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[current_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[current_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[original_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[desired_name]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUserNameChangeRequests_200_response'
          description: Success
      security:
      - basicAuth: []
      summary: Search User Name Change Requests
      tags:
      - User Name Change Requests
    post:
      description: You must be Moderator+.
      operationId: createUserNameChangeRequest
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createUserNameChangeRequest_request'
      responses:
        "302":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create User Name Change Request
      tags:
      - User Name Change Requests
  /user_name_change_requests/{id}.json:
    get:
      description: You must be the creator of the request or Moderator+.
      operationId: getUserNameChangeRequest
      parameters:
      - description: The ID of the name change request.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNameChangeRequest'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Get User Name Change Request
      tags:
      - User Name Change Requests
  /wiki_pages.json:
    get:
      operationId: searchWikiPages
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - title
          - post_count
          type: string
        style: form
      - explode: true
        in: query
        name: "search[title]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[title_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[body_matches]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[other_names_match]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[parent]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[other_names_present]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[is_locked]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[is_deleted]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WikiPage'
                type: array
          description: Success
      summary: Search Wiki Pages
      tags:
      - Wiki Pages
    post:
      operationId: createWikiPage
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createWikiPage_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Wiki Page
      tags:
      - Wiki Pages
  /wiki_pages/{id}.json:
    delete:
      description: You must be Admin+
      operationId: deleteWikiPage
      parameters:
      - description: The ID of the wiki page.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Delete Wiki Page
      tags:
      - Wiki Pages
    get:
      operationId: getWikiPage
      parameters:
      - description: The ID or name of the wiki page.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPage'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Wiki Page
      tags:
      - Wiki Pages
    patch:
      description: You must be Janitor+ if the wiki page is locked.
      operationId: editWikiPage
      parameters:
      - description: The ID of the wiki page.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/editWikiPage_request'
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Edit Wiki Page
      tags:
      - Wiki Pages
  /wiki_page/{id}/revert.json:
    put:
      operationId: revertWikiPage
      parameters:
      - description: The ID of the wiki page.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      - description: The version ID to revert to.
        explode: true
        in: query
        name: version_id
        required: true
        schema:
          type: number
        style: form
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Revert Wiki Page
      tags:
      - Wiki Pages
  /wiki_page_versions.json:
    get:
      description: "When no results are found, an object with an `wiki_page_versions`\
        \ key is returned."
      operationId: searchWikiPageVersions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/ip_addr'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[updater_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[updater_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[wiki_page_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[title]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[body]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[is_locked]"
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: "search[is_deleted]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchWikiPageVersions_200_response'
          description: Success
      summary: Search Wiki Page Versions
      tags:
      - Wiki Page Versions
  /wiki_page_versions/{id}.json:
    get:
      operationId: getWikiPageVersion
      parameters:
      - description: The ID of the wiki page version.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiPageVersion'
          description: Success
        "404":
          $ref: '#/components/responses/NotFound'
      summary: Get Wiki Page Version
      tags:
      - Wiki Page Versions
  /admin/users/alt_list.json:
    get:
      description: You must be Admin+.
      operationId: getAltList
      parameters:
      - description: The page number of results to get. Between 1 and 9999.
        explode: true
        in: query
        name: page
        required: false
        schema:
          maximum: 9999
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/getAltList_200_response_inner'
                type: array
          description: Success
      security:
      - basicAuth: []
      summary: Get Alt List
      tags:
      - Admin Users
  /admins/users/{id}.json:
    patch:
      description: "You must be Admin+. If editing an Admin+, you must be Owner+."
      operationId: adminEditUser
      parameters:
      - description: The ID of the user.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/adminEditUser_request'
      responses:
        "204":
          description: Success
        "400":
          $ref: '#/components/responses/MessageError'
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Admin Edit User
      tags:
      - Admin Users
  /moderator/post/posts/{id}/delete.json:
    post:
      description: You must have the "Approve Posts" permission. `commit=Delete` must
        be set.
      operationId: deletePost
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/deletePost_request'
      responses:
        "302":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Delete Post
      tags:
      - Posts
  /moderator/post/posts/{id}/undelete.json:
    post:
      description: You must have the "Approve Posts" permission.
      operationId: undeletePost
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Undelete Post
      tags:
      - Posts
  /moderator/post/posts/{id}/regenerate_thumbnails.json:
    post:
      description: You must be Janitor+.
      operationId: regeneratePostThumbnails
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Regenerate Post Thumbnails
      tags:
      - Posts
  /moderator/post/posts/{id}/regenerate_videos.json:
    post:
      description: You must be Janitor+.
      operationId: regeneratePostVideos
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Regenerate Post Videos
      tags:
      - Posts
  /moderator/post/posts/{id}/expunge.json:
    post:
      description: You must have the "Approve Posts" permission and be Admin+.
      operationId: expungePost
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rejectPostReplacement_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFavorite_201_response'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Expunge Post
      tags:
      - Posts
  /moderator/post/posts/{id}/move_favorites.json:
    post:
      description: You must have the "Approve Posts" permission. `commit=Submit``
        must be set.
      operationId: movePostFavorites
      parameters:
      - description: The ID of the post.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/movePostFavorites_request'
      responses:
        "302":
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Move Post Favorites
      tags:
      - Posts
  /moderator/post/approval.json:
    delete:
      description: You must have the "Approve Posts" permission. The response does
        not differ for success or failure.
      operationId: unapprovePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/approvePost_request'
      responses:
        "204":
          description: Success/Failure
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Unapprove Post
      tags:
      - Posts
      - Post Approvals
    post:
      description: You must have the "Approve Posts" permission.
      operationId: approvePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/approvePost_request'
      responses:
        "201":
          description: Success
        "204":
          description: Failure
        "403":
          $ref: '#/components/responses/AccessDenied'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - basicAuth: []
      summary: Approve Post
      tags:
      - Posts
      - Post Approvals
  /moderator/post/disapprovals.json:
    get:
      description: "You must have the \"Approve Posts\" permission When no results\
        \ are found, an object with a `post_disapprovals` key is returned."
      operationId: searchPostDisapprovals
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/id'
      - explode: true
        in: query
        name: "search[order]"
        required: false
        schema:
          enum:
          - id_asc
          - id_desc
          - post_id
          - post_id_desc
          type: string
        style: form
      - explode: true
        in: query
        name: "search[creator_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[creator_name]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_id]"
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: "search[message]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[post_tags_match]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[reason]"
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: "search[has_message]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchPostDisapprovals_200_response'
          description: Success
      security:
      - basicAuth: []
      summary: Search Post Disapprovals
      tags:
      - Post Disapprovals
    post:
      description: You must have the "Approve Posts" permission.
      operationId: createPostDisapproval
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createPostDisapproval_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDisapproval'
          description: Success
        "403":
          $ref: '#/components/responses/AccessDenied'
        "422":
          $ref: '#/components/responses/ExpectedError'
      security:
      - basicAuth: []
      summary: Create Post Disapproval
      tags:
      - Post Disapprovals
components:
  parameters:
    id:
      description: Search for a specific id.
      explode: true
      in: query
      name: "search[id]"
      required: false
      schema:
        type: number
      style: form
    limit:
      description: The maximum number of results to return. Between 0 and 320.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        maximum: 500
        minimum: 0
        type: number
      style: form
    page:
      description: The page number of results to get. Between 1 and 750.
      explode: true
      in: query
      name: page
      required: false
      schema:
        maximum: 750
        minimum: 1
        type: number
      style: form
    ip_addr:
      description: "Must be Admin+ to use. See [postgres' documentation](https://www.postgresql.org/docs/9.3/functions-net.html)\
        \ for information on how this is parsed. Specifically, \"is contained within\
        \ or equals\" (`<<=`)."
      explode: true
      in: query
      name: "search[ip_addr]"
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    warning:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/markBlip_request'
  responses:
    NotFound:
      content:
        application/json:
          schema:
            properties:
              success:
                enum:
                - false
                type: boolean
              reason:
                enum:
                - not found
                type: string
            required:
            - reason
            - success
      description: Not Found
    AccessDenied:
      content:
        application/json:
          schema:
            properties:
              success:
                enum:
                - false
                type: boolean
              reason:
                enum:
                - Access Denied
                type: string
            required:
            - reason
            - success
      description: Access Denied
    ExpectedError:
      content:
        application/json:
          schema:
            properties:
              errors:
                type: object
            required:
            - errors
      description: Invalid Input Data
    MessageError:
      content:
        application/json:
          schema:
            properties:
              success:
                enum:
                - false
                type: boolean
              message:
                type: string
              code:
                nullable: true
                type: string
            required:
            - message
            - success
      description: Error
  schemas:
    ModactionActions:
      enum:
      - artist_page_rename
      - artist_page_lock
      - artist_page_unlock
      - artist_user_linked
      - artist_user_unlinked
      - avoid_posting_create
      - avoid_posting_update
      - avoid_posting_delete
      - avoid_posting_undelete
      - avoid_posting_destroy
      - blip_delete
      - blip_hide
      - blip_unhide
      - blip_update
      - comment_delete
      - comment_hide
      - comment_unhide
      - comment_update
      - forum_category_create
      - forum_category_delete
      - forum_category_update
      - forum_post_delete
      - forum_post_hide
      - forum_post_unhide
      - forum_post_update
      - forum_topic_delete
      - forum_topic_hide
      - forum_topic_unhide
      - forum_topic_lock
      - forum_topic_unlock
      - forum_topic_stick
      - forum_topic_unstick
      - forum_topic_update
      - help_create
      - help_delete
      - help_update
      - ip_ban_create
      - ip_ban_delete
      - mascot_create
      - mascot_update
      - mascot_delete
      - pool_delete
      - report_reason_create
      - report_reason_delete
      - report_reason_update
      - set_update
      - set_delete
      - set_change_visibility
      - tag_alias_create
      - tag_alias_update
      - tag_implication_create
      - tag_implication_update
      - ticket_claim
      - ticket_unclaim
      - ticket_update
      - upload_whitelist_create
      - upload_whitelist_update
      - upload_whitelist_delete
      - user_blacklist_changed
      - user_text_change
      - user_upload_limit_change
      - user_flags_change
      - user_level_change
      - user_name_change
      - user_delete
      - user_ban
      - user_ban_update
      - user_unban
      - user_feedback_create
      - user_feedback_update
      - user_feedback_delete
      - user_feedback_undelete
      - user_feedback_destroy
      - wiki_page_rename
      - wiki_page_delete
      - wiki_page_lock
      - wiki_page_unlock
      - mass_update
      - nuke_tag
      - takedown_delete
      - takedown_process
      - created_positive_record
      - created_neutral_record
      - created_negative_record
      - created_flag_reason
      - edited_flag_reason
      - deleted_flag_reason
      - post_move_favorites
      - post_delete
      - post_undelete
      - post_destroy
      - post_rating_lock
      - post_unapprove
      - post_replacement_accept
      - post_replacement_reject
      - post_replacement_delete
      type: string
    PostEventActions:
      enum:
      - deleted
      - undeleted
      - approved
      - unapproved
      - flag_created
      - flag_removed
      - favorites_moved
      - favorites_received
      - rating_locked
      - rating_unlocked
      - status_locked
      - status_unlocked
      - note_locked
      - note_unlocked
      - comment_locked
      - comment_unlocked
      - replacement_accepted
      - replacement_rejected
      - replacement_promoted
      - replacement_deleted
      - expunged
      - changed_bg_color
      type: string
    Ratings:
      enum:
      - s
      - q
      - e
      type: string
    TagCategories:
      enum:
      - 0
      - 1
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      type: number
    FeedbackCategories:
      enum:
      - negative
      - neutral
      - positive
      type: string
    TagRequestStatuses:
      enum:
      - active
      - deleted
      - processing
      - queued
      - retired
      - error
      - pending
      type: string
    WarningTypes:
      enum:
      - warning
      - record
      - ban
      type: string
      types: string
    PoolCategories:
      enum:
      - collection
      - series
      type: string
    TicketTypes:
      enum:
      - blip
      - comment
      - dmail
      - forum
      - pool
      - post
      - set
      - user
      - wiki
      type: string
    TicketStatuses:
      enum:
      - pending
      - partial
      - approved
      type: string
    Artist:
      example:
        is_locked: true
        is_active: true
        linked_user_id: 6.027456183070403
        notes: notes
        updated_at: 2000-01-23T04:56:07.000+00:00
        group_name: group_name
        name: name
        creator_id: 1.4658129805029452
        created_at: 2000-01-23T04:56:07.000+00:00
        other_names:
        - other_names
        - other_names
        id: 0.8008281904610115
      properties:
        id:
          type: number
        name:
          type: string
        updated_at:
          format: date-time
          type: string
        is_active:
          type: boolean
        other_names:
          items:
            type: string
          type: array
        group_name:
          type: string
        linked_user_id:
          nullable: true
          type: number
        created_at:
          format: date-time
          type: string
        creator_id:
          type: number
        is_locked:
          type: boolean
        notes:
          nullable: true
          type: string
      required:
      - created_at
      - creator_id
      - group_name
      - id
      - is_active
      - is_locked
      - linked_user_id
      - name
      - notes
      - other_names
      - updated_at
    ArtistURL:
      example:
        normalized_url: https://openapi-generator.tech
        is_active: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 5.962133916683182
        artist_id: 5.637376656633329
        url: https://openapi-generator.tech
      properties:
        id:
          type: number
        artist_id:
          type: number
        url:
          format: uri
          type: string
        normalized_url:
          format: uri
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        is_active:
          type: boolean
      required:
      - artist_id
      - created_at
      - id
      - is_active
      - normalized_url
      - updated_at
      - url
    ArtistVersion:
      example:
        notes_changed: true
        urls:
        - https://openapi-generator.tech
        - https://openapi-generator.tech
        is_active: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        updater_id: 1.4658129805029452
        created_at: 2000-01-23T04:56:07.000+00:00
        other_names:
        - other_names
        - other_names
        id: 0.8008281904610115
        artist_id: 6.027456183070403
      properties:
        id:
          type: number
        artist_id:
          type: number
        name:
          type: string
        updater_id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        is_active:
          type: boolean
        other_names:
          items:
            type: string
          type: array
        notes_changed:
          type: boolean
        urls:
          items:
            format: uri
            type: string
          type: array
      required:
      - artist_id
      - created_at
      - id
      - is_active
      - name
      - notes_changed
      - other_names
      - updated_at
      - updater_id
      - urls
    AvoidPosting:
      example:
        staff_notes: staff_notes
        is_active: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 6.027456183070403
        updater_id: 1.4658129805029452
        created_at: 2000-01-23T04:56:07.000+00:00
        details: details
        id: 0.8008281904610115
        artist_id: 5.962133916683182
      properties:
        id:
          type: number
        creator_id:
          type: number
        updater_id:
          type: number
        artist_id:
          type: number
        staff_notes:
          description: Only visible to Janitor+
          type: string
        details:
          type: string
        is_active:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - artist_id
      - created_at
      - creator_id
      - details
      - id
      - is_active
      - updated_at
      - updater_id
    AvoidPostingVersion:
      example:
        staff_notes: staff_notes
        is_active: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        avoid_posting_id: 1.4658129805029452
        updater_id: 6.027456183070403
        details: details
        id: 0.8008281904610115
      properties:
        id:
          type: number
        updater_id:
          type: number
        avoid_posting_id:
          type: number
        details:
          type: string
        staff_notes:
          description: Only visible to Janitor+
          type: string
        is_active:
          type: boolean
        updated_at:
          format: date-time
          type: string
      required:
      - avoid_posting_id
      - details
      - id
      - is_active
      - updated_at
      - updater_id
    Ban:
      example:
        reason: reason
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 6.027456183070403
        banner_id: 1.4658129805029452
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
      properties:
        id:
          type: number
        user_id:
          type: number
        reason:
          type: string
        expires_at:
          format: date-time
          nullable: true
          type: string
        banner_id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - banner_id
      - created_at
      - expires_at
      - id
      - reason
      - updated_at
      - user_id
    Blip:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        response_to: 1.4658129805029452
        creator_id: 6.027456183070403
        is_hidden: true
        warning_user_id: 5.962133916683182
        updater_id: 5.637376656633329
        created_at: 2000-01-23T04:56:07.000+00:00
        warning_type: warning
        creator_name: creator_name
        id: 0.8008281904610115
        body: body
      properties:
        id:
          type: number
        creator_id:
          type: number
        body:
          type: string
        response_to:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        is_hidden:
          type: boolean
        warning_type:
          $ref: '#/components/schemas/WarningTypes'
        warning_user_id:
          type: number
        updater_id:
          type: number
        creator_name:
          type: string
      required:
      - body
      - created_at
      - creator_id
      - creator_name
      - id
      - is_hidden
      - response_to
      - updated_at
      - updater_id
      - warning_type
      - warning_user_id
    BulkRelatedTag:
      allOf:
      - $ref: '#/components/schemas/RelatedTag'
      - properties:
          count:
            type: number
        required:
        - count
    BulkUpdateRequest:
      example:
        forum_topic_id: 1.4658129805029452
        updated_at: 2000-01-23T04:56:07.000+00:00
        approver_id: 5.962133916683182
        creator_id: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        forum_post_id: 5.637376656633329
        id: 0.8008281904610115
        title: title
        script: script
        status: approved
      properties:
        id:
          type: number
        creator_id:
          type: number
        forum_topic_id:
          nullable: true
          type: number
        script:
          type: string
        status:
          enum:
          - approved
          - rejected
          - pending
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        approver_id:
          nullable: true
          type: number
        forum_post_id:
          nullable: true
          type: number
        title:
          type: string
      required:
      - approver_id
      - created_at
      - creator_id
      - forum_post_id
      - forum_topic_id
      - id
      - script
      - status
      - title
      - updated_at
    Comment:
      example:
        is_sticky: true
        is_hidden: true
        warning_user_id: 2.3021358869347655
        created_at: 2000-01-23T04:56:07.000+00:00
        warning_type: warning_type
        body: body
        updater_name: updater_name
        score: 5.962133916683182
        post_id: 6.027456183070403
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 1.4658129805029452
        updater_id: 5.637376656633329
        creator_name: creator_name
        id: 0.8008281904610115
        do_not_bump_post: true
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        post_id:
          type: number
        creator_id:
          type: number
        body:
          type: string
        score:
          type: number
        updated_at:
          format: date-time
          type: string
        updater_id:
          type: number
        do_not_bump_post:
          deprecated: true
          type: boolean
        is_hidden:
          type: boolean
        is_sticky:
          type: boolean
        warning_type:
          $ref: '#/components/schemas/WarningTypes'
        warning_user_id:
          nullable: true
          type: number
        creator_name:
          type: string
        updater_name:
          type: string
      required:
      - body
      - created_at
      - creator_id
      - creator_name
      - do_not_bump_post
      - id
      - is_hidden
      - is_sticky
      - post_id
      - score
      - updated_at
      - updater_id
      - updater_name
      - warning_type
      - warning_user_id
    CurrentUser:
      allOf:
      - $ref: '#/components/schemas/User'
      - properties:
          blacklist_users:
            type: boolean
          description_collapsed_initially:
            type: boolean
          hide_comments:
            type: boolean
          show_hidden_comments:
            type: boolean
          show_post_statistics:
            type: boolean
          receive_email_notifications:
            type: boolean
          enable_keyboard_navigation:
            type: boolean
          enable_privacy_mode:
            type: boolean
          style_usernames:
            type: boolean
          enable_auto_complete:
            type: boolean
          can_approve_posts:
            type: boolean
          disabled_cropped_thumbnails:
            type: boolean
          enable_safe_mode:
            type: boolean
          disable_responsive_mode:
            type: boolean
          no_flagging:
            type: boolean
          disable_user_dmails:
            type: boolean
          enable_compact_uploader:
            type: boolean
          replacements_beta:
            type: boolean
          updated_at:
            format: date-time
            type: string
          email:
            type: string
          last_logged_in_at:
            format: date-time
            type: string
          last_forum_read_at:
            format: date-time
            type: string
          recent_tags:
            type: string
          comment_threshold:
            type: number
          default_image_sizedefault_image_size:
            enum:
            - large
            - fit
            - fitv
            - original
            type: string
          favorite_tags:
            type: string
          blacklisted_tags:
            type: string
          time_zone:
            type: string
          per_page:
            type: number
          custom_style:
            type: string
          favorite_count:
            type: number
          api_regen_multiplier:
            type: number
          api_burst_limit:
            type: number
          remaining_api_limit:
            type: number
          statement_timeout:
            type: number
          favorite_limit:
            type: number
          tag_query_limit:
            type: number
          has_mail:
            type: boolean
        required:
        - api_burst_limit
        - api_regen_multiplier
        - blacklist_users
        - blacklisted_tags
        - comment_threshold
        - custom_style
        - description_collapsed_initially
        - disable_responsive_mode
        - disable_user_dmails
        - disabled_cropped_thumbnails
        - email
        - enable_auto_complete
        - enable_compact_uploader
        - enable_keyboard_navigation
        - enable_privacy_mode
        - enable_safe_mode
        - favorite_count
        - favorite_limit
        - favorite_tags
        - has_mail
        - hide_comments
        - last_forum_read_at
        - last_logged_in_at
        - no_flagging
        - per_page
        - receive_email_notifications
        - recent_tags
        - remaining_api_limit
        - replacements_beta
        - show_hidden_comments
        - show_post_statistics
        - statement_timeout
        - style_usernames
        - tag_query_limit
        - time_zone
        - updated_at
      example:
        note_update_count: 2.3021358869347655
        remaining_api_limit: 1.2315135367772556
        description_collapsed_initially: true
        show_hidden_comments: true
        last_forum_read_at: 2000-01-23T04:56:07.000+00:00
        recent_tags: recent_tags
        api_burst_limit: 7.386281948385884
        enable_compact_uploader: true
        id: 0.8008281904610115
        replacements_beta: true
        comment_threshold: 9.301444243932576
        per_page: 3.616076749251911
        level: 6.027456183070403
        enable_keyboard_navigation: true
        favorite_limit: 1.4894159098541704
        tag_query_limit: 6.84685269835264
        blacklist_users: true
        avatar_id: 7.061401241503109
        hide_comments: true
        enable_auto_complete: true
        last_logged_in_at: 2000-01-23T04:56:07.000+00:00
        name: name
        post_upload_count: 5.962133916683182
        style_usernames: true
        default_image_sizedefault_image_size: large
        is_banned: true
        can_approve_posts: true
        api_regen_multiplier: 4.145608029883936
        created_at: 2000-01-23T04:56:07.000+00:00
        base_upload_limit: 1.4658129805029452
        updated_at: 2000-01-23T04:56:07.000+00:00
        blacklisted_tags: blacklisted_tags
        disable_responsive_mode: true
        favorite_count: 2.027123023002322
        has_mail: true
        email: email
        enable_safe_mode: true
        show_post_statistics: true
        favorite_tags: favorite_tags
        disabled_cropped_thumbnails: true
        disable_user_dmails: true
        post_update_count: 5.637376656633329
        level_string: level_string
        receive_email_notifications: true
        custom_style: custom_style
        can_upload_free: true
        time_zone: time_zone
        statement_timeout: 1.0246457001441578
        no_flagging: true
        enable_privacy_mode: true
    DMail:
      example:
        is_read: true
        from_id: 1.4658129805029452
        is_deleted: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        owner_id: 6.027456183070403
        to_id: 5.962133916683182
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        title: title
        body: body
      properties:
        id:
          type: number
        owner_id:
          type: number
        from_id:
          type: number
        to_id:
          type: number
        title:
          type: string
        body:
          type: string
        is_read:
          type: boolean
        is_deleted:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - body
      - created_at
      - from_id
      - id
      - is_deleted
      - is_read
      - owner_id
      - title
      - to_id
      - updated_at
    DeferredPost:
      properties:
        id:
          type: number
        flags:
          type: string
        tags:
          type: string
        rating:
          $ref: '#/components/schemas/Ratings'
        file_ext:
          type: string
        width:
          type: number
        height:
          type: number
        size:
          type: number
        created_at:
          format: date-time
          type: string
        uploader:
          type: string
        uploader_id:
          type: number
        score:
          type: number
        fav_count:
          type: number
        is_favorited:
          type: boolean
        pools:
          items:
            type: number
          type: array
        md5:
          type: string
        preview_url:
          nullable: true
          type: string
        large_url:
          nullable: true
          type: string
        file_url:
          nullable: true
          type: string
        preview_width:
          type: number
        preview_height:
          type: number
      required:
      - created_at
      - fav_count
      - file_ext
      - file_url
      - flags
      - height
      - id
      - is_favorited
      - large_url
      - md5
      - pools
      - preview_height
      - preview_url
      - preview_width
      - rating
      - score
      - size
      - tags
      - uploader
      - uploader_id
      - width
    DTextResponse:
      example:
        html: html
        posts: "{}"
      properties:
        html:
          type: string
        posts:
          type: object
      required:
      - html
      - posts
    EmailBlacklist:
      example:
        reason: reason
        updated_at: updated_at
        domain: domain
        creator_id: creator_id
        created_at: created_at
        id: 0.8008281904610115
      properties:
        id:
          type: number
        created_at:
          type: string
        updated_at:
          type: string
        domain:
          type: string
        creator_id:
          type: string
        reason:
          type: string
      required:
      - created_at
      - creator_id
      - domain
      - id
      - reason
      - updated_at
    ForumPost:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 1.4658129805029452
        updater_id: 5.962133916683182
        is_hidden: true
        warning_user_id: 5.637376656633329
        topic: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        warning_type: warning_type
        id: 0.8008281904610115
        body: body
      properties:
        id:
          type: number
        topic:
          type: number
        creator_id:
          type: number
        updater_id:
          type: number
        body:
          type: string
        is_hidden:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        warning_type:
          $ref: '#/components/schemas/WarningTypes'
        warning_user_id:
          nullable: true
          type: number
      required:
      - body
      - created_at
      - creator_id
      - id
      - is_hidden
      - updated_at
      - updater_id
      - warning_type
      - warning_user_id
    ForumPostVote:
      example:
        score: 5.962133916683182
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 1.4658129805029452
        forum_post_id: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        creator_name: creator_name
        id: 0.8008281904610115
      properties:
        id:
          type: number
        forum_post_id:
          type: number
        creator_id:
          type: number
        score:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        creator_name:
          type: string
      required:
      - created_at
      - creator_id
      - creator_name
      - forum_post_id
      - id
      - score
      - updated_at
    ForumTopic:
      example:
        response_count: 5.962133916683182
        is_locked: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        category_id: 5.637376656633329
        is_sticky: true
        creator_id: 6.027456183070403
        updater_id: 1.4658129805029452
        is_hidden: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        title: title
      properties:
        id:
          type: number
        creator_id:
          type: number
        updater_id:
          type: number
        title:
          type: string
        response_count:
          type: number
        is_sticky:
          type: boolean
        is_locked:
          type: boolean
        is_hidden:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        category_id:
          type: number
      required:
      - category_id
      - created_at
      - creator_id
      - id
      - is_hidden
      - is_locked
      - is_sticky
      - response_count
      - title
      - updated_at
      - updater_id
    FullCurrentUser:
      allOf:
      - $ref: '#/components/schemas/CurrentUser'
      - $ref: '#/components/schemas/FullUser'
    FullUser:
      allOf:
      - $ref: '#/components/schemas/User'
      - properties:
          wiki_page_version_count:
            type: number
          artist_version_count:
            type: number
          pool_version_count:
            type: number
          forum_post_count:
            type: number
          comment_count:
            type: number
          flag_count:
            type: number
          favorite_count:
            type: number
          positive_feedback_count:
            type: number
          neutral_feedback_count:
            type: number
          negative_feedback_count:
            type: number
          upload_limit:
            type: number
          profile_about:
            type: string
          profile_artinfo:
            type: string
        required:
        - artist_version_count
        - comment_count
        - favorite_count
        - flag_count
        - forum_post_count
        - negative_feedback_count
        - neutral_feedback_count
        - pool_version_count
        - positive_feedback_count
        - profile_about
        - profile_artinfo
        - upload_limit
        - wiki_page_version_count
    Help:
      example:
        related: related
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        title: title
        wiki_page: wiki_page
      properties:
        id:
          type: number
        name:
          type: string
        title:
          type: string
        wiki_page:
          type: string
        related:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - id
      - name
      - related
      - title
      - updated_at
      - wiki_page
    IPBan:
      description: "Due to a global filter, the ip_addr is not present no matter your\
        \ user level."
      example:
        reason: reason
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
      properties:
        id:
          type: number
        creator_id:
          type: number
        reason:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - creator_id
      - id
      - reason
      - updated_at
    IQDBPost:
      example:
        comment_count: 6.683562403749608
        file_url: file_url
        is_favorited: true
        rating: s
        last_comment_bumped_at: 2000-01-23T04:56:07.000+00:00
        last_commented_at: 2000-01-23T04:56:07.000+00:00
        source: source
        score: 2.3021358869347655
        has_large: true
        fav_count: 3.616076749251911
        tag_count: 2.027123023002322
        image_height: 7.457744773683766
        bit_flags: 4.965218492984954
        tag_count_character: 1.2315135367772556
        tag_count_invalid: 9.369310271410669
        id: 1.4658129805029452
        tag_count_artist: 7.386281948385884
        down_score: 5.637376656633329
        change_seq: 8.762042012749001
        has_children: true
        tag_count_copyright: 1.0246457001441578
        approver_id: 9.301444243932576
        image_width: 6.84685269835264
        up_score: 5.962133916683182
        last_noted_at: 2000-01-23T04:56:07.000+00:00
        tag_count_lore: 9.018348186070783
        is_rating_locked: true
        has_active_children: true
        parent_id: 1.1730742509559433
        tag_count_general: 4.145608029883936
        is_comment_disabled: true
        is_comment_locked: true
        generated_samples:
        - 720p
        - 720p
        tag_count_meta: 5.025004791520295
        is_flagged: true
        is_pending: true
        uploader_id: 7.061401241503109
        tag_string: tag_string
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        pool_ids:
        - 6.438423552598547
        - 6.438423552598547
        duration: duration
        is_status_locked: true
        children_ids: children_ids
        large_file_url: large_file_url
        is_deleted: true
        tag_count_species: 9.965781217890562
        updated_at: 2000-01-23T04:56:07.000+00:00
        is_note_locked: true
        file_size: 1.4894159098541704
        bg_color: bg_color
        has_visible_children: true
        file_ext: file_ext
        preview_file_url: preview_file_url
        locked_tags: locked_tags
        md5: md5
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        up_score:
          type: number
        down_score:
          type: number
        score:
          type: number
        source:
          type: string
        md5:
          type: string
        rating:
          $ref: '#/components/schemas/Ratings'
        is_note_locked:
          type: boolean
        is_rating_locked:
          type: boolean
        is_status_locked:
          type: boolean
        is_pending:
          type: boolean
        is_flagged:
          type: boolean
        is_deleted:
          type: boolean
        uploader_id:
          type: number
        approver_id:
          type: number
        last_noted_at:
          format: date-time
          nullable: true
          type: string
        last_comment_bumped_at:
          format: date-time
          nullable: true
          type: string
        fav_count:
          type: number
        tag_string:
          type: string
        tag_count:
          type: number
        tag_count_general:
          type: number
        tag_count_artist:
          type: number
        tag_count_character:
          type: number
        tag_count_copyright:
          type: number
        file_ext:
          type: string
        file_size:
          type: number
        image_width:
          type: number
        image_height:
          type: number
        parent_id:
          nullable: true
          type: number
        has_children:
          type: boolean
        last_commented_at:
          format: date-time
          nullable: true
          type: string
        has_active_children:
          type: boolean
        bit_flags:
          type: number
        tag_count_meta:
          type: number
        locked_tags:
          nullable: true
          type: string
        tag_count_species:
          type: number
        tag_count_invalid:
          type: number
        description:
          type: string
        comment_count:
          type: number
        change_seq:
          type: number
        tag_count_lore:
          type: number
        bg_color:
          nullable: true
          type: string
        generated_samples:
          items:
            enum:
            - 720p
            - 480p
            - original
            type: string
          type: array
        duration:
          nullable: true
          type: string
        is_comment_disabled:
          type: boolean
        is_comment_locked:
          type: boolean
        has_large:
          type: boolean
        has_visible_children:
          type: boolean
        children_ids:
          nullable: true
          type: string
        pool_ids:
          items:
            type: number
          type: array
        is_favorited:
          type: boolean
        file_url:
          type: string
        large_file_url:
          type: string
        preview_file_url:
          type: string
      required:
      - approver_id
      - bg_color
      - bit_flags
      - change_seq
      - children_ids
      - comment_count
      - created_at
      - description
      - down_score
      - duration
      - fav_count
      - file_ext
      - file_size
      - generated_samples
      - has_active_children
      - has_children
      - has_large
      - has_visible_children
      - id
      - image_height
      - image_width
      - is_comment_disabled
      - is_comment_locked
      - is_deleted
      - is_favorited
      - is_flagged
      - is_note_locked
      - is_pending
      - is_rating_locked
      - is_status_locked
      - last_comment_bumped_at
      - last_commented_at
      - last_noted_at
      - locked_tags
      - md5
      - parent_id
      - pool_ids
      - rating
      - score
      - source
      - tag_count
      - tag_count_artist
      - tag_count_character
      - tag_count_copyright
      - tag_count_general
      - tag_count_invalid
      - tag_count_lore
      - tag_count_meta
      - tag_count_species
      - tag_string
      - up_score
      - updated_at
      - uploader_id
    IQDBResponse:
      example:
        score: 6.027456183070403
        post_id: 0.8008281904610115
        post:
          posts:
            comment_count: 6.683562403749608
            file_url: file_url
            is_favorited: true
            rating: s
            last_comment_bumped_at: 2000-01-23T04:56:07.000+00:00
            last_commented_at: 2000-01-23T04:56:07.000+00:00
            source: source
            score: 2.3021358869347655
            has_large: true
            fav_count: 3.616076749251911
            tag_count: 2.027123023002322
            image_height: 7.457744773683766
            bit_flags: 4.965218492984954
            tag_count_character: 1.2315135367772556
            tag_count_invalid: 9.369310271410669
            id: 1.4658129805029452
            tag_count_artist: 7.386281948385884
            down_score: 5.637376656633329
            change_seq: 8.762042012749001
            has_children: true
            tag_count_copyright: 1.0246457001441578
            approver_id: 9.301444243932576
            image_width: 6.84685269835264
            up_score: 5.962133916683182
            last_noted_at: 2000-01-23T04:56:07.000+00:00
            tag_count_lore: 9.018348186070783
            is_rating_locked: true
            has_active_children: true
            parent_id: 1.1730742509559433
            tag_count_general: 4.145608029883936
            is_comment_disabled: true
            is_comment_locked: true
            generated_samples:
            - 720p
            - 720p
            tag_count_meta: 5.025004791520295
            is_flagged: true
            is_pending: true
            uploader_id: 7.061401241503109
            tag_string: tag_string
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            pool_ids:
            - 6.438423552598547
            - 6.438423552598547
            duration: duration
            is_status_locked: true
            children_ids: children_ids
            large_file_url: large_file_url
            is_deleted: true
            tag_count_species: 9.965781217890562
            updated_at: 2000-01-23T04:56:07.000+00:00
            is_note_locked: true
            file_size: 1.4894159098541704
            bg_color: bg_color
            has_visible_children: true
            file_ext: file_ext
            preview_file_url: preview_file_url
            locked_tags: locked_tags
            md5: md5
        hash: hash
      properties:
        hash:
          type: string
        post_id:
          type: number
        score:
          type: number
        post:
          $ref: '#/components/schemas/IQDBResponse_post'
      required:
      - hash
      - post
      - post_id
      - score
    Mascot:
      example:
        available_on:
        - available_on
        - available_on
        artist_name: artist_name
        artist_url: https://openapi-generator.tech
        active: true
        created_at: 2000-01-23T04:56:07.000+00:00
        display_name: display_name
        file_ext: file_ext
        background_color: background_color
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 6.027456183070403
        id: 0.8008281904610115
        md5: md5
        url_path: https://openapi-generator.tech
      properties:
        id:
          type: number
        creator_id:
          type: number
        display_name:
          type: string
        md5:
          type: string
        file_ext:
          type: string
        background_color:
          type: string
        artist_url:
          format: uri
          type: string
        artist_name:
          type: string
        active:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        available_on:
          items:
            type: string
          type: array
        url_path:
          format: uri
          type: string
      required:
      - active
      - artist_name
      - artist_url
      - available_on
      - background_color
      - created_at
      - creator_id
      - display_name
      - file_ext
      - id
      - md5
      - updated_at
      - url_path
    ModAction:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        action: artist_page_rename
        id: 0.8008281904610115
      properties:
        id:
          type: number
        creator_id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        action:
          $ref: '#/components/schemas/ModactionActions'
      required:
      - action
      - created_at
      - creator_id
      - id
      - updated_at
    NewsUpdate:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 6.027456183070403
        updater_id: 1.4658129805029452
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        message: message
      properties:
        id:
          type: number
        message:
          type: string
        creator_id:
          type: number
        updater_id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - creator_id
      - id
      - message
      - updated_at
      - updater_id
    Note:
      example:
        is_active: true
        created_at: 2000-01-23T04:56:07.000+00:00
        body: body
        version: 7.061401241503109
        updated_at: 2000-01-23T04:56:07.000+00:00
        post_id: 9.301444243932576
        creator_id: 6.027456183070403
        x: 1.4658129805029452
        width: 5.637376656633329
        "y": 5.962133916683182
        creator_name: creator_name
        id: 0.8008281904610115
        height: 2.3021358869347655
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        creator_id:
          type: number
        x:
          type: number
        "y":
          type: number
        width:
          type: number
        height:
          type: number
        version:
          type: number
        is_active:
          type: boolean
        post_id:
          type: number
        body:
          type: string
        creator_name:
          type: string
      required:
      - body
      - created_at
      - creator_id
      - creator_name
      - height
      - id
      - is_active
      - post_id
      - updated_at
      - version
      - width
      - x
      - "y"
    NoteVersion:
      example:
        note_id: 7.061401241503109
        is_active: true
        created_at: 2000-01-23T04:56:07.000+00:00
        body: body
        version: 2.3021358869347655
        updated_at: 2000-01-23T04:56:07.000+00:00
        post_id: 9.301444243932576
        x: 6.027456183070403
        width: 5.962133916683182
        updater_id: 3.616076749251911
        "y": 1.4658129805029452
        id: 0.8008281904610115
        height: 5.637376656633329
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        x:
          type: number
        "y":
          type: number
        width:
          type: number
        height:
          type: number
        body:
          type: string
        version:
          type: number
        is_active:
          type: boolean
        note_id:
          type: number
        post_id:
          type: number
        updater_id:
          type: number
      required:
      - body
      - created_at
      - height
      - id
      - is_active
      - note_id
      - post_id
      - updated_at
      - updater_id
      - version
      - width
      - x
      - "y"
    Pool:
      example:
        is_active: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        creator_id: 6.027456183070403
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        creator_name: creator_name
        id: 0.8008281904610115
        post_count: 5.962133916683182
        category: collection
        post_ids:
        - 1.4658129805029452
        - 1.4658129805029452
      properties:
        id:
          type: number
        name:
          type: string
        updated_at:
          format: date-time
          type: string
        creator_id:
          type: number
        description:
          type: string
        is_active:
          type: boolean
        category:
          $ref: '#/components/schemas/PoolCategories'
        post_ids:
          items:
            type: number
          type: array
        created_at:
          format: date-time
          type: string
        creator_name:
          type: string
        post_count:
          type: number
      required:
      - category
      - created_at
      - creator_id
      - creator_name
      - description
      - id
      - is_active
      - name
      - post_count
      - post_ids
      - updated_at
    PoolVersion:
      example:
        is_locked: true
        removed_post_ids:
        - 7.061401241503109
        - 7.061401241503109
        is_active: true
        added_post_ids:
        - 2.3021358869347655
        - 2.3021358869347655
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        description_changed: true
        pool_id: 6.027456183070403
        version: 5.637376656633329
        updated_at: 2000-01-23T04:56:07.000+00:00
        updater_id: 5.962133916683182
        name: name
        id: 0.8008281904610115
        name_changed: true
        category: collection
        post_ids:
        - 1.4658129805029452
        - 1.4658129805029452
      properties:
        id:
          type: number
        pool_id:
          type: number
        post_ids:
          items:
            type: number
          type: array
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        updater_id:
          type: number
        name:
          type: string
        name_changed:
          type: boolean
        description:
          type: string
        description_changed:
          type: boolean
        is_active:
          type: boolean
        is_locked:
          type: boolean
        category:
          $ref: '#/components/schemas/PoolCategories'
        version:
          type: number
        added_post_ids:
          items:
            type: number
          type: array
        removed_post_ids:
          items:
            type: number
          type: array
      required:
      - added_post_ids
      - category
      - created_at
      - description
      - description_changed
      - id
      - is_active
      - is_locked
      - name
      - name_changed
      - pool_id
      - post_ids
      - removed_post_ids
      - updated_at
      - updater_id
      - version
    Post:
      example:
        preview:
          width: 5.637376656633329
          url: url
          height: 2.3021358869347655
        comment_count: 9.965781217890562
        change_seq: 1.0246457001441578
        uploader_id: 5.025004791520295
        is_favorited: true
        sources:
        - sources
        - sources
        approver_id: 4.965218492984954
        flags:
          rating_locked: true
          deleted: true
          flagged: true
          pending: true
          status_locked: true
          note_locked: true
        rating: s
        created_at: 2000-01-23T04:56:07.000+00:00
        pools:
        - 6.84685269835264
        - 6.84685269835264
        description: description
        sample:
          width: 9.301444243932576
          has: true
          alternates:
            "720p":
              urls:
              - https://openapi-generator.tech
              - https://openapi-generator.tech
              width: 2.027123023002322
              type: video
              height: 3.616076749251911
            original:
              urls:
              - https://openapi-generator.tech
              - https://openapi-generator.tech
              width: 2.027123023002322
              type: video
              height: 3.616076749251911
            "480p":
              urls:
              - https://openapi-generator.tech
              - https://openapi-generator.tech
              width: 2.027123023002322
              type: video
              height: 3.616076749251911
          url: url
          height: 7.061401241503109
        tags:
          general:
          - general
          - general
          copyright:
          - copyright
          - copyright
          character:
          - character
          - character
          lore:
          - lore
          - lore
          artist:
          - artist
          - artist
          species:
          - species
          - species
          meta:
          - meta
          - meta
          invalid:
          - invalid
          - invalid
        duration: 9.369310271410669
        score:
          total: 1.2315135367772556
          up: 4.145608029883936
          down: 7.386281948385884
        relationships:
          has_children: true
          has_active_children: true
          children:
          - 1.1730742509559433
          - 1.1730742509559433
          parent_id: 7.457744773683766
        fav_count: 1.4894159098541704
        file:
          ext: ext
          size: 5.962133916683182
          width: 6.027456183070403
          url: url
          height: 1.4658129805029452
          md5: md5
        updated_at: 2000-01-23T04:56:07.000+00:00
        has_notes: true
        id: 0.8008281904610115
        locked_tags:
        - locked_tags
        - locked_tags
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        file:
          $ref: '#/components/schemas/Post_file'
        preview:
          $ref: '#/components/schemas/Post_preview'
        sample:
          $ref: '#/components/schemas/Post_sample'
        score:
          $ref: '#/components/schemas/Post_score'
        tags:
          $ref: '#/components/schemas/Post_tags'
        locked_tags:
          items:
            type: string
          type: array
        change_seq:
          type: number
        flags:
          $ref: '#/components/schemas/Post_flags'
        rating:
          $ref: '#/components/schemas/Ratings'
        fav_count:
          type: number
        sources:
          items:
            type: string
          type: array
        pools:
          items:
            type: number
          type: array
        relationships:
          $ref: '#/components/schemas/Post_relationships'
        approver_id:
          nullable: true
          type: number
        uploader_id:
          type: number
        description:
          type: string
        comment_count:
          type: number
        is_favorited:
          type: boolean
        has_notes:
          type: boolean
        duration:
          nullable: true
          type: number
      required:
      - approver_id
      - change_seq
      - comment_count
      - created_at
      - description
      - duration
      - fav_count
      - file
      - flags
      - has_notes
      - id
      - is_favorited
      - locked_tags
      - pools
      - preview
      - rating
      - relationships
      - sample
      - score
      - sources
      - tags
      - updated_at
      - uploader_id
    PostApproval:
      example:
        post_id: 1.4658129805029452
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
      properties:
        id:
          type: number
        user_id:
          type: number
        post_id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - id
      - post_id
      - updated_at
      - user_id
    PostDisapproval:
      example:
        reason: borderline_quality
        post_id: 1.4658129805029452
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        message: message
      properties:
        id:
          type: number
        user_id:
          type: number
        post_id:
          type: number
        reason:
          enum:
          - borderline_quality
          - borderline_relevancy
          - other
          type: string
        message:
          nullable: true
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - id
      - message
      - post_id
      - reason
      - updated_at
      - user_id
    PostEvent:
      example:
        post_id: 1.4658129805029452
        creator_id: 6.027456183070403
        action: deleted
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
      properties:
        id:
          type: number
        creator_id:
          nullable: true
          type: number
        post_id:
          type: number
        action:
          $ref: '#/components/schemas/PostEventActions'
        created_at:
          format: date-time
          type: string
      required:
      - action
      - created_at
      - creator_id
      - id
      - post_id
    PostFlag:
      example:
        reason: reason
        post_id: 6.027456183070403
        updated_at: 2000-01-23T04:56:07.000+00:00
        is_resolved: true
        creator_id: 1.4658129805029452
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        type: flag
        is_deletion: true
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        post_id:
          type: number
        reason:
          type: string
        creator_id:
          nullable: true
          type: number
        is_resolved:
          type: boolean
        updated_at:
          format: date-time
          type: string
        is_deletion:
          type: boolean
        type:
          enum:
          - flag
          - deletion
          type: string
      required:
      - created_at
      - creator_id
      - id
      - is_deletion
      - is_resolved
      - post_id
      - reason
      - type
      - updated_at
    PostReplacement:
      example:
        reason: reason
        approver_id: 5.962133916683182
        file_name: file_name
        created_at: 2000-01-23T04:56:07.000+00:00
        image_width: 7.061401241503109
        source: source
        file_size: 5.637376656633329
        file_ext: file_ext
        image_height: 2.3021358869347655
        updated_at: 2000-01-23T04:56:07.000+00:00
        post_id: 6.027456183070403
        creator_id: 1.4658129805029452
        id: 0.8008281904610115
        md5: md5
        status: prompted
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        post_id:
          type: number
        creator_id:
          type: number
        approver_id:
          nullable: true
          type: number
        file_ext:
          type: string
        file_size:
          type: number
        image_height:
          type: number
        image_width:
          type: number
        md5:
          type: string
        source:
          type: string
        file_name:
          type: string
        status:
          enum:
          - prompted
          - approved
          - rejected
          - pending
          type: string
        reason:
          type: string
      required:
      - approver_id
      - created_at
      - creator_id
      - file_ext
      - file_name
      - file_size
      - id
      - image_height
      - image_width
      - md5
      - post_id
      - reason
      - source
      - status
      - updated_at
    PostSampleAlternate:
      example:
        urls:
        - https://openapi-generator.tech
        - https://openapi-generator.tech
        width: 2.027123023002322
        type: video
        height: 3.616076749251911
      properties:
        type:
          enum:
          - video
          type: string
        height:
          type: number
        width:
          type: number
        urls:
          items:
            $ref: '#/components/schemas/PostSampleAlternate_urls_inner'
          type: array
      required:
      - height
      - type
      - urls
      - width
    PostSet:
      example:
        transfer_on_delete: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 6.027456183070403
        is_public: true
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0.8008281904610115
        post_count: 1.4658129805029452
        shortname: shortname
        post_ids:
        - 5.962133916683182
        - 5.962133916683182
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        creator_id:
          type: number
        is_public:
          type: boolean
        name:
          type: string
        shortname:
          type: string
        description:
          type: string
        post_count:
          type: number
        transfer_on_delete:
          type: boolean
        post_ids:
          items:
            type: number
          type: array
      required:
      - created_at
      - creator_id
      - description
      - id
      - is_public
      - name
      - post_count
      - post_ids
      - shortname
      - transfer_on_delete
      - updated_at
    PostVersion:
      example:
        reason: reason
        removed_tags:
        - removed_tags
        - removed_tags
        obsolete_added_tags: obsolete_added_tags
        rating: s
        description: description
        source: source
        source_changed: true
        description_changed: true
        version: 5.637376656633329
        obsolete_removed_tags: obsolete_removed_tags
        tags: tags
        parent_changed: true
        updater_name: updater_name
        post_id: 6.027456183070403
        updated_at: 2000-01-23T04:56:07.000+00:00
        added_locked_tags:
        - added_locked_tags
        - added_locked_tags
        rating_changed: true
        parent_id: 5.962133916683182
        added_tags:
        - added_tags
        - added_tags
        updater_id: 1.4658129805029452
        unchanged_tags: unchanged_tags
        id: 0.8008281904610115
        locked_tags: locked_tags
        removed_locked_tags:
        - removed_locked_tags
        - removed_locked_tags
      properties:
        id:
          type: number
        post_id:
          type: number
        tags:
          type: string
        updater_id:
          type: number
        updated_at:
          format: date-time
          type: string
        rating:
          $ref: '#/components/schemas/Ratings'
        parent_id:
          nullable: true
          type: number
        source:
          type: string
        description:
          type: string
        reason:
          nullable: true
          type: string
        locked_tags:
          nullable: true
          type: string
        added_tags:
          items:
            type: string
          type: array
        removed_tags:
          items:
            type: string
          type: array
        added_locked_tags:
          items:
            type: string
          type: array
        removed_locked_tags:
          items:
            type: string
          type: array
        rating_changed:
          type: boolean
        parent_changed:
          type: boolean
        source_changed:
          type: boolean
        description_changed:
          type: boolean
        version:
          type: number
        obsolete_added_tags:
          type: string
        obsolete_removed_tags:
          type: string
        unchanged_tags:
          type: string
        updater_name:
          type: string
      required:
      - added_locked_tags
      - added_tags
      - description
      - description_changed
      - id
      - locked_tags
      - obsolete_added_tags
      - obsolete_removed_tags
      - parent_changed
      - parent_id
      - post_id
      - rating
      - rating_changed
      - reason
      - removed_locked_tags
      - removed_tags
      - source
      - source_changed
      - tags
      - unchanged_tags
      - updated_at
      - updater_id
      - updater_name
      - version
    RelatedTag:
      properties:
        name:
          type: string
        category_id:
          $ref: '#/components/schemas/TagCategories'
      required:
      - category_id
      - name
    Tag:
      example:
        is_locked: true
        related_tags_updated_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        post_count: 6.027456183070403
        category: 1.4658129805029452
        related_tags:
        - related_tags
        - related_tags
      properties:
        id:
          type: number
        name:
          type: string
        post_count:
          type: number
        related_tags:
          items:
            type: string
          type: array
        related_tags_updated_at:
          format: date-time
          nullable: true
          type: string
        category:
          $ref: '#/components/schemas/TagCategories'
        is_locked:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - category
      - created_at
      - id
      - is_locked
      - name
      - post_count
      - related_tags
      - related_tags_updated_at
      - updated_at
    TagAlias:
      example:
        reason: reason
        forum_topic_id: 5.962133916683182
        updated_at: 2000-01-23T04:56:07.000+00:00
        approver_id: 2.3021358869347655
        creator_id: 6.027456183070403
        consequent_name: consequent_name
        created_at: 2000-01-23T04:56:07.000+00:00
        forum_post_id: 1.4658129805029452
        id: 0.8008281904610115
        post_count: 5.637376656633329
        antecedent_name: antecedent_name
        status: active
      properties:
        id:
          type: number
        antecedent_name:
          type: string
        reason:
          type: string
        creator_id:
          type: number
        created_at:
          format: date-time
          nullable: true
          type: string
        forum_post_id:
          nullable: true
          type: number
        updated_at:
          format: date-time
          nullable: true
          type: string
        forum_topic_id:
          nullable: true
          type: number
        consequent_name:
          type: string
        status:
          $ref: '#/components/schemas/TagRequestStatuses'
        post_count:
          type: number
        approver_id:
          nullable: true
          type: number
      required:
      - antecedent_name
      - approver_id
      - consequent_name
      - created_at
      - creator_id
      - forum_post_id
      - forum_topic_id
      - id
      - post_count
      - reason
      - status
      - updated_at
    TagImplication:
      example:
        reason: reason
        forum_topic_id: 5.962133916683182
        updated_at: 2000-01-23T04:56:07.000+00:00
        approver_id: 5.637376656633329
        creator_id: 6.027456183070403
        consequent_name: consequent_name
        descendant_names:
        - descendant_names
        - descendant_names
        created_at: 2000-01-23T04:56:07.000+00:00
        forum_post_id: 1.4658129805029452
        id: 0.8008281904610115
        antecedent_name: antecedent_name
        status: active
      properties:
        id:
          type: number
        reason:
          type: string
        creator_id:
          type: number
        created_at:
          format: date-time
          type: string
        forum_post_id:
          nullable: true
          type: number
        antecedent_name:
          type: string
        consequent_name:
          type: string
        status:
          $ref: '#/components/schemas/TagRequestStatuses'
        forum_topic_id:
          nullable: true
          type: number
        updated_at:
          format: date-time
          type: string
        descendant_names:
          items:
            type: string
          type: array
        approver_id:
          nullable: true
          type: number
      required:
      - antecedent_name
      - approver_id
      - consequent_name
      - created_at
      - creator_id
      - descendant_names
      - forum_post_id
      - forum_topic_id
      - id
      - reason
      - status
      - updated_at
    TagPreview:
      example:
        a: a
        b: b
        type: tag
        tagTypeA: 0.8008281904610115
        tagTypeB: 6.027456183070403
      properties:
        a:
          description: "The name if type=tag, else the antecedent."
          type: string
        b:
          description: "The consequent, only present if type=alias or type=implication."
          type: string
        type:
          enum:
          - tag
          - implication
          - alias
          type: string
        tagTypeA:
          $ref: '#/components/schemas/TagCategories'
        tagTypeB:
          $ref: '#/components/schemas/TagCategories'
      required:
      - a
      - tagTypeA
      - type
    TagTypeVersion:
      example:
        new_type: null
        is_locked: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        creator_id: 5.962133916683182
        created_at: 2000-01-23T04:56:07.000+00:00
        tag_id: 1.4658129805029452
        id: 0.8008281904610115
        old_type: 6.027456183070403
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        old_type:
          $ref: '#/components/schemas/TagCategories'
        new_type:
          $ref: '#/components/schemas/TagCategories'
        is_locked:
          type: boolean
        tag_id:
          type: number
        creator_id:
          type: number
      required:
      - created_at
      - creator_id
      - id
      - is_locked
      - new_type
      - old_type
      - tag_id
      - updated_at
    Takedown:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        reason_hidden: true
        approver_id: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        post_count: 1.4658129805029452
        status: approved
      properties:
        id:
          type: number
        status:
          enum:
          - approved
          - denied
          - partial
          - pending
          type: string
        approver_id:
          nullable: true
          type: number
        reason_hidden:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        post_count:
          type: number
      required:
      - approver_id
      - created_at
      - id
      - post_count
      - reason_hidden
      - status
      - updated_at
    Ticket:
      example:
        reason: reason
        report_reason: report_reason
        qtype: blip
        claimant_id: 5.637376656633329
        created_at: 2000-01-23T04:56:07.000+00:00
        accused_id: 2.3021358869347655
        updated_at: 2000-01-23T04:56:07.000+00:00
        handler_id: 5.962133916683182
        response: response
        creator_id: 6.027456183070403
        id: 0.8008281904610115
        disp_id: 1.4658129805029452
        status: pending
      properties:
        id:
          type: number
        creator_id:
          type: number
        reason:
          type: string
        disp_id:
          type: number
        qtype:
          $ref: '#/components/schemas/TicketTypes'
        status:
          $ref: '#/components/schemas/TicketStatuses'
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        response:
          type: string
        handler_id:
          nullable: true
          type: number
        claimant_id:
          description: Only visible to Moderator+.
          nullable: true
          type: number
        report_reason:
          nullable: true
          type: string
        accused_id:
          nullable: true
          type: number
      required:
      - accused_id
      - created_at
      - creator_id
      - disp_id
      - handler_id
      - id
      - qtype
      - reason
      - report_reason
      - response
      - status
      - updated_at
    UploadWhitelist:
      example:
        note: note
        reason: reason
        updated_at: 2000-01-23T04:56:07.000+00:00
        hidden: true
        allowed: true
        pattern: pattern
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        pattern:
          type: string
        note:
          type: string
        hidden:
          type: boolean
        allowed:
          type: boolean
        reason:
          type: string
      required:
      - allowed
      - created_at
      - hidden
      - id
      - note
      - pattern
      - reason
      - updated_at
    Upload:
      example:
        uploader_name: uploader_name
        uploader_id: 6.027456183070403
        tag_string: tag_string
        backtrace: backtrace
        rating: s
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        source: source
        image_width: 7.061401241503109
        file_size: 2.3021358869347655
        md5_confirmation: ""
        file_ext: 5.637376656633329
        image_height: 9.301444243932576
        post_id: 1.4658129805029452
        updated_at: 2000-01-23T04:56:07.000+00:00
        parent_id: 5.962133916683182
        id: 0.8008281904610115
        status: completed
        md5: md5
      properties:
        id:
          type: number
        source:
          type: string
        rating:
          $ref: '#/components/schemas/Ratings'
        uploader_id:
          type: number
        tag_string:
          type: string
        status:
          description: |
            Note: The "error" status will be proceeded by an error, ex: "error: RuntimeError - No file or source URL provided"
          enum:
          - completed
          - duplicate
          - error
          - processing
          - pending
          type: string
        backtrace:
          nullable: true
          type: string
        post_id:
          nullable: true
          type: number
        md5_confirmation:
          deprecated: true
          nullable: true
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        parent_id:
          nullable: true
          type: number
        md5:
          nullable: true
          type: string
        file_ext:
          $ref: '#/components/schemas/getArtist_idOrName_parameter'
        file_size:
          nullable: true
          type: number
        image_width:
          nullable: true
          type: number
        image_height:
          nullable: true
          type: number
        description:
          type: string
        uploader_name:
          type: string
      required:
      - backtrace
      - created_at
      - description
      - file_ext
      - file_size
      - id
      - image_height
      - image_width
      - md5
      - md5_confirmation
      - parent_id
      - post_id
      - rating
      - source
      - status
      - tag_string
      - updated_at
      - uploader_id
      - uploader_name
    User:
      example:
        can_approve_posts: true
        note_update_count: 2.3021358869347655
        level: 6.027456183070403
        post_update_count: 5.637376656633329
        level_string: level_string
        created_at: 2000-01-23T04:56:07.000+00:00
        can_upload_free: true
        base_upload_limit: 1.4658129805029452
        avatar_id: 7.061401241503109
        name: name
        id: 0.8008281904610115
        post_upload_count: 5.962133916683182
        is_banned: true
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        name:
          type: string
        level:
          type: number
        base_upload_limit:
          type: number
        post_upload_count:
          type: number
        post_update_count:
          type: number
        note_update_count:
          type: number
        is_banned:
          type: boolean
        can_approve_posts:
          type: boolean
        can_upload_free:
          type: boolean
        level_string:
          type: string
        avatar_id:
          nullable: true
          type: number
      required:
      - avatar_id
      - base_upload_limit
      - can_approve_posts
      - can_upload_free
      - created_at
      - id
      - is_banned
      - level
      - level_string
      - name
      - note_update_count
      - post_update_count
      - post_upload_count
    UserFeedback:
      example:
        is_deleted: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 6.027456183070403
        creator_id: 1.4658129805029452
        updater_id: 5.962133916683182
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        category: negative
        body: body
      properties:
        id:
          type: number
        user_id:
          type: number
        creator_id:
          type: number
        category:
          $ref: '#/components/schemas/FeedbackCategories'
        body:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        updater_id:
          type: number
        is_deleted:
          type: boolean
      required:
      - body
      - category
      - created_at
      - creator_id
      - id
      - is_deleted
      - updated_at
      - updater_id
      - user_id
    UserNameChangeRequest:
      example:
        change_reason: change_reason
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 1.4658129805029452
        approver_id: 6.027456183070403
        original_name: original_name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        desired_name: desired_name
        status: approved
      properties:
        id:
          type: number
        approver_id:
          type: number
        user_id:
          type: number
        original_name:
          type: string
        desired_name:
          type: string
        change_reason:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        status:
          enum:
          - approved
          type: string
      required:
      - approver_id
      - created_at
      - desired_name
      - id
      - original_name
      - status
      - updated_at
      - user_id
    WikiPage:
      example:
        is_locked: true
        parent: parent
        created_at: 2000-01-23T04:56:07.000+00:00
        other_names:
        - other_names
        - other_names
        title: title
        body: body
        is_deleted: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        category_id: 5.962133916683182
        creator_id: 6.027456183070403
        updater_id: 1.4658129805029452
        creator_name: creator_name
        id: 0.8008281904610115
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        title:
          type: string
        body:
          type: string
        creator_id:
          type: number
        is_locked:
          type: boolean
        updater_id:
          type: number
        is_deleted:
          type: boolean
        other_names:
          items:
            type: string
          type: array
        parent:
          nullable: true
          type: string
        creator_name:
          type: string
        category_id:
          $ref: '#/components/schemas/TagCategories'
      required:
      - body
      - category_id
      - created_at
      - creator_id
      - creator_name
      - id
      - is_deleted
      - is_locked
      - other_names
      - parent
      - title
      - updated_at
      - updater_id
    WikiPageVersion:
      example:
        is_locked: true
        reason: reason
        parent: parent
        wiki_page_id: 1.4658129805029452
        is_deleted: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        updater_id: 6.027456183070403
        created_at: 2000-01-23T04:56:07.000+00:00
        other_names:
        - other_names
        - other_names
        id: 0.8008281904610115
        title: title
        body: body
      properties:
        id:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        title:
          type: string
        body:
          type: string
        updater_id:
          type: number
        wiki_page_id:
          type: number
        is_locked:
          type: boolean
        other_names:
          items:
            type: string
          type: array
        is_deleted:
          type: boolean
        reason:
          nullable: true
          type: string
        parent:
          nullable: true
          type: string
      required:
      - body
      - created_at
      - id
      - is_deleted
      - is_locked
      - other_names
      - parent
      - reason
      - title
      - updated_at
      - updater_id
      - wiki_page_id
    searchArtists_200_response_inner_allOf_domains_inner_inner:
      anyOf:
      - type: string
      - type: number
    searchArtists_200_response_inner:
      allOf:
      - $ref: '#/components/schemas/Artist'
      - properties:
          domains:
            example:
            - - e621.net
              - 1
            items:
              items:
                $ref: '#/components/schemas/searchArtists_200_response_inner_allOf_domains_inner_inner'
              type: array
            type: array
          urls:
            items:
              $ref: '#/components/schemas/ArtistURL'
            type: array
        required:
        - domains
        - urls
      example:
        is_locked: true
        is_active: true
        notes: notes
        group_name: group_name
        created_at: 2000-01-23T04:56:07.000+00:00
        domains:
        - - e621.net
          - 1
        other_names:
        - other_names
        - other_names
        urls:
        - normalized_url: https://openapi-generator.tech
          is_active: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 5.962133916683182
          artist_id: 5.637376656633329
          url: https://openapi-generator.tech
        - normalized_url: https://openapi-generator.tech
          is_active: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 5.962133916683182
          artist_id: 5.637376656633329
          url: https://openapi-generator.tech
        linked_user_id: 6.027456183070403
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        creator_id: 1.4658129805029452
        id: 0.8008281904610115
    createArtist_request:
      properties:
        artist[name]:
          type: string
        artist[other_names]:
          items:
            type: string
          type: array
        artist[other_names_string]:
          type: string
        artist[url_string]:
          type: string
        artist[notes]:
          type: string
        artist[group_name]:
          type: string
        artist[linked_user_id]:
          description: Only usable for Janitor+
          nullable: true
          type: number
        artist[is_locked]:
          description: Only usable for Janitor+
          type: boolean
      required:
      - "artist[name]"
    getArtist_idOrName_parameter:
      anyOf:
      - type: number
      - type: string
    getArtist_200_response:
      allOf:
      - $ref: '#/components/schemas/Artist'
      - properties:
          domains:
            items:
              example:
              - - e621.net
                - 1
              items:
                $ref: '#/components/schemas/searchArtists_200_response_inner_allOf_domains_inner_inner'
              type: array
            type: array
          urls:
            items:
              $ref: '#/components/schemas/ArtistURL'
            type: array
        required:
        - domains
        - urls
      example:
        is_locked: true
        is_active: true
        notes: notes
        group_name: group_name
        created_at: 2000-01-23T04:56:07.000+00:00
        domains:
        - - - e621.net
            - 1
        - - - e621.net
            - 1
        other_names:
        - other_names
        - other_names
        urls:
        - normalized_url: https://openapi-generator.tech
          is_active: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 5.962133916683182
          artist_id: 5.637376656633329
          url: https://openapi-generator.tech
        - normalized_url: https://openapi-generator.tech
          is_active: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 5.962133916683182
          artist_id: 5.637376656633329
          url: https://openapi-generator.tech
        linked_user_id: 6.027456183070403
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        creator_id: 1.4658129805029452
        id: 0.8008281904610115
    editArtist_request:
      properties:
        artist[name]:
          description: Only usable for Janitor+
          type: string
        artist[other_names]:
          items:
            type: string
          type: array
        artist[other_names_string]:
          type: string
        artist[url_string]:
          type: string
        artist[notes]:
          type: string
        artist[group_name]:
          type: string
        artist[linked_user_id]:
          description: Only usable for Janitor+
          nullable: true
          type: number
        artist[is_locked]:
          description: Only usable for Janitor+
          type: boolean
    searchArtistVersions_200_response_anyOf:
      description: No Results
      properties:
        artist_versions:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - artist_versions
    searchArtistVersions_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/ArtistVersion'
      - $ref: '#/components/schemas/searchArtistVersions_200_response_anyOf'
    searchArtistUrls_200_response_inner:
      allOf:
      - $ref: '#/components/schemas/ArtistURL'
      - properties:
          artist:
            $ref: '#/components/schemas/Artist'
        required:
        - artist
      example:
        normalized_url: https://openapi-generator.tech
        is_active: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        artist:
          is_locked: true
          is_active: true
          linked_user_id: 6.027456183070403
          notes: notes
          updated_at: 2000-01-23T04:56:07.000+00:00
          group_name: group_name
          name: name
          creator_id: 1.4658129805029452
          created_at: 2000-01-23T04:56:07.000+00:00
          other_names:
          - other_names
          - other_names
          id: 0.8008281904610115
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0.8008281904610115
        artist_id: 6.027456183070403
        url: https://openapi-generator.tech
    searchAvoidPostings_200_response_anyOf:
      description: No Results
      properties:
        avoid_postings:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - avoid_postings
    searchAvoidPostings_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/AvoidPosting'
      - $ref: '#/components/schemas/searchAvoidPostings_200_response_anyOf'
    createAvoidPosting_request:
      properties:
        avoid_posting[details]:
          type: string
        avoid_posting[staff_notes]:
          type: string
        avoid_posting[is_active]:
          type: boolean
        avoid_posting[artist_attributes][id]:
          type: number
        avoid_posting[artist_attributes][name]:
          description: "If provided and the artist does not exist, an artist will\
            \ be created."
          type: string
        avoid_posting[artist_attributes][other_names_string]:
          type: string
        avoid_posting[artist_attributes][other_names]:
          items:
            type: string
          type: array
        avoid_posting[artist_attributes][group_name]:
          type: string
        avoid_posting[artist_attributes][linked_user_id]:
          type: number
    editAvoidPosting_request:
      properties:
        avoid_posting[details]:
          type: string
        avoid_posting[staff_notes]:
          type: string
        avoid_posting[is_active]:
          type: boolean
        avoid_posting[artist_attributes][name]:
          type: string
        avoid_posting[artist_attributes][other_names_string]:
          type: string
        avoid_posting[artist_attributes][other_names]:
          items:
            type: string
          type: array
        avoid_posting[artist_attributes][group_name]:
          type: string
        avoid_posting[artist_attributes][linked_user_id]:
          type: number
    searchAvoidPostingVersions_200_response_anyOf:
      description: No Results
      properties:
        avoid_posting_versions:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - avoid_posting_versions
    searchAvoidPostingVersions_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/AvoidPostingVersion'
      - $ref: '#/components/schemas/searchAvoidPostingVersions_200_response_anyOf'
    searchBans_200_response_anyOf:
      description: No Results
      properties:
        bans:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - bans
    searchBans_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/Ban'
      - $ref: '#/components/schemas/searchBans_200_response_anyOf'
    searchBlips_200_response_anyOf:
      description: No Results
      properties:
        blips:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - blips
    searchBlips_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/Blip'
      - $ref: '#/components/schemas/searchBlips_200_response_anyOf'
    createBlip_request:
      properties:
        blip[body]:
          type: string
        blip[response_to]:
          type: number
      required:
      - "blip[body]"
    editBlip_request:
      properties:
        blip[body]:
          type: string
    markBlip_request:
      properties:
        record_type:
          enum:
          - unmark
          - ban
          - record
          - warning
          type: string
      required:
      - record_type
    searchBulkUpdateRequests_200_response_anyOf:
      description: No Results
      properties:
        bulk_update_requests:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - bulk_update_requests
    searchBulkUpdateRequests_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/BulkUpdateRequest'
      - $ref: '#/components/schemas/searchBulkUpdateRequests_200_response_anyOf'
    createBulkUpdateRequest_request:
      properties:
        bulk_update_request[script]:
          type: string
        bulk_update_request[title]:
          type: string
        bulk_update_request[reason]:
          type: string
        bulk_update_request[forum_topic_id]:
          type: number
        bulk_update_request[skip_forum]:
          description: Only usable for Admin+
          type: boolean
      required:
      - "bulk_update_request[reason]"
      - "bulk_update_request[script]"
      - "bulk_update_request[title]"
    editBulkUpdateRequest_request:
      properties:
        bulk_update_request[script]:
          type: string
        bulk_update_request[forum_topic_id]:
          description: You must be Admin+.
          type: string
        bulk_update_request[forum_post_id]:
          description: You must be Admin+.
          type: string
    searchComments_200_response_anyOf:
      description: No Results
      properties:
        comments:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - comments
    searchComments_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/Comment'
      - $ref: '#/components/schemas/searchComments_200_response_anyOf'
    createComment_request:
      properties:
        comment[body]:
          type: string
        comment[post_id]:
          type: number
        comment[do_not_bump_post]:
          type: boolean
        comment[is_sticky]:
          description: Only usable for Janitor+
          type: boolean
        comment[is_hidden]:
          description: Only usable for Moderator+
          type: boolean
      required:
      - "comment[body]"
      - "comment[post_id]"
    editComment_request:
      properties:
        comment[body]:
          type: string
        comment[is_sticky]:
          description: Only usable for Janitor+
          type: boolean
        comment[is_hidden]:
          description: Only usable for Moderator+
          type: boolean
    createCommentVote_200_response:
      example:
        score: 0.8008281904610115
        our_score: 6.027456183070403
      properties:
        score:
          type: number
        our_score:
          type: number
      required:
      - our_score
      - score
    searchDMails_200_response_anyOf:
      description: No Results
      properties:
        dmails:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - dmails
    searchDMails_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/DMail'
      - $ref: '#/components/schemas/searchDMails_200_response_anyOf'
    previewDText_request:
      properties:
        body:
          type: string
      required:
      - body
    searchEmailBlacklists_200_response_anyOf:
      description: No Results
      properties:
        email_blacklists:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - email_blacklists
    searchEmailBlacklists_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/EmailBlacklist'
      - $ref: '#/components/schemas/searchEmailBlacklists_200_response_anyOf'
    createEmailBlacklist_request:
      properties:
        email_blacklist[domain]:
          type: string
        email_blacklist[reason]:
          type: string
      required:
      - "email_blacklist[domain]"
      - "email_blacklist[reason]"
    listFavorites_200_response:
      example:
        posts:
        - preview:
            width: 5.637376656633329
            url: url
            height: 2.3021358869347655
          comment_count: 9.965781217890562
          change_seq: 1.0246457001441578
          uploader_id: 5.025004791520295
          is_favorited: true
          sources:
          - sources
          - sources
          approver_id: 4.965218492984954
          flags:
            rating_locked: true
            deleted: true
            flagged: true
            pending: true
            status_locked: true
            note_locked: true
          rating: s
          created_at: 2000-01-23T04:56:07.000+00:00
          pools:
          - 6.84685269835264
          - 6.84685269835264
          description: description
          sample:
            width: 9.301444243932576
            has: true
            alternates:
              "720p":
                urls:
                - https://openapi-generator.tech
                - https://openapi-generator.tech
                width: 2.027123023002322
                type: video
                height: 3.616076749251911
              original:
                urls:
                - https://openapi-generator.tech
                - https://openapi-generator.tech
                width: 2.027123023002322
                type: video
                height: 3.616076749251911
              "480p":
                urls:
                - https://openapi-generator.tech
                - https://openapi-generator.tech
                width: 2.027123023002322
                type: video
                height: 3.616076749251911
            url: url
            height: 7.061401241503109
          tags:
            general:
            - general
            - general
            copyright:
            - copyright
            - copyright
            character:
            - character
            - character
            lore:
            - lore
            - lore
            artist:
            - artist
            - artist
            species:
            - species
            - species
            meta:
            - meta
            - meta
            invalid:
            - invalid
            - invalid
          duration: 9.369310271410669
          score:
            total: 1.2315135367772556
            up: 4.145608029883936
            down: 7.386281948385884
          relationships:
            has_children: true
            has_active_children: true
            children:
            - 1.1730742509559433
            - 1.1730742509559433
            parent_id: 7.457744773683766
          fav_count: 1.4894159098541704
          file:
            ext: ext
            size: 5.962133916683182
            width: 6.027456183070403
            url: url
            height: 1.4658129805029452
            md5: md5
          updated_at: 2000-01-23T04:56:07.000+00:00
          has_notes: true
          id: 0.8008281904610115
          locked_tags:
          - locked_tags
          - locked_tags
        - preview:
            width: 5.637376656633329
            url: url
            height: 2.3021358869347655
          comment_count: 9.965781217890562
          change_seq: 1.0246457001441578
          uploader_id: 5.025004791520295
          is_favorited: true
          sources:
          - sources
          - sources
          approver_id: 4.965218492984954
          flags:
            rating_locked: true
            deleted: true
            flagged: true
            pending: true
            status_locked: true
            note_locked: true
          rating: s
          created_at: 2000-01-23T04:56:07.000+00:00
          pools:
          - 6.84685269835264
          - 6.84685269835264
          description: description
          sample:
            width: 9.301444243932576
            has: true
            alternates:
              "720p":
                urls:
                - https://openapi-generator.tech
                - https://openapi-generator.tech
                width: 2.027123023002322
                type: video
                height: 3.616076749251911
              original:
                urls:
                - https://openapi-generator.tech
                - https://openapi-generator.tech
                width: 2.027123023002322
                type: video
                height: 3.616076749251911
              "480p":
                urls:
                - https://openapi-generator.tech
                - https://openapi-generator.tech
                width: 2.027123023002322
                type: video
                height: 3.616076749251911
            url: url
            height: 7.061401241503109
          tags:
            general:
            - general
            - general
            copyright:
            - copyright
            - copyright
            character:
            - character
            - character
            lore:
            - lore
            - lore
            artist:
            - artist
            - artist
            species:
            - species
            - species
            meta:
            - meta
            - meta
            invalid:
            - invalid
            - invalid
          duration: 9.369310271410669
          score:
            total: 1.2315135367772556
            up: 4.145608029883936
            down: 7.386281948385884
          relationships:
            has_children: true
            has_active_children: true
            children:
            - 1.1730742509559433
            - 1.1730742509559433
            parent_id: 7.457744773683766
          fav_count: 1.4894159098541704
          file:
            ext: ext
            size: 5.962133916683182
            width: 6.027456183070403
            url: url
            height: 1.4658129805029452
            md5: md5
          updated_at: 2000-01-23T04:56:07.000+00:00
          has_notes: true
          id: 0.8008281904610115
          locked_tags:
          - locked_tags
          - locked_tags
      properties:
        posts:
          items:
            $ref: '#/components/schemas/Post'
          type: array
      required:
      - posts
    addFavorite_request:
      properties:
        post_ud:
          type: number
      required:
      - post_id
    addFavorite_201_response:
      example:
        post:
          preview:
            width: 5.637376656633329
            url: url
            height: 2.3021358869347655
          comment_count: 9.965781217890562
          change_seq: 1.0246457001441578
          uploader_id: 5.025004791520295
          is_favorited: true
          sources:
          - sources
          - sources
          approver_id: 4.965218492984954
          flags:
            rating_locked: true
            deleted: true
            flagged: true
            pending: true
            status_locked: true
            note_locked: true
          rating: s
          created_at: 2000-01-23T04:56:07.000+00:00
          pools:
          - 6.84685269835264
          - 6.84685269835264
          description: description
          sample:
            width: 9.301444243932576
            has: true
            alternates:
              "720p":
                urls:
                - https://openapi-generator.tech
                - https://openapi-generator.tech
                width: 2.027123023002322
                type: video
                height: 3.616076749251911
              original:
                urls:
                - https://openapi-generator.tech
                - https://openapi-generator.tech
                width: 2.027123023002322
                type: video
                height: 3.616076749251911
              "480p":
                urls:
                - https://openapi-generator.tech
                - https://openapi-generator.tech
                width: 2.027123023002322
                type: video
                height: 3.616076749251911
            url: url
            height: 7.061401241503109
          tags:
            general:
            - general
            - general
            copyright:
            - copyright
            - copyright
            character:
            - character
            - character
            lore:
            - lore
            - lore
            artist:
            - artist
            - artist
            species:
            - species
            - species
            meta:
            - meta
            - meta
            invalid:
            - invalid
            - invalid
          duration: 9.369310271410669
          score:
            total: 1.2315135367772556
            up: 4.145608029883936
            down: 7.386281948385884
          relationships:
            has_children: true
            has_active_children: true
            children:
            - 1.1730742509559433
            - 1.1730742509559433
            parent_id: 7.457744773683766
          fav_count: 1.4894159098541704
          file:
            ext: ext
            size: 5.962133916683182
            width: 6.027456183070403
            url: url
            height: 1.4658129805029452
            md5: md5
          updated_at: 2000-01-23T04:56:07.000+00:00
          has_notes: true
          id: 0.8008281904610115
          locked_tags:
          - locked_tags
          - locked_tags
      properties:
        post:
          $ref: '#/components/schemas/Post'
      required:
      - post
    searchForumPosts_200_response_anyOf:
      description: No Results
      properties:
        forum_posts:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - forum_posts
    searchForumPosts_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/ForumPost'
      - $ref: '#/components/schemas/searchForumPosts_200_response_anyOf'
    createForumPost_request:
      properties:
        forum_post[body]:
          type: string
        forum_post[topic_id]:
          type: number
      required:
      - "forum_post[body]"
      - "forum_post[topic_id]"
    editForumPost_request:
      properties:
        forum_post[body]:
          type: string
    createForumPostVote_request:
      properties:
        forum_post_vote[score]:
          enum:
          - -1
          - 0
          - 1
          type: number
      required:
      - "forum_post_vote[score]"
    createForumTopic_request:
      properties:
        forum_topic[title]:
          type: string
        forum_topic[category_id]:
          type: number
        forum_topic[original_post_attributes][id]:
          description: "Forum post ID. Mutually exclusive with body, one must be provided."
          type: number
        forum_topic[original_post_attributes][body]:
          description: "First forum post body. Mutually exclusive with id, one must\
            \ be provided."
          type: string
        forum_topic[is_sticky]:
          description: You must be Moderator+.
          type: boolean
        forum_topic[is_locked]:
          description: You must be Moderator+.
          type: boolean
      required:
      - "forum_topic[category_id]"
      - "forum_topic[title]"
    editForumTopic_request:
      properties:
        forum_topic[title]:
          type: string
        forum_topic[category_id]:
          type: number
        forum_topic[original_post_attributes][id]:
          description: Forum post ID. Silently ignored
          type: number
        forum_topic[original_post_attributes][body]:
          description: First forum post body.
          type: string
        forum_topic[is_sticky]:
          description: You must be Moderator+.
          type: boolean
        forum_topic[is_locked]:
          description: You must be Moderator+.
          type: boolean
    markAllForumTopicsAsRead_request:
      properties:
        category_id:
          type: number
      required:
      - category_id
    createHelpPage_request:
      properties:
        help_page[name]:
          type: string
        help_page[wiki_page]:
          type: string
        help_page[related]:
          description: Separate with a comma followed by a space.
          type: string
        help_page[title]:
          type: string
      required:
      - "help_page[name]"
      - "help_page[wiki_page]"
    editHelpPage_request:
      properties:
        help_page[name]:
          type: string
        help_page[wiki_page]:
          type: string
        help_page[related]:
          description: Separate with a comma followed by a space.
          type: string
        help_page[title]:
          type: string
    listIPBans_200_response_anyOf:
      description: No Results
      properties:
        ip_bans:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - ip_bans
    listIPBans_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/IPBan'
      - $ref: '#/components/schemas/listIPBans_200_response_anyOf'
    createIPBan_request:
      properties:
        ip_ban[ip_addr]:
          type: string
        ip_ban[reason]:
          type: string
      required:
      - "ip_ban[ip_addr]"
      - "ip_ban[reason]"
    queryIQDBGet_200_response:
      example:
        posts:
        - score: 6.027456183070403
          post_id: 0.8008281904610115
          post:
            posts:
              comment_count: 6.683562403749608
              file_url: file_url
              is_favorited: true
              rating: s
              last_comment_bumped_at: 2000-01-23T04:56:07.000+00:00
              last_commented_at: 2000-01-23T04:56:07.000+00:00
              source: source
              score: 2.3021358869347655
              has_large: true
              fav_count: 3.616076749251911
              tag_count: 2.027123023002322
              image_height: 7.457744773683766
              bit_flags: 4.965218492984954
              tag_count_character: 1.2315135367772556
              tag_count_invalid: 9.369310271410669
              id: 1.4658129805029452
              tag_count_artist: 7.386281948385884
              down_score: 5.637376656633329
              change_seq: 8.762042012749001
              has_children: true
              tag_count_copyright: 1.0246457001441578
              approver_id: 9.301444243932576
              image_width: 6.84685269835264
              up_score: 5.962133916683182
              last_noted_at: 2000-01-23T04:56:07.000+00:00
              tag_count_lore: 9.018348186070783
              is_rating_locked: true
              has_active_children: true
              parent_id: 1.1730742509559433
              tag_count_general: 4.145608029883936
              is_comment_disabled: true
              is_comment_locked: true
              generated_samples:
              - 720p
              - 720p
              tag_count_meta: 5.025004791520295
              is_flagged: true
              is_pending: true
              uploader_id: 7.061401241503109
              tag_string: tag_string
              created_at: 2000-01-23T04:56:07.000+00:00
              description: description
              pool_ids:
              - 6.438423552598547
              - 6.438423552598547
              duration: duration
              is_status_locked: true
              children_ids: children_ids
              large_file_url: large_file_url
              is_deleted: true
              tag_count_species: 9.965781217890562
              updated_at: 2000-01-23T04:56:07.000+00:00
              is_note_locked: true
              file_size: 1.4894159098541704
              bg_color: bg_color
              has_visible_children: true
              file_ext: file_ext
              preview_file_url: preview_file_url
              locked_tags: locked_tags
              md5: md5
          hash: hash
        - score: 6.027456183070403
          post_id: 0.8008281904610115
          post:
            posts:
              comment_count: 6.683562403749608
              file_url: file_url
              is_favorited: true
              rating: s
              last_comment_bumped_at: 2000-01-23T04:56:07.000+00:00
              last_commented_at: 2000-01-23T04:56:07.000+00:00
              source: source
              score: 2.3021358869347655
              has_large: true
              fav_count: 3.616076749251911
              tag_count: 2.027123023002322
              image_height: 7.457744773683766
              bit_flags: 4.965218492984954
              tag_count_character: 1.2315135367772556
              tag_count_invalid: 9.369310271410669
              id: 1.4658129805029452
              tag_count_artist: 7.386281948385884
              down_score: 5.637376656633329
              change_seq: 8.762042012749001
              has_children: true
              tag_count_copyright: 1.0246457001441578
              approver_id: 9.301444243932576
              image_width: 6.84685269835264
              up_score: 5.962133916683182
              last_noted_at: 2000-01-23T04:56:07.000+00:00
              tag_count_lore: 9.018348186070783
              is_rating_locked: true
              has_active_children: true
              parent_id: 1.1730742509559433
              tag_count_general: 4.145608029883936
              is_comment_disabled: true
              is_comment_locked: true
              generated_samples:
              - 720p
              - 720p
              tag_count_meta: 5.025004791520295
              is_flagged: true
              is_pending: true
              uploader_id: 7.061401241503109
              tag_string: tag_string
              created_at: 2000-01-23T04:56:07.000+00:00
              description: description
              pool_ids:
              - 6.438423552598547
              - 6.438423552598547
              duration: duration
              is_status_locked: true
              children_ids: children_ids
              large_file_url: large_file_url
              is_deleted: true
              tag_count_species: 9.965781217890562
              updated_at: 2000-01-23T04:56:07.000+00:00
              is_note_locked: true
              file_size: 1.4894159098541704
              bg_color: bg_color
              has_visible_children: true
              file_ext: file_ext
              preview_file_url: preview_file_url
              locked_tags: locked_tags
              md5: md5
          hash: hash
      properties:
        posts:
          items:
            $ref: '#/components/schemas/IQDBResponse'
          type: array
      required:
      - posts
    queryIQDPost_request:
      properties:
        search[file]:
          format: binary
          type: string
        search[score_cutoff]:
          type: number
        search[url]:
          type: string
        search[post_id]:
          type: string
        search[hash]:
          type: string
    queryIQDPost_request_1:
      properties:
        score_cutoff:
          type: number
        url:
          type: string
        post_id:
          type: string
        hash:
          type: string
    searchMascots_200_response_anyOf:
      description: No Results
      properties:
        mascots:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - mascots
    searchMascots_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/Mascot'
      - $ref: '#/components/schemas/searchMascots_200_response_anyOf'
    createMascot_request:
      properties:
        mascot[mascot_file]:
          format: binary
          type: string
        mascot[display_name]:
          type: string
        mascot[background_color]:
          type: string
        mascot[artist_url]:
          type: string
        mascot[artist_name]:
          type: string
        mascot[available_on_string]:
          description: Comma separated site names.
          type: string
        mascot[active]:
          type: boolean
        mascot[hide_anonymous]:
          type: boolean
      required:
      - "mascot[artist_name]"
      - "mascot[artist_url]"
      - "mascot[background_color]"
      - "mascot[display_name]"
      - "mascot[mascot_file]"
    editMascot_request:
      properties:
        mascot[mascot_file]:
          format: binary
          type: string
        mascot[display_name]:
          type: string
        mascot[background_color]:
          type: string
        mascot[artist_url]:
          type: string
        mascot[artist_name]:
          type: string
        mascot[available_on_string]:
          description: Comma separated site names.
          type: string
        mascot[active]:
          type: boolean
        mascot[hide_anonymous]:
          type: boolean
    listNewsUpdates_200_response_anyOf:
      description: No Results
      properties:
        news_updates:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - news_updates
    listNewsUpdates_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/NewsUpdate'
      - $ref: '#/components/schemas/listNewsUpdates_200_response_anyOf'
    createNewsUpdate_request:
      properties:
        news_update[message]:
          type: string
      required:
      - "news_update[message]"
    searchNotes_200_response_anyOf:
      description: No Results
      properties:
        notes:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - notes
    searchNotes_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/Note'
      - $ref: '#/components/schemas/searchNotes_200_response_anyOf'
    createNote_request:
      properties:
        note[post_id]:
          type: number
        note[x]:
          type: number
        note[y]:
          type: number
        note[width]:
          type: number
        note[height]:
          type: number
        note[body]:
          type: string
        note[html_id]:
          description: "Passthrough, used in frontend."
          type: string
      required:
      - "note[body]"
      - "note[height]"
      - "note[post_id]"
      - "note[width]"
      - "note[x]"
      - "note[y]"
    createNote_201_response:
      allOf:
      - $ref: '#/components/schemas/Note'
      - properties:
          html_id:
            description: "Passthrough, used in frontend."
            type: string
        required:
        - html_id
      example:
        is_active: true
        html_id: html_id
        created_at: 2000-01-23T04:56:07.000+00:00
        body: body
        version: 7.061401241503109
        updated_at: 2000-01-23T04:56:07.000+00:00
        post_id: 9.301444243932576
        creator_id: 6.027456183070403
        x: 1.4658129805029452
        width: 5.637376656633329
        "y": 5.962133916683182
        creator_name: creator_name
        id: 0.8008281904610115
        height: 2.3021358869347655
    editNote_request:
      properties:
        note[x]:
          type: number
        note[y]:
          type: number
        note[width]:
          type: number
        note[height]:
          type: number
        note[body]:
          type: string
    searchNoteVersions_200_response_anyOf:
      description: No Results
      properties:
        note_versions:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - note_versions
    searchNoteVersions_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/NoteVersion'
      - $ref: '#/components/schemas/searchNoteVersions_200_response_anyOf'
    createPool_request:
      properties:
        pool[name]:
          type: string
        pool[description]:
          type: string
        pool[category]:
          $ref: '#/components/schemas/PoolCategories'
        ipool[s_active]:
          type: boolean
        pool[post_ids_string]:
          description: Space separated list of post IDs. Mutually exclusive with post_ids.
          type: string
        pool[post_ids]:
          description: Array of post IDs. Mutually exclusive with post_ids_string.
          items:
            type: number
          type: array
      required:
      - "pool[name]"
    editPool_request:
      properties:
        pool[name]:
          type: string
        pool[description]:
          type: string
        pool[is_active]:
          type: boolean
        pool[category]:
          $ref: '#/components/schemas/PoolCategories'
        pool[post_ids_string]:
          description: Space separated list of post IDs. Mutually exclusive with post_ids.
          type: string
        pool[post_ids]:
          description: Array of post IDs. Mutually exclusive with post_ids_string.
          items:
            type: number
          type: array
    addPostToPool_request:
      properties:
        pool_id:
          description: Mutually exclusive with pool_name.
          type: number
        pool_name:
          description: Mutually exclusive with pool_id.
          type: string
        post_id:
          type: number
      required:
      - post_id
    removePostFromPool_request:
      properties:
        pool_id:
          type: number
        post_id:
          type: number
      required:
      - pool_id
      - post_id
    searchPoolVersions_200_response_anyOf:
      description: No Results
      properties:
        pool_versions:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - pool_versions
    searchPoolVersions_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/PoolVersion'
      - $ref: '#/components/schemas/searchPoolVersions_200_response_anyOf'
    editPost_request:
      properties:
        post[tag_string]:
          description: Replaces all tags on the post.
          type: string
        post[old_tag_string]:
          description: "The tag string before your edits, used to reconcile conflicts."
          type: string
        post[tag_string_diff]:
          description: "Tags with a minus are removed, else they are added. Mutually\
            \ exclusive with tag_string."
          type: string
        post[source_diff]:
          description: "Sources with a minus are removed, else they are added. It\
            \ is not possible to add inactive sources through this. Mutually exclusive\
            \ with source."
          type: string
        post[source]:
          description: Replaces all sources on the post.
          type: string
        post[old_source]:
          description: "The sources before your edits, used to reconcile conflicts."
          type: string
        post[parent_id]:
          type: number
        post[old_parent_id]:
          type: number
        post[description]:
          type: string
        post[old_description]:
          type: string
        post[rating]:
          $ref: '#/components/schemas/Ratings'
        post[old_rating]:
          $ref: '#/components/schemas/Ratings'
        post[edit_reason]:
          type: string
        post[is_rating_locked]:
          description: You must be Privileged+.
          type: boolean
        post[is_note_locked]:
          description: You must be Janitor+.
          type: boolean
        post[bg_colo]r:
          description: You must be Janitor+.
          type: string
        post[is_comment_locked]:
          description: You must be Admin+.
          type: boolean
        post[is_status_locked]:
          description: You must be Admin+.
          type: boolean
        post[locked_tags]:
          description: You must be Admin+.
          type: string
        post[hide_from_anonymous]:
          description: You must be Admin+.
          type: boolean
        post[hide_from_search_engines]:
          description: You must be Admin+.
          type: boolean
    markPostAsTranslated_request:
      properties:
        translation_check:
          type: boolean
        partially_translated:
          type: boolean
    copyNotesToPost_request:
      properties:
        other_post_id:
          type: number
      required:
      - other_post_id
    unflagPost_request:
      properties:
        approval:
          description: Approves the post if set to "approve".
          type: string
    searchPostSets_200_response_anyOf:
      description: No Results
      properties:
        post_sets:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - post_sets
    searchPostSets_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/PostSet'
      - $ref: '#/components/schemas/searchPostSets_200_response_anyOf'
    createPostSet_request:
      properties:
        post_set[name]:
          type: string
        post_set[shortname]:
          type: string
        post_set[description]:
          type: string
        post_set[is_public]:
          type: boolean
        post_set[ransfer_on_delete]:
          type: boolean
      required:
      - "post_set[name]"
      - "post_set[shortname]"
    editPostSet_request:
      properties:
        post_set[name]:
          type: string
        post_set[shortname]:
          type: string
        post_set[description]:
          type: string
        post_set[is_public]:
          type: boolean
        post_set[transfer_on_delete]:
          type: boolean
    updatePostSetPosts_request:
      properties:
        post_set[post_ids_string]:
          type: string
      required:
      - "post_set[post_ids_string]"
    addPostsToPostSet_request:
      properties:
        post_ids:
          description: "post_ids[]=1&post_ids[]=2"
          items:
            type: number
          type: array
      required:
      - post_ids
    listPostSetsForSelect_200_response:
      example:
        Maintained:
        - null
        - null
        Owned:
        - searchArtists_200_response_inner_allOf_domains_inner_inner
        - searchArtists_200_response_inner_allOf_domains_inner_inner
      properties:
        Owned:
          items:
            $ref: '#/components/schemas/searchArtists_200_response_inner_allOf_domains_inner_inner'
          type: array
        Maintained:
          items:
            $ref: '#/components/schemas/searchArtists_200_response_inner_allOf_domains_inner_inner'
          type: array
    searchPostApprovals_200_response_anyOf:
      description: No Results
      properties:
        post_approvals:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - post_aprovals
    searchPostApprovals_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/PostApproval'
      - $ref: '#/components/schemas/searchPostApprovals_200_response_anyOf'
    searchPostEvents_200_response:
      example:
        post_events:
        - post_id: 1.4658129805029452
          creator_id: 6.027456183070403
          action: deleted
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0.8008281904610115
        - post_id: 1.4658129805029452
          creator_id: 6.027456183070403
          action: deleted
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0.8008281904610115
      properties:
        post_events:
          items:
            $ref: '#/components/schemas/PostEvent'
          type: array
      required:
      - post_events
    searchPostFlags_200_response_anyOf:
      description: No Results
      properties:
        post_flags:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - post_flags
    searchPostFlags_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/PostFlag'
      - $ref: '#/components/schemas/searchPostFlags_200_response_anyOf'
    createPostFlag_request:
      properties:
        post_flag[post_id]:
          type: number
        post_flag[reason_name]:
          enum:
          - uploading_guidelines
          - young_human
          - dnp_artist
          - pay_content
          - trace
          - previously_deleted
          - real_porn
          - corrupt
          - inferior
          type: string
        post_flag[parent_id]:
          type: number
      required:
      - "post_flag[post_id]"
      - "post_flag[reason_name]"
    searchPostReplacements_200_response_anyOf:
      description: No Results
      properties:
        post_replacements:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - post_replacements
    searchPostReplacements_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/PostReplacement'
      - $ref: '#/components/schemas/searchPostReplacements_200_response_anyOf'
    createPostReplacement_request:
      properties:
        post_replacement[replacement_file]:
          description: Mutually exclusive with replacement_url.
          format: binary
          type: string
        post_replacement[replacement_url]:
          description: Mutually exclusive with replacement_file.
          type: string
        post_replacement[reason]:
          type: string
        post_replacement[source]:
          type: string
        post_replacement[as_pending]:
          description: You must be Janitor+.
          type: boolean
      required:
      - "post_replacement[reason]"
    createPostReplacement_200_response:
      example:
        success: true
        location: /posts/1
      properties:
        success:
          enum:
          - true
          type: boolean
        location:
          example: /posts/1
          type: string
      required:
      - location
      - success
    rejectPostReplacement_request:
      properties:
        reason:
          type: string
    createPostVote_200_response:
      example:
        score: 0.8008281904610115
        our_score: 5.962133916683182
        up: 6.027456183070403
        down: 1.4658129805029452
      properties:
        score:
          type: number
        up:
          type: number
        down:
          type: number
        our_score:
          type: number
      required:
      - down
      - our_score
      - score
      - up
    searchTags_200_response_anyOf:
      description: No Results
      properties:
        tags:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - tags
    searchTags_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/Tag'
      - $ref: '#/components/schemas/searchTags_200_response_anyOf'
    editTag_request:
      properties:
        tag[category]:
          $ref: '#/components/schemas/TagCategories'
        tag[is_locked]:
          description: Must be Admin+.
          type: boolean
    correctTag_request:
      properties:
        commit:
          description: "If not set, nothing will happen."
          type: string
      required:
      - commit
    searchTagVersions_200_response_anyOf:
      description: No Results
      properties:
        tag_type_versions:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - tag_type_versions
    searchTagVersions_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/TagTypeVersion'
      - $ref: '#/components/schemas/searchTagVersions_200_response_anyOf'
    searchTagAliases_200_response_anyOf:
      description: No Results
      properties:
        tag_aliases:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - tag_aliases
    searchTagAliases_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/TagAlias'
      - $ref: '#/components/schemas/searchTagAliases_200_response_anyOf'
    editTagAlias_request:
      properties:
        tag_alias[antecedent_name]:
          type: string
        tag_alias[consequent_name]:
          type: string
        tag_alias[forum_topic_id]:
          type: string
    createTagAlias_request:
      properties:
        tag_alias[antecedent_name]:
          type: string
        tag_alias[consequent_name]:
          type: string
        tag_alias[reason]:
          type: string
        tag_alias[skip_forum]:
          description: Must be Admin+.
          type: boolean
      required:
      - "tag_alias[antecedent_name]"
      - "tag_alias[consequent_name]"
      - "tag_alias[reason]"
    searchTagImplications_200_response_anyOf:
      description: No Results
      properties:
        tag_implications:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - tag_implications
    searchTagImplications_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/TagImplication'
      - $ref: '#/components/schemas/searchTagImplications_200_response_anyOf'
    editTagImplication_request:
      properties:
        tag_implication[antecedent_name]:
          type: string
        tag_implication[consequent_name]:
          type: string
        tag_implication[forum_topic_id]:
          type: string
    createTagImplication_request:
      properties:
        tag_implication[antecedent_name]:
          type: string
        tag_implication[consequent_name]:
          type: string
        tag_implication[reason]:
          type: string
        tag_implication[skip_forum]:
          description: Must be Admin+.
          type: boolean
      required:
      - "tag_implication[antecedent_name]"
      - "tag_implication[consequent_name]"
      - "tag_implication[reason]"
    listBulkRelatedTags_request:
      properties:
        query:
          type: string
        category_id:
          $ref: '#/components/schemas/TagCategories'
    searchTakedowns_200_response_anyOf:
      description: No Results
      properties:
        takedowns:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - takedowns
    searchTakedowns_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/Takedown'
      - $ref: '#/components/schemas/searchTakedowns_200_response_anyOf'
    createTakedown_request:
      properties:
        takedown[email]:
          type: string
        takedown[source]:
          type: string
        takedown[instructions]:
          type: string
        takedown[reason]:
          type: string
        takedown[post_ids]:
          description: "takedown[post_ids][]=1&takedown[post_ids][]=2"
          items:
            type: number
          type: array
        takedown[reason_hidden]:
          type: boolean
        takedown[notes]:
          description: Must have the bd staff user flag to use.
          type: string
        takedown[del_post_ids]:
          description: |
            Must have the bd staff user flag to use.
            takedown[del_post_ids][]=1&takedown[del_post_ids][]=2
          items:
            type: number
          type: array
        takedown[status]:
          description: Must have the bd staff user flag to use.
          type: string
      required:
      - "takedown[email]"
      - "takedown[reason]"
    editTakedown_request:
      properties:
        takedown[notes]:
          type: string
        takedown[reason_hidden]:
          type: boolean
        takedown_posts:
          type: string
        process_takedown:
          description: "If not truthy, the takedown will be denied."
          type: boolean
        delete_reason:
          type: string
    addPostsToTakedownByIds_request:
      properties:
        post_ids:
          type: string
      required:
      - post_ids
    addPostsToTakedownByIds_200_response:
      example:
        added_post_ids:
        - 6.027456183070403
        - 6.027456183070403
        added_count: 0.8008281904610115
      properties:
        added_count:
          type: number
        added_post_ids:
          items:
            type: number
          type: array
      required:
      - added_count
      - added_post_ids
    addPostsToTakedownByTags_request:
      properties:
        post_tags:
          type: string
      required:
      - post_tags
    countMatchingPosts_200_response:
      example:
        matched_post_count: 0.8008281904610115
      properties:
        matched_post_count:
          type: number
      required:
      - matched_post_count
    searchTickets_200_response_anyOf:
      description: No Results
      properties:
        tickets:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - tickets
    searchTickets_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/Ticket'
      - $ref: '#/components/schemas/searchTickets_200_response_anyOf'
    editTicket_request:
      properties:
        ticket[status]:
          enum:
          - partial
          - approved
          type: string
        ticket[response]:
          type: string
        ticket[record_type]:
          $ref: '#/components/schemas/WarningTypes'
        ticket[send_update_dmail]:
          description: An update dmail will always be sent when the status is changed.
          type: boolean
      required:
      - "ticket[response]"
    searchUploads_200_response_anyOf:
      description: No Results
      properties:
        uploads:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - uploads
    searchUploads_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/Upload'
      - $ref: '#/components/schemas/searchUploads_200_response_anyOf'
    uploadPost_request:
      properties:
        upload[file]:
          description: Mutually exclusive with direct_url.
          format: binary
          type: string
        upload[direct_url]:
          description: Mutually exclusive with file.
          type: string
        upload[source]:
          type: string
        upload[tag_string]:
          type: string
        upload[rating]:
          $ref: '#/components/schemas/Ratings'
        upload[parent_id]:
          type: number
        upload[description]:
          type: string
        upload[as_pending]:
          description: Must have the "Unrestricted Uploads" permission.
          type: boolean
        upload[locked_rating]:
          description: Must be Privileged+ to use.
          type: boolean
        upload[locked_tags]:
          description: Must be Admin+ to use.
          type: string
      required:
      - "upload[rating]"
      - "upload[tag_string]"
    uploadPost_200_response:
      example:
        post_id: 0.8008281904610115
        success: true
        location: location
      properties:
        success:
          enum:
          - true
          type: boolean
        location:
          type: string
        post_id:
          type: number
      required:
      - location
      - post_id
      - success
    searchUploadWhitelists_200_response_anyOf:
      description: No Results
      properties:
        upload_whitelists:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - upload_whitelists
    searchUploadWhitelists_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/UploadWhitelist'
      - $ref: '#/components/schemas/searchUploadWhitelists_200_response_anyOf'
    createUploadWhitelist_request:
      properties:
        upload_whitelist[allowed]:
          type: string
        upload_whitelist[pattern]:
          type: string
        upload_whitelist[reason]:
          type: string
        upload_whitelist[note]:
          type: string
        upload_whitelist[hidden]:
          type: boolean
      required:
      - "upload_whitelist[allowed]"
      - "upload_whitelist[pattern]"
    editUploadWhitelist_request:
      properties:
        upload_whitelist[allowed]:
          type: string
        upload_whitelist[pattern]:
          type: string
        upload_whitelist[reason]:
          type: string
        upload_whitelist[note]:
          type: string
        upload_whitelist[hidden]:
          type: boolean
    checkIfUrlIsAllowed_200_response:
      example:
        reason: reason
        domain: domain
        is_allowed: true
        url: url
      properties:
        url:
          type: string
        domain:
          type: string
        is_allowed:
          type: boolean
        reason:
          type: string
      required:
      - domain
      - is_allowed
      - reason
      - url
    searchUsers_200_response_inner:
      anyOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/FullUser'
    getUser_200_response:
      anyOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/FullCurrentUser'
    editCurrentUser_request:
      properties:
        user[comment_threshold]:
          type: number
        user[default_image_size]:
          enum:
          - large
          - fit
          - fitv
          - original
          type: string
        user[favorite_tags]:
          type: string
        user[blacklisted_tags]:
          type: string
        user[time_zone]:
          description: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
          type: string
        user[per_page]:
          type: number
        user[custom_style]:
          type: string
        user[description_collapsed_initially]:
          type: boolean
        user[hide_comments]:
          type: boolean
        user[receive_email_notifications]:
          type: boolean
        user[enable_keyboard_navigation]:
          type: boolean
        user[enable_privacy_mode]:
          type: boolean
        user[disable_user_dmails]:
          type: boolean
        user[blacklist_users]:
          type: boolean
        user[show_post_statistics]:
          type: boolean
        user[style_usernames]:
          type: boolean
        user[show_hidden_comments]:
          type: boolean
        user[enable_autocomplete]:
          type: boolean
        user[disable_cropped_thumbnails]:
          type: boolean
        user[enable_safe_mode]:
          type: boolean
        user[disable_responsive_mode]:
          type: boolean
        user[dmail_filter_attributes][id]:
          type: number
        user[dmail_filter_attributes][words]:
          type: string
        user[profile_about]:
          type: string
        user[profile_artinfo]:
          type: string
        user[avatar_id]:
          type: number
        user[enable_compact_uploader]:
          description: You must have uploaded at least 10 posts.
          type: boolean
    updateUserDmailFilter_request:
      properties:
        dmail_filter[words]:
          type: string
      required:
      - "dmail_filter[words]"
    searchUserFeedbacks_200_response_anyOf:
      description: No Results
      properties:
        user_feedbacks:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - user_feedbacks
    searchUserFeedbacks_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/UserFeedback'
      - $ref: '#/components/schemas/searchUserFeedbacks_200_response_anyOf'
    createUserFeedback_request:
      properties:
        user_feedback[user_id]:
          type: number
        user_feedback[user_name]:
          type: string
        user_feedback[body]:
          type: string
        user_feedback[category]:
          $ref: '#/components/schemas/FeedbackCategories'
      required:
      - "user_feedback[body]"
      - "user_feedback[category]"
    editUserFeedback_request:
      properties:
        user_feedback[body]:
          type: string
        user_feedback[category]:
          $ref: '#/components/schemas/FeedbackCategories'
    searchUserNameChangeRequests_200_response_anyOf:
      description: No Results
      properties:
        user_name_change_requests:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - user_name_change_requests
    searchUserNameChangeRequests_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/UserNameChangeRequest'
      - $ref: '#/components/schemas/searchUserNameChangeRequests_200_response_anyOf'
    createUserNameChangeRequest_request:
      properties:
        user_name_change_request[desired_name]:
          type: string
        user_name_change_request[change_reason]:
          type: string
      required:
      - "user_name_change_request[desired_name]"
    createWikiPage_request:
      properties:
        wiki_page[title]:
          type: string
        wiki_page[body]:
          type: string
        wiki_page[edit_reason]:
          type: string
        wiki_page[parent]:
          description: Must be Privileged+ to use.
          type: string
        wiki_page[is_locked]:
          description: Must be Janitor+ to use.
          type: boolean
        wiki_page[is_deleted]:
          description: Must be Janitor+ to use.
          type: boolean
        wiki_page[skip_secondary_validations]:
          description: Must be Janitor+ to use.
          type: boolean
      required:
      - "wiki_page[body]"
      - "wiki_page[title]"
    editWikiPage_request:
      properties:
        wiki_page[body]:
          type: string
        wiki_page[edit_reason]:
          type: string
        wiki_page[parent]:
          description: Must be Privileged+ to use.
          type: string
        wiki_page[title]:
          description: Must be Janitor+ to use.
          type: string
        wiki_page[is_locked]:
          description: Must be Janitor+ to use.
          type: boolean
        wiki_page[is_deleted]:
          description: Must be Janitor+ to use.
          type: boolean
        wiki_page[skip_secondary_validations]:
          description: Must be Janitor+ to use.
          type: boolean
    searchWikiPageVersions_200_response_anyOf:
      description: No Results
      properties:
        wiki_page_versions:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - wiki_page_versions
    searchWikiPageVersions_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/WikiPageVersion'
      - $ref: '#/components/schemas/searchWikiPageVersions_200_response_anyOf'
    getAltList_200_response_inner:
      oneOf:
      - description: ID of concerned user.
        type: number
      - items:
          description: ID of suspected alt.
          type: number
    adminEditUser_request:
      properties:
        user[verified]:
          description: Must have the bd staff user flag to use.
          type: boolean
        user[level]:
          description: Must have the bd staff user flag to promote to Admin+.
          type: number
        user[name]:
          type: string
        user[profile_about]:
          type: string
        user[profile_artinfo]:
          type: string
        user[base_upload_limit]:
          type: number
        user[enable_privacy_mode]:
          type: boolean
        user[email]:
          description: Must have the bd staff user flag to use.
          type: string
        user[can_approve_posts]:
          type: boolean
        user[can_upload_free]:
          type: boolean
        user[no_flagging]:
          type: boolean
        user[replacements_beta]:
          type: boolean
    deletePost_request:
      properties:
        reason:
          description: "If the post does not have an active flag, this is required."
          type: string
        move_favorites:
          description: Move favorites to parent.
          type: boolean
        copy_sources:
          description: Copy sources to parent.
          type: boolean
        copy_tags:
          description: Copy tags to parent.
          type: boolean
        commit:
          description: "If not set, nothing will happen."
          enum:
          - Delete
          type: string
    movePostFavorites_request:
      properties:
        commit:
          description: "If not set, nothing will happen."
          enum:
          - Submit
          type: string
      required:
      - commit
    approvePost_request:
      properties:
        post_id:
          type: number
      required:
      - post_id
    searchPostDisapprovals_200_response_anyOf:
      description: No Results
      properties:
        post_disapprovals:
          items:
            description: TODO default missing array inner type to string
            type: string
          maxItems: 0
          type: array
      required:
      - post_disapprovals
    searchPostDisapprovals_200_response:
      anyOf:
      - items:
          $ref: '#/components/schemas/PostDisapproval'
      - $ref: '#/components/schemas/searchPostDisapprovals_200_response_anyOf'
    createPostDisapproval_request:
      properties:
        post_disapproval[post_id]:
          type: number
        post_disapproval[reason]:
          enum:
          - borderline_quality
          - borderline_relevancy
          - other
          type: string
        post_disapproval[message]:
          type: string
      required:
      - "post_disapproval[post_id]"
      - "post_disapproval[reason]"
    IQDBResponse_post:
      example:
        posts:
          comment_count: 6.683562403749608
          file_url: file_url
          is_favorited: true
          rating: s
          last_comment_bumped_at: 2000-01-23T04:56:07.000+00:00
          last_commented_at: 2000-01-23T04:56:07.000+00:00
          source: source
          score: 2.3021358869347655
          has_large: true
          fav_count: 3.616076749251911
          tag_count: 2.027123023002322
          image_height: 7.457744773683766
          bit_flags: 4.965218492984954
          tag_count_character: 1.2315135367772556
          tag_count_invalid: 9.369310271410669
          id: 1.4658129805029452
          tag_count_artist: 7.386281948385884
          down_score: 5.637376656633329
          change_seq: 8.762042012749001
          has_children: true
          tag_count_copyright: 1.0246457001441578
          approver_id: 9.301444243932576
          image_width: 6.84685269835264
          up_score: 5.962133916683182
          last_noted_at: 2000-01-23T04:56:07.000+00:00
          tag_count_lore: 9.018348186070783
          is_rating_locked: true
          has_active_children: true
          parent_id: 1.1730742509559433
          tag_count_general: 4.145608029883936
          is_comment_disabled: true
          is_comment_locked: true
          generated_samples:
          - 720p
          - 720p
          tag_count_meta: 5.025004791520295
          is_flagged: true
          is_pending: true
          uploader_id: 7.061401241503109
          tag_string: tag_string
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          pool_ids:
          - 6.438423552598547
          - 6.438423552598547
          duration: duration
          is_status_locked: true
          children_ids: children_ids
          large_file_url: large_file_url
          is_deleted: true
          tag_count_species: 9.965781217890562
          updated_at: 2000-01-23T04:56:07.000+00:00
          is_note_locked: true
          file_size: 1.4894159098541704
          bg_color: bg_color
          has_visible_children: true
          file_ext: file_ext
          preview_file_url: preview_file_url
          locked_tags: locked_tags
          md5: md5
      properties:
        posts:
          $ref: '#/components/schemas/IQDBPost'
      required:
      - posts
    Post_file:
      example:
        ext: ext
        size: 5.962133916683182
        width: 6.027456183070403
        url: url
        height: 1.4658129805029452
        md5: md5
      properties:
        width:
          type: number
        height:
          type: number
        ext:
          type: string
        size:
          type: number
        md5:
          type: string
        url:
          nullable: true
          type: string
      required:
      - ext
      - height
      - md5
      - size
      - url
      - width
    Post_preview:
      example:
        width: 5.637376656633329
        url: url
        height: 2.3021358869347655
      properties:
        width:
          type: number
        height:
          type: number
        url:
          nullable: true
          type: string
      required:
      - height
      - url
      - width
    Post_sample_alternates:
      example:
        "720p":
          urls:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          width: 2.027123023002322
          type: video
          height: 3.616076749251911
        original:
          urls:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          width: 2.027123023002322
          type: video
          height: 3.616076749251911
        "480p":
          urls:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          width: 2.027123023002322
          type: video
          height: 3.616076749251911
      properties:
        "480p":
          $ref: '#/components/schemas/PostSampleAlternate'
        "720p":
          $ref: '#/components/schemas/PostSampleAlternate'
        original:
          $ref: '#/components/schemas/PostSampleAlternate'
    Post_sample:
      example:
        width: 9.301444243932576
        has: true
        alternates:
          "720p":
            urls:
            - https://openapi-generator.tech
            - https://openapi-generator.tech
            width: 2.027123023002322
            type: video
            height: 3.616076749251911
          original:
            urls:
            - https://openapi-generator.tech
            - https://openapi-generator.tech
            width: 2.027123023002322
            type: video
            height: 3.616076749251911
          "480p":
            urls:
            - https://openapi-generator.tech
            - https://openapi-generator.tech
            width: 2.027123023002322
            type: video
            height: 3.616076749251911
        url: url
        height: 7.061401241503109
      properties:
        has:
          type: boolean
        height:
          nullable: true
          type: number
        width:
          nullable: true
          type: number
        url:
          nullable: true
          type: string
        alternates:
          $ref: '#/components/schemas/Post_sample_alternates'
      required:
      - alternates
      - has
      - height
      - url
      - width
    Post_score:
      example:
        total: 1.2315135367772556
        up: 4.145608029883936
        down: 7.386281948385884
      properties:
        up:
          type: number
        down:
          type: number
        total:
          type: number
      required:
      - down
      - total
      - up
    Post_tags:
      example:
        general:
        - general
        - general
        copyright:
        - copyright
        - copyright
        character:
        - character
        - character
        lore:
        - lore
        - lore
        artist:
        - artist
        - artist
        species:
        - species
        - species
        meta:
        - meta
        - meta
        invalid:
        - invalid
        - invalid
      properties:
        general:
          items:
            type: string
          type: array
        artist:
          items:
            type: string
          type: array
        copyright:
          items:
            type: string
          type: array
        character:
          items:
            type: string
          type: array
        species:
          items:
            type: string
          type: array
        invalid:
          items:
            type: string
          type: array
        meta:
          items:
            type: string
          type: array
        lore:
          items:
            type: string
          type: array
      required:
      - artist
      - character
      - copyright
      - general
      - invalid
      - lore
      - meta
      - species
    Post_flags:
      example:
        rating_locked: true
        deleted: true
        flagged: true
        pending: true
        status_locked: true
        note_locked: true
      properties:
        pending:
          type: boolean
        flagged:
          type: boolean
        note_locked:
          type: boolean
        status_locked:
          type: boolean
        rating_locked:
          type: boolean
        deleted:
          type: boolean
      required:
      - deleted
      - flagged
      - note_locked
      - pending
      - rating_locked
      - status_locked
    Post_relationships:
      example:
        has_children: true
        has_active_children: true
        children:
        - 1.1730742509559433
        - 1.1730742509559433
        parent_id: 7.457744773683766
      properties:
        parent_id:
          nullable: true
          type: number
        has_children:
          type: boolean
        has_active_children:
          type: boolean
        children:
          items:
            type: number
          type: array
      required:
      - children
      - has_active_children
      - has_children
      - parent_id
    PostSampleAlternate_urls_inner:
      anyOf:
      - format: uri
        nullable: true
        type: string
      - format: uri
        nullable: true
        type: string
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
