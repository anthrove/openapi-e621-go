/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws).

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the IQDBResponsePost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IQDBResponsePost{}

// IQDBResponsePost struct for IQDBResponsePost
type IQDBResponsePost struct {
	Posts IQDBPost `json:"posts"`
}

type _IQDBResponsePost IQDBResponsePost

// NewIQDBResponsePost instantiates a new IQDBResponsePost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIQDBResponsePost(posts IQDBPost) *IQDBResponsePost {
	this := IQDBResponsePost{}
	this.Posts = posts
	return &this
}

// NewIQDBResponsePostWithDefaults instantiates a new IQDBResponsePost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIQDBResponsePostWithDefaults() *IQDBResponsePost {
	this := IQDBResponsePost{}
	return &this
}

// GetPosts returns the Posts field value
func (o *IQDBResponsePost) GetPosts() IQDBPost {
	if o == nil {
		var ret IQDBPost
		return ret
	}

	return o.Posts
}

// GetPostsOk returns a tuple with the Posts field value
// and a boolean to check if the value has been set.
func (o *IQDBResponsePost) GetPostsOk() (*IQDBPost, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Posts, true
}

// SetPosts sets field value
func (o *IQDBResponsePost) SetPosts(v IQDBPost) {
	o.Posts = v
}

func (o IQDBResponsePost) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IQDBResponsePost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["posts"] = o.Posts
	return toSerialize, nil
}

func (o *IQDBResponsePost) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"posts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIQDBResponsePost := _IQDBResponsePost{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIQDBResponsePost)

	if err != nil {
		return err
	}

	*o = IQDBResponsePost(varIQDBResponsePost)

	return err
}

type NullableIQDBResponsePost struct {
	value *IQDBResponsePost
	isSet bool
}

func (v NullableIQDBResponsePost) Get() *IQDBResponsePost {
	return v.value
}

func (v *NullableIQDBResponsePost) Set(val *IQDBResponsePost) {
	v.value = val
	v.isSet = true
}

func (v NullableIQDBResponsePost) IsSet() bool {
	return v.isSet
}

func (v *NullableIQDBResponsePost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIQDBResponsePost(val *IQDBResponsePost) *NullableIQDBResponsePost {
	return &NullableIQDBResponsePost{value: val, isSet: true}
}

func (v NullableIQDBResponsePost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIQDBResponsePost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
