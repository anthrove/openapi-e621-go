/*
E621

OpenAPI definition for E621's API. You can find the source [here](https://github.com/DonovanDMC/E621OpenAPI)<br> This document is intended to compliment E621's existing [API Documentation](https://e621.net/help/api).<br> Note if E621's api is under attack and/or cloudflare protections are enabled, the \"Try it out\" buttons here will not work.<br> If they are not working, you can check this [Unofficial Status Page](https://status.e621.ws). 

API version: d69c34e
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi-e621-go

import (
	"encoding/json"
)

// checks if the MarkPostAsTranslatedRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarkPostAsTranslatedRequest{}

// MarkPostAsTranslatedRequest struct for MarkPostAsTranslatedRequest
type MarkPostAsTranslatedRequest struct {
	TranslationCheck *bool `json:"translation_check,omitempty"`
	PartiallyTranslated *bool `json:"partially_translated,omitempty"`
}

// NewMarkPostAsTranslatedRequest instantiates a new MarkPostAsTranslatedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarkPostAsTranslatedRequest() *MarkPostAsTranslatedRequest {
	this := MarkPostAsTranslatedRequest{}
	return &this
}

// NewMarkPostAsTranslatedRequestWithDefaults instantiates a new MarkPostAsTranslatedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarkPostAsTranslatedRequestWithDefaults() *MarkPostAsTranslatedRequest {
	this := MarkPostAsTranslatedRequest{}
	return &this
}

// GetTranslationCheck returns the TranslationCheck field value if set, zero value otherwise.
func (o *MarkPostAsTranslatedRequest) GetTranslationCheck() bool {
	if o == nil || IsNil(o.TranslationCheck) {
		var ret bool
		return ret
	}
	return *o.TranslationCheck
}

// GetTranslationCheckOk returns a tuple with the TranslationCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarkPostAsTranslatedRequest) GetTranslationCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.TranslationCheck) {
		return nil, false
	}
	return o.TranslationCheck, true
}

// HasTranslationCheck returns a boolean if a field has been set.
func (o *MarkPostAsTranslatedRequest) HasTranslationCheck() bool {
	if o != nil && !IsNil(o.TranslationCheck) {
		return true
	}

	return false
}

// SetTranslationCheck gets a reference to the given bool and assigns it to the TranslationCheck field.
func (o *MarkPostAsTranslatedRequest) SetTranslationCheck(v bool) {
	o.TranslationCheck = &v
}

// GetPartiallyTranslated returns the PartiallyTranslated field value if set, zero value otherwise.
func (o *MarkPostAsTranslatedRequest) GetPartiallyTranslated() bool {
	if o == nil || IsNil(o.PartiallyTranslated) {
		var ret bool
		return ret
	}
	return *o.PartiallyTranslated
}

// GetPartiallyTranslatedOk returns a tuple with the PartiallyTranslated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarkPostAsTranslatedRequest) GetPartiallyTranslatedOk() (*bool, bool) {
	if o == nil || IsNil(o.PartiallyTranslated) {
		return nil, false
	}
	return o.PartiallyTranslated, true
}

// HasPartiallyTranslated returns a boolean if a field has been set.
func (o *MarkPostAsTranslatedRequest) HasPartiallyTranslated() bool {
	if o != nil && !IsNil(o.PartiallyTranslated) {
		return true
	}

	return false
}

// SetPartiallyTranslated gets a reference to the given bool and assigns it to the PartiallyTranslated field.
func (o *MarkPostAsTranslatedRequest) SetPartiallyTranslated(v bool) {
	o.PartiallyTranslated = &v
}

func (o MarkPostAsTranslatedRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarkPostAsTranslatedRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TranslationCheck) {
		toSerialize["translation_check"] = o.TranslationCheck
	}
	if !IsNil(o.PartiallyTranslated) {
		toSerialize["partially_translated"] = o.PartiallyTranslated
	}
	return toSerialize, nil
}

type NullableMarkPostAsTranslatedRequest struct {
	value *MarkPostAsTranslatedRequest
	isSet bool
}

func (v NullableMarkPostAsTranslatedRequest) Get() *MarkPostAsTranslatedRequest {
	return v.value
}

func (v *NullableMarkPostAsTranslatedRequest) Set(val *MarkPostAsTranslatedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMarkPostAsTranslatedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMarkPostAsTranslatedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarkPostAsTranslatedRequest(val *MarkPostAsTranslatedRequest) *NullableMarkPostAsTranslatedRequest {
	return &NullableMarkPostAsTranslatedRequest{value: val, isSet: true}
}

func (v NullableMarkPostAsTranslatedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarkPostAsTranslatedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


